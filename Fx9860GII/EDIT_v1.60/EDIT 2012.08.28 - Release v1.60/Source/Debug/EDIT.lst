SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\github\fx9860gii\EDIT_v1.60\EDIT 2012.08.28 - Release v1.60\Source\EDIT.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c     1    // ----------------------------------------------------------------
          EDIT.c     2    // Text editor for Casio FX-9860G Ver 1.6
          EDIT.c     3    
          EDIT.c     4    // ----------------------------------------------------------------
          EDIT.c     5    // Includes
          EDIT.c     6    #include "fxlib.h"
          EDIT.c     7    #include "stdio.h"
          EDIT.c     8    #include "ctype.h"
          EDIT.c     9    #include "string.h"
          EDIT.c    10    #include "console.h"
          EDIT.c    11    #include "math.h"
          EDIT.c    12    #include "font.h"
          EDIT.c    13    #include "menu.h"
          EDIT.c    14    
          EDIT.c    15    // ----------------------------------------------------------------
          EDIT.c    16    // Constants
          EDIT.c    17    
          EDIT.c    18    // Text buffer size
          EDIT.c    19    #define MAXLINE    2048
          EDIT.c    20    #define TXTMINSIZE 4096
          EDIT.c    21    #define TXTMINCLIP 1024
          EDIT.c    22    #define MAXFNAME   13
          EDIT.c    23    #define MAXFNAMEMM 9
          EDIT.c    24    #define MAXPATH    50
          EDIT.c    25    #define MINFILES   32
          EDIT.c    26    #define MINFOLDERS 16
          EDIT.c    27    #define MAINHEADER 20
          EDIT.c    28    #define MAXCHARMAP 20
          EDIT.c    29    
          EDIT.c    30    //Main memory directory functions
          EDIT.c    31    #define INITIALIZE   1
          EDIT.c    32    #define CHECKENTRY   2
          EDIT.c    33    #define CREATE       3
          EDIT.c    34    #define DELETE       4 
          EDIT.c    35    #define DELETEFOLDER 5 
          EDIT.c    36    #define FINDSTART    6
          EDIT.c    37    #define FINDGET      7 
          EDIT.c    38    
          EDIT.c    39    //Special characters
          EDIT.c    40    #define ENDMARK   12
          EDIT.c    41    #define NEWLINECR 13
          EDIT.c    42    #define NEWLINELF 10
          EDIT.c    43    #define ARROWUP   "\xE6\x92"
          EDIT.c    44    #define ARROWDOWN "\xE6\x93"
          EDIT.c    45    
          EDIT.c    46    //Explorer modes
          EDIT.c    47    #define EXPLOREROPEN 1
          EDIT.c    48    #define EXPLORERAUTO 2
          EDIT.c    49    
          EDIT.c    50    //Application mode
          EDIT.c    51    #define EDITOR   1
          EDIT.c    52    #define EXPLORER 2
          EDIT.c    53    
          EDIT.c    54    //New line mode




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c    55    #define NEWLMODELF   0 
          EDIT.c    56    #define NEWLMODECRLF 1
          EDIT.c    57    
          EDIT.c    58    //Info bar mode
          EDIT.c    59    #define INFOBARFOLDER 1
          EDIT.c    60    #define INFOBARCURSOR 2
          EDIT.c    61    
          EDIT.c    62    //Configuration file
          EDIT.c    63    #define CONFIGFILE  "EDIT.CFG"
          EDIT.c    64    #define MAINDIRFILE "EDIT.DIR"
          EDIT.c    65    #define MAINDIRTEMP "EDIT.TMP"
          EDIT.c    66    
          EDIT.c    67    //Configuration options
          EDIT.c    68    #define CONFIGTRYSD  0
          EDIT.c    69    #define CONFIGHIDSYS 1
          EDIT.c    70    #define CONFIGNLMODE 2
          EDIT.c    71    #define CONFIGWWRAP  3
          EDIT.c    72    #define CONFIGDFRE   4
          EDIT.c    73    #define CONFIGDROO   5
          EDIT.c    74    #define CONFIGFONT   6
          EDIT.c    75    #define CONFIGINFO   7
          EDIT.c    76    #define CONFIGTEXTB  8
          EDIT.c    77    #define CONFIGCLIPB  9
          EDIT.c    78    #define CONFIGNFIL   10
          EDIT.c    79    #define CONFIGNFOL   11
          EDIT.c    80    #define CONFIGAOPEN  12
          EDIT.c    81    #define CONFIGAROOT  13
          EDIT.c    82    #define CONFIGANAME  14
          EDIT.c    83    #define CONFIGAFOLDR 15
          EDIT.c    84    
          EDIT.c    85    //Cursor commands
          EDIT.c    86    #define CURSORTOP      1
          EDIT.c    87    #define CURSORBOTTOM   2
          EDIT.c    88    #define CURSORPAGEDOWN 3
          EDIT.c    89    #define CURSORPAGEUP   4
          EDIT.c    90    #define CURSORRIGHT    5
          EDIT.c    91    #define CURSORLEFT     6
          EDIT.c    92    #define CURSORDOWN     7
          EDIT.c    93    #define CURSORUP       8
          EDIT.c    94    #define CURSORHOME     9
          EDIT.c    95    #define CURSOREND     10
          EDIT.c    96    #define CURSORMARK    11
          EDIT.c    97    #define CURSORFIND    12
          EDIT.c    98    
          EDIT.c    99    //Font contexts
          EDIT.c   100    #define CONTXEDITS 1 //Edit window small font
          EDIT.c   101    #define CONTXEDITT 2 //Edit window tall  font
          EDIT.c   102    #define CONTXEDITM 3 //Edit window medium font
          EDIT.c   103    #define CONTXEDITL 4 //Edit window large font
          EDIT.c   104    
          EDIT.c   105    //Version
          EDIT.c   106    #define EDITVERSION "EDIT16"
          EDIT.c   107    
          EDIT.c   108    //MainMemory check
          EDIT.c   109    #define FMAXLEN(s) (strcmp(s,"main")==0?MAXFNAMEMM-1:MAXFNAME-1)
          EDIT.c   110    
          EDIT.c   111    // ----------------------------------------------------------------




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   112    // Types
          EDIT.c   113    
          EDIT.c   114    //Directory
          EDIT.c   115    struct Direc{
          EDIT.c   116      char sCName[MAXFNAME];
          EDIT.c   117      unsigned short iType;
          EDIT.c   118      unsigned long iSize;
          EDIT.c   119      unsigned char cSort;
          EDIT.c   120      unsigned char cSystem;
          EDIT.c   121    };
          EDIT.c   122    
          EDIT.c   123    //Directory file structure (main memory)
          EDIT.c   124    struct MainDir{
          EDIT.c   125      char sName[MAXFNAMEMM];
          EDIT.c   126      char sFolder[MAXFNAMEMM];
          EDIT.c   127    };
          EDIT.c   128    
          EDIT.c   129    //Char map
          EDIT.c   130    struct CharMap{
          EDIT.c   131      int iKey;
          EDIT.c   132      char cAscii;
          EDIT.c   133    };
          EDIT.c   134    
          EDIT.c   135    //Configuration settings
          EDIT.c   136    struct Config{
          EDIT.c   137      char sVersion[8];                    //Version string
          EDIT.c   138      int iTrySD;                          //Try SD card
          EDIT.c   139      int iHideSysFiles;                   //Hide system files in file explorer
          EDIT.c   140      int iNLMode;                         //New line mode
          EDIT.c   141      int iWordWrap;                       //Word wrap enable
          EDIT.c   142      int iDispFree;                       //Disp bytes free in explorer
          EDIT.c   143      char sDefRoot[5];                    //Default root
          EDIT.c   144      int iFont;                           //Text font
          EDIT.c   145      int iInfo;                           //Info bar (1=Folder, 2=Cursor)
          EDIT.c   146      int iAutoOpen;                       //Open file on application open
          EDIT.c   147      char sAutoRoot[5];                   //Root drive for auto open
          EDIT.c   148      char sAutoFile[MAXFNAME];            //File name for auto open
          EDIT.c   149      char sAutoFolder[MAXFNAME];          //Folder name for auto open
          EDIT.c   150      int iTextBuffer;                     //Text buffer size
          EDIT.c   151      int iClipBuffer;                     //Clip buffer size
          EDIT.c   152      int iMaxFiles;                       //Maximum files per directory
          EDIT.c   153      int iMaxFolders;                     //Maximum number of total folders
          EDIT.c   154      struct CharMap sCharMap[MAXCHARMAP]; //Char map
          EDIT.c   155    };
          EDIT.c   156    
          EDIT.c   157    // ----------------------------------------------------------------
          EDIT.c   158    // Global variables
          EDIT.c   159    char _sRoot[5];          //Root directory
          EDIT.c   160    char _sFolder[MAXFNAME]; //Folder name
          EDIT.c   161    char _sFile[MAXFNAME];   //File name
          EDIT.c   162    char *_sText;            //Text buffer
          EDIT.c   163    char *_sClip;            //Clip buffer
          EDIT.c   164    int _iBinary;            //Binary file
          EDIT.c   165    int _iSaved;             //Saved file
          EDIT.c   166    int _iNewFile;           //New file flag
          EDIT.c   167    struct Config _sConfig;  //Configuration variables
          EDIT.c   168    int _iTextSize;          //Text buffer size




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   169    int _iClipSize;          //Clip buffer size
          EDIT.c   170    int _iAppMode;           //Application mode
          EDIT.c   171    struct Direc *_sFiles;   //File directory
          EDIT.c   172    struct Direc *_sFolders; //Folder directory
          EDIT.c   173    
          EDIT.c   174    // ----------------------------------------------------------------
          EDIT.c   175    // Prototypes
          EDIT.c   176    int Editor(char *,char *,char *,int,struct Config *);
          EDIT.c   177    char BindCharHandle(struct Config *);
          EDIT.c   178    void QuitHandler(void);
          EDIT.c   179    int SDCardPresent(void);
          EDIT.c   180    void MoveCursor(int,int,int *,int *,int *,int *,int *,int,int *,char *,int);
          EDIT.c   181    void PrintFileName(char *,char *,int,int);
          EDIT.c   182    void PrintInfoBar(char *,int,int,struct Config *);
          EDIT.c   183    void PrintLineNumber(int,int);
          EDIT.c   184    void DumpTextLines(char *,int *,int,int,int,int,int);
          EDIT.c   185    void CalcLines(char *,int *,int *,int,int,struct Config *);
          EDIT.c   186    int LineLength(int,char *,int *,int);
          EDIT.c   187    int MainDirectory(int,char *,char *);
          EDIT.c   188    void ReadDirectory(char *,char *,struct Direc *,int *,int,unsigned char,int,int);
          EDIT.c   189    int Explorer(int,char *, char *, char *,struct Config *,int *);
          EDIT.c   190    void AppendDirEntry(int,struct Direc *,struct Direc *);
          EDIT.c   191    void PrintFileEntry(int,int,int,int,struct Direc *,int);
          EDIT.c   192    int GetFolder(char *,char *,struct Config *);
          EDIT.c   193    void PrintFolderEntry(int ,struct Direc *, int);
          EDIT.c   194    void Configuration(struct Config *);
          EDIT.c   195    void PrintConfigEntry(int,int,struct Config *,int);
          EDIT.c   196    void ConfigExport(struct Config *);
          EDIT.c   197    void ConfigImport(struct Config *);
          EDIT.c   198    char *Font2Char(FONTCHARACTER *,char *);
          EDIT.c   199    FONTCHARACTER *Char2Font(char *,FONTCHARACTER *);
          EDIT.c   200    FONTCHARACTER *FilePath(char *,char *,char *,FONTCHARACTER *);
          EDIT.c   201    int FolderExist(char *,char *,struct Config *);
          EDIT.c   202    int FileExist(char *,char *,char *);
          EDIT.c   203    int ReadFile(char *,char *,char *,char *, int *);
          EDIT.c   204    int WriteFile(char *,char *,char *,char *,int);
          EDIT.c   205    int CopyFile(char *,char *,char *,char *,char *,char *);
          EDIT.c   206    int DeleteFile(char *,char *,char *);
          EDIT.c   207    void ConvertNewLine2CRLF(char *);
          EDIT.c   208    void ConvertNewLine2LF(char *);
          EDIT.c   209    int PopupContinueYesNo(char *,char *,char *);
          EDIT.c   210    void PopupMessage(int,char *,char *,char *,char *,char*);
          EDIT.c   211    void PopupMemory(struct Config *);
          EDIT.c   212    int GetFileName(char *,int);
          EDIT.c   213    int GetFolderName(char *);
          EDIT.c   214    int GetSearchString(char *);
          EDIT.c   215    void HelpText(void);
          EDIT.c   216    void SetEditorFont(int,int *);
          EDIT.c   217    void AboutPopup(void);
          EDIT.c   218    char CharacterSelect(int,struct Config *);
          EDIT.c   219    void Rectangle(int,int,int,int,int);
          EDIT.c   220    
          EDIT.c   221    // ---------------------------------------------------------------
          EDIT.c   222    // Main program
          EDIT.c   223    int AddIn_main(int isAppli, unsigned short OptionNum)
P   00000000              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=348




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; used runtime library name:
                                                           ; __slow_mvn, __slow_strcpy
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
    0000000A 2F96                   MOV.L       R9,@-R15
    0000000C 2F86                   MOV.L       R8,@-R15
    0000000E 4F22                   STS.L       PR,@-R15
    00000010 907E                   MOV.W       L5024,R0   ; H'FED4
    00000012 3F0C                   ADD         R0,R15
          EDIT.c   224    {
          EDIT.c   225        //Variables
          EDIT.c   226        int iAuto;                   //Auto Open file
          EDIT.c   227        int iNew;                    //New file flag
          EDIT.c   228        struct Config sConfig;       //Configuration variables
          EDIT.c   229        char sRoot[5];               //Root directory
          EDIT.c   230        char sFolder[MAXFNAME]="";   //Folder name
    00000014 D241                   MOV.L       L5024+12,R2; L497
    00000016 6EF3                   MOV         R15,R14
    00000018 D341                   MOV.L       L5024+16,R3; __slow_mvn
    0000001A 61F3                   MOV         R15,R1
    0000001C 7E14                   ADD         #20,R14
    0000001E 7114                   ADD         #20,R1
    00000020 430B                   JSR         @R3
    00000022 E00D                   MOV         #13,R0
          EDIT.c   231        char sFile[MAXFNAME]="";     //File name
    00000024 D23F                   MOV.L       L5024+20,R2; L499
    00000026 6DF3                   MOV         R15,R13
    00000028 D33D                   MOV.L       L5024+16,R3; __slow_mvn
    0000002A 61F3                   MOV         R15,R1
    0000002C 7D04                   ADD         #4,R13
    0000002E 7104                   ADD         #4,R1
    00000030 430B                   JSR         @R3
    00000032 E00D                   MOV         #13,R0
          EDIT.c   232        
          EDIT.c   233        //Initializations
          EDIT.c   234        Bdisp_AllClr_DDVRAM();
    00000034 D13C                   MOV.L       L5024+24,R1; _Bdisp_AllClr_DDVRAM
    00000036 410B                   JSR         @R1
    00000038 0009                   NOP
          EDIT.c   235        MenuInitialize();
    0000003A D23C                   MOV.L       L5024+28,R2; _MenuInitialize
    0000003C 420B                   JSR         @R2
    0000003E 0009                   NOP
          EDIT.c   236        MainDirectory(INITIALIZE,"","");
    00000040 D63B                   MOV.L       L5024+32,R6; L500
    00000042 6563                   MOV         R6,R5
    00000044 D33B                   MOV.L       L5024+36,R3; _MainDirectory
    00000046 430B                   JSR         @R3
    00000048 E401                   MOV         #1,R4
          EDIT.c   237        DefineFontContext(CONTXEDITS,FONTS,COLNOR,1,2);
    0000004A E202                   MOV         #2,R2
    0000004C DC3A                   MOV.L       L5024+40,R12; _DefineFontContext
    0000004E E701                   MOV         #1,R7
    00000050 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000052 E600                   MOV         #0,R6
    00000054 6563                   MOV         R6,R5
    00000056 4C0B                   JSR         @R12
    00000058 6473                   MOV         R7,R4
          EDIT.c   238        DefineFontContext(CONTXEDITT,FONTT,COLNOR,1,0);
    0000005A E300                   MOV         #0,R3
    0000005C 2F36                   MOV.L       R3,@-R15
    0000005E E701                   MOV         #1,R7
    00000060 6633                   MOV         R3,R6
    00000062 6573                   MOV         R7,R5
    00000064 4C0B                   JSR         @R12
    00000066 E402                   MOV         #2,R4
          EDIT.c   239        DefineFontContext(CONTXEDITM,FONTM,COLNOR,1,0);
    00000068 E200                   MOV         #0,R2
    0000006A E701                   MOV         #1,R7
    0000006C 2F26                   MOV.L       R2,@-R15
    0000006E 6623                   MOV         R2,R6
    00000070 E502                   MOV         #2,R5
    00000072 4C0B                   JSR         @R12
    00000074 E403                   MOV         #3,R4
          EDIT.c   240        DefineFontContext(CONTXEDITL,FONTL,COLNOR,0,0);
    00000076 E300                   MOV         #0,R3
    00000078 2F36                   MOV.L       R3,@-R15
    0000007A 6733                   MOV         R3,R7
    0000007C 6633                   MOV         R3,R6
    0000007E E503                   MOV         #3,R5
    00000080 4C0B                   JSR         @R12
    00000082 E404                   MOV         #4,R4
          EDIT.c   241        
          EDIT.c   242        //Import Configuration file
          EDIT.c   243        ConfigImport(&sConfig);
    00000084 D22D                   MOV.L       L5024+44,R2; _ConfigImport
    00000086 7F10                   ADD         #16,R15
    00000088 64F3                   MOV         R15,R4
    0000008A 420B                   JSR         @R2
    0000008C 742C                   ADD         #44,R4
          EDIT.c   244        
          EDIT.c   245        //Default root
          EDIT.c   246        strcpy(sRoot,sConfig.sDefRoot);
    0000008E 61F3                   MOV         R15,R1
    00000090 D32B                   MOV.L       L5024+48,R3; __slow_strcpy
    00000092 60F3                   MOV         R15,R0
    00000094 7148                   ADD         #72,R1
    00000096 430B                   JSR         @R3
    00000098 7024                   ADD         #36,R0
          EDIT.c   247        
          EDIT.c   248        //Allocate memory for text buffer
          EDIT.c   249        _sText=(char *)malloc(sConfig.iTextBuffer+MAXLINE);
    0000009A E07C                   MOV         #124,R0
    0000009C D829                   MOV.L       L5024+52,R8; __sText
    0000009E DC2A                   MOV.L       L5024+56,R12; _malloc
    000000A0 9337                   MOV.W       L5024+2,R3 ; H'0800
    000000A2 04FE                   MOV.L       @(R0,R15),R4
    000000A4 4C0B                   JSR         @R12
    000000A6 343C                   ADD         R3,R4
          EDIT.c   250        if(_sText==NULL) 
    000000A8 D928                   MOV.L       L5024+60,R9; L506




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000AA 6303                   MOV         R0,R3
    000000AC DA28                   MOV.L       L5024+64,R10; L503
    000000AE 2338                   TST         R3,R3
    000000B0 DB28                   MOV.L       L5024+68,R11; L505
    000000B2 8F0E                   BF/S        L4049
    000000B4 2802                   MOV.L       R0,@R8
          EDIT.c   251        {
          EDIT.c   252          PopupMessage(1,"Not enough memory","for text buffer.","Minimum size set.","Restart program!",NULL);
    000000B6 E300                   MOV         #0,R3
    000000B8 D627                   MOV.L       L5024+72,R6; L504
    000000BA 65A3                   MOV         R10,R5
    000000BC D227                   MOV.L       L5024+76,R2; _PopupMessage
    000000BE 67B3                   MOV         R11,R7
    000000C0 2F36                   MOV.L       R3,@-R15
    000000C2 2F96                   MOV.L       R9,@-R15
    000000C4 420B                   JSR         @R2
    000000C6 E401                   MOV         #1,R4
          EDIT.c   253          sConfig.iTextBuffer=TXTMINSIZE;     
    000000C8 9324                   MOV.W       L5024+4,R3 ; H'1000
    000000CA E07C                   MOV         #124,R0
    000000CC 7F08                   ADD         #8,R15
    000000CE A08B                   BRA         L1577
    000000D0 0F36                   MOV.L       R3,@(R0,R15)
    000000D2              L4049:                            
          EDIT.c   254          ConfigExport(&sConfig);
          EDIT.c   255          goto terminate;
          EDIT.c   256        }
          EDIT.c   257        _iTextSize=sConfig.iTextBuffer;
    000000D2 E07C                   MOV         #124,R0
    000000D4 D122                   MOV.L       L5024+80,R1; __iTextSize
          EDIT.c   258        memset(_sText,0,_iTextSize);
    000000D6 E500                   MOV         #0,R5
    000000D8 D322                   MOV.L       L5024+84,R3; _memset
    000000DA 02FE                   MOV.L       @(R0,R15),R2
    000000DC 2122                   MOV.L       R2,@R1
    000000DE 6623                   MOV         R2,R6
    000000E0 430B                   JSR         @R3
    000000E2 6482                   MOV.L       @R8,R4
          EDIT.c   259        
          EDIT.c   260        //Allocate memory for clip buffer
          EDIT.c   261        _sClip=(char *)malloc(sConfig.iClipBuffer);
    000000E4 D820                   MOV.L       L5024+88,R8; __sClip
    000000E6 9016                   MOV.W       L5024+6,R0 ; H'0080
    000000E8 4C0B                   JSR         @R12
    000000EA 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c   262        if(_sClip==NULL) 
    000000EC 6303                   MOV         R0,R3
    000000EE 2338                   TST         R3,R3
    000000F0 8F3E                   BF/S        L4050
    000000F2 2802                   MOV.L       R0,@R8
          EDIT.c   263        {
          EDIT.c   264          PopupMessage(1,"Not enough memory","for clip buffer.","Minimum size set.","Restart program!",NULL);
    000000F4 D61D                   MOV.L       L5024+92,R6; L509
    000000F6 65A3                   MOV         R10,R5
    000000F8 D218                   MOV.L       L5024+76,R2; _PopupMessage
    000000FA E300                   MOV         #0,R3
    000000FC 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000FE 67B3                   MOV         R11,R7
    00000100 2F96                   MOV.L       R9,@-R15
    00000102 420B                   JSR         @R2
    00000104 E401                   MOV         #1,R4
    00000106 7F08                   ADD         #8,R15
          EDIT.c   265          sConfig.iClipBuffer=TXTMINCLIP;     
    00000108 9306                   MOV.W       L5024+8,R3 ; H'0400
    0000010A 9004                   MOV.W       L5024+6,R0 ; H'0080
    0000010C A06C                   BRA         L1577
    0000010E 0F36                   MOV.L       R3,@(R0,R15)
    00000110              L5024:                            
    00000110 FED4                   .DATA.W     H'FED4
    00000112 0800                   .DATA.W     H'0800
    00000114 1000                   .DATA.W     H'1000
    00000116 0080                   .DATA.W     H'0080
    00000118 0400                   .DATA.W     H'0400
    0000011A 0000                   .DATA.W     0
    0000011C <00000000>             .DATA.L     L497
    00000120 <00000000>             .DATA.L     __slow_mvn
    00000124 <00000000>             .DATA.L     L499
    00000128 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    0000012C <00000000>             .DATA.L     _MenuInitialize
    00000130 <00000000>             .DATA.L     L500
    00000134 <00000000>             .DATA.L     _MainDirectory
    00000138 <00000000>             .DATA.L     _DefineFontContext
    0000013C <00000000>             .DATA.L     _ConfigImport
    00000140 <00000000>             .DATA.L     __slow_strcpy
    00000144 <00000000>             .DATA.L     __sText
    00000148 <00000000>             .DATA.L     _malloc
    0000014C <00000000>             .DATA.L     L506
    00000150 <00000000>             .DATA.L     L503
    00000154 <00000000>             .DATA.L     L505
    00000158 <00000000>             .DATA.L     L504
    0000015C <00000000>             .DATA.L     _PopupMessage
    00000160 <00000000>             .DATA.L     __iTextSize
    00000164 <00000000>             .DATA.L     _memset
    00000168 <00000000>             .DATA.L     __sClip
    0000016C <00000000>             .DATA.L     L509
    00000170              L4050:                            
          EDIT.c   266          ConfigExport(&sConfig);
          EDIT.c   267          goto terminate;
          EDIT.c   268        }
          EDIT.c   269        _iClipSize=sConfig.iClipBuffer;
    00000170 9087                   MOV.W       L5025,R0   ; H'0080
          EDIT.c   270        memset(_sClip,0,_iClipSize);
    00000172 E500                   MOV         #0,R5
    00000174 D346                   MOV.L       L5025+14,R3; _memset
    00000176 01FE                   MOV.L       @(R0,R15),R1
    00000178 D244                   MOV.L       L5025+10,R2; __iClipSize
    0000017A 6613                   MOV         R1,R6
    0000017C 2212                   MOV.L       R1,@R2
    0000017E 430B                   JSR         @R3
    00000180 6482                   MOV.L       @R8,R4
          EDIT.c   271        
          EDIT.c   272        //Allocate memory for file directory buffer
          EDIT.c   273        _sFiles=(struct Direc *)malloc(sConfig.iMaxFiles*sizeof(struct Direc));
    00000182 907F                   MOV.W       L5025+2,R0 ; H'0084




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000184 04FE                   MOV.L       @(R0,R15),R4
    00000186 6343                   MOV         R4,R3
    00000188 4400                   SHLL        R4
    0000018A 343C                   ADD         R3,R4
    0000018C 4408                   SHLL2       R4
    0000018E 4C0B                   JSR         @R12
    00000190 4400                   SHLL        R4
          EDIT.c   274        if(_sFiles==NULL) 
    00000192 2008                   TST         R0,R0
    00000194 D33F                   MOV.L       L5025+18,R3; __sFiles
    00000196 8F0E                   BF/S        L4051
    00000198 2302                   MOV.L       R0,@R3
          EDIT.c   275        {
          EDIT.c   276          PopupMessage(1,"Not enough memory","for file buffer.","Minimum size set.",
          EDIT.c   277                         "Restart program!",NULL);
    0000019A E100                   MOV         #0,R1
    0000019C D63E                   MOV.L       L5025+22,R6; L511
    0000019E 65A3                   MOV         R10,R5
    000001A0 D33E                   MOV.L       L5025+26,R3; _PopupMessage
    000001A2 67B3                   MOV         R11,R7
    000001A4 2F16                   MOV.L       R1,@-R15
    000001A6 2F96                   MOV.L       R9,@-R15
    000001A8 430B                   JSR         @R3
    000001AA E401                   MOV         #1,R4
          EDIT.c   278          sConfig.iMaxFiles=MINFILES;     
    000001AC 906A                   MOV.W       L5025+2,R0 ; H'0084
    000001AE 7F08                   ADD         #8,R15
    000001B0 E220                   MOV         #32,R2
    000001B2 A019                   BRA         L1577
    000001B4 0F26                   MOV.L       R2,@(R0,R15)
    000001B6              L4051:                            
          EDIT.c   279          ConfigExport(&sConfig);
          EDIT.c   280          goto terminate;
          EDIT.c   281        }
          EDIT.c   282        
          EDIT.c   283        //Allocate memory for folder directory buffer
          EDIT.c   284        _sFolders=(struct Direc *)malloc(sConfig.iMaxFolders*sizeof(struct Direc));
    000001B6 9066                   MOV.W       L5025+4,R0 ; H'0088
    000001B8 04FE                   MOV.L       @(R0,R15),R4
    000001BA 6343                   MOV         R4,R3
    000001BC 4400                   SHLL        R4
    000001BE 343C                   ADD         R3,R4
    000001C0 4408                   SHLL2       R4
    000001C2 4C0B                   JSR         @R12
    000001C4 4400                   SHLL        R4
          EDIT.c   285        if(_sFolders==NULL) 
    000001C6 2008                   TST         R0,R0
    000001C8 D335                   MOV.L       L5025+30,R3; __sFolders
    000001CA 8F13                   BF/S        L4052
    000001CC 2302                   MOV.L       R0,@R3
          EDIT.c   286        {
          EDIT.c   287          PopupMessage(1,"Not enough memory","for folder buffer","Minimum size set.",
          EDIT.c   288                         "Restart program!",NULL);
    000001CE E100                   MOV         #0,R1
    000001D0 D634                   MOV.L       L5025+34,R6; L513
    000001D2 65A3                   MOV         R10,R5
    000001D4 D331                   MOV.L       L5025+26,R3; _PopupMessage




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001D6 67B3                   MOV         R11,R7
    000001D8 2F16                   MOV.L       R1,@-R15
    000001DA 2F96                   MOV.L       R9,@-R15
    000001DC 430B                   JSR         @R3
    000001DE E401                   MOV         #1,R4
          EDIT.c   289          sConfig.iMaxFolders=MINFOLDERS;     
    000001E0 9051                   MOV.W       L5025+4,R0 ; H'0088
    000001E2 7F08                   ADD         #8,R15
    000001E4 E210                   MOV         #16,R2
    000001E6 0F26                   MOV.L       R2,@(R0,R15)
    000001E8              L1577:
          EDIT.c   290          ConfigExport(&sConfig);
    000001E8 D32F                   MOV.L       L5025+38,R3; _ConfigExport
    000001EA 64F3                   MOV         R15,R4
    000001EC 430B                   JSR         @R3
    000001EE 742C                   ADD         #44,R4
          EDIT.c   291          goto terminate;
    000001F0 A038                   BRA         __$terminate$507
    000001F2 0009                   NOP
    000001F4              L4052:                            
          EDIT.c   292        }
          EDIT.c   293        
          EDIT.c   294        //Set quit handler
          EDIT.c   295        SetQuitHandler(QuitHandler);   
    000001F4 D42D                   MOV.L       L5025+42,R4; _QuitHandler
    000001F6 D32E                   MOV.L       L5025+46,R3; _SetQuitHandler
    000001F8 430B                   JSR         @R3
    000001FA 0009                   NOP
          EDIT.c   296        
          EDIT.c   297        //Auto open file
          EDIT.c   298        if(sConfig.iAutoOpen==1)
    000001FC 6CF3                   MOV         R15,R12
    000001FE E058                   MOV         #88,R0
    00000200 00FE                   MOV.L       @(R0,R15),R0
    00000202 8801                   CMP/EQ      #1,R0
    00000204 8F19                   BF/S        L4054
    00000206 7C24                   ADD         #36,R12
          EDIT.c   299        {
          EDIT.c   300          sprintf(sRoot,sConfig.sAutoRoot);
    00000208 DB2A                   MOV.L       L5025+50,R11; _sprintf
    0000020A 62F3                   MOV         R15,R2
    0000020C 725C                   ADD         #92,R2
    0000020E 2F26                   MOV.L       R2,@-R15
    00000210 4B0B                   JSR         @R11
    00000212 64C3                   MOV         R12,R4
          EDIT.c   301          sprintf(sFile,sConfig.sAutoFile);
    00000214 63F3                   MOV         R15,R3
    00000216 7365                   ADD         #101,R3
    00000218 2F36                   MOV.L       R3,@-R15
    0000021A 4B0B                   JSR         @R11
    0000021C 64D3                   MOV         R13,R4
          EDIT.c   302          sprintf(sFolder,sConfig.sAutoFolder);
    0000021E 62F3                   MOV         R15,R2
    00000220 7276                   ADD         #118,R2
    00000222 2F26                   MOV.L       R2,@-R15
    00000224 4B0B                   JSR         @R11
    00000226 64E3                   MOV         R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   303          Editor(sRoot,sFolder,sFile,0,&sConfig);
    00000228 63F3                   MOV         R15,R3
    0000022A 7338                   ADD         #56,R3
    0000022C 2F36                   MOV.L       R3,@-R15
    0000022E E700                   MOV         #0,R7
    00000230 66D3                   MOV         R13,R6
    00000232 65E3                   MOV         R14,R5
    00000234 B044                   BSR         _Editor
    00000236 64C3                   MOV         R12,R4
    00000238 7F10                   ADD         #16,R15
          EDIT.c   304        }
          EDIT.c   305        
          EDIT.c   306        //Main loop
          EDIT.c   307        do{
    0000023A              L4054:                            
          EDIT.c   308          
          EDIT.c   309          //Select file
          EDIT.c   310          Explorer(EXPLOREROPEN,sRoot,sFolder,sFile,&sConfig,&iNew);
    0000023A 63F3                   MOV         R15,R3
    0000023C 2F36                   MOV.L       R3,@-R15
    0000023E 67D3                   MOV         R13,R7
    00000240 D31D                   MOV.L       L5025+54,R3; _Explorer
    00000242 62F3                   MOV         R15,R2
    00000244 7230                   ADD         #48,R2
    00000246 66E3                   MOV         R14,R6
    00000248 2F26                   MOV.L       R2,@-R15
    0000024A 65C3                   MOV         R12,R5
    0000024C 430B                   JSR         @R3
    0000024E E401                   MOV         #1,R4
          EDIT.c   311          
          EDIT.c   312          //Start editor
          EDIT.c   313          Editor(sRoot,sFolder,sFile,iNew,&sConfig);
    00000250 62F3                   MOV         R15,R2
    00000252 7234                   ADD         #52,R2
    00000254 2F26                   MOV.L       R2,@-R15
    00000256 66D3                   MOV         R13,R6
    00000258 57F3                   MOV.L       @(12,R15),R7
    0000025A 65E3                   MOV         R14,R5
    0000025C B030                   BSR         _Editor
    0000025E 64C3                   MOV         R12,R4
          EDIT.c   314          
          EDIT.c   315        }while(1);
    00000260 AFEB                   BRA         L4054
    00000262 7F0C                   ADD         #12,R15
    00000264              __$terminate$507:                ; label: terminate
          EDIT.c   316        
          EDIT.c   317        //Application must be restarted 
          EDIT.c   318        terminate:
          EDIT.c   319        Bdisp_AllClr_DDVRAM();
    00000264 D315                   MOV.L       L5025+58,R3; _Bdisp_AllClr_DDVRAM
    00000266 430B                   JSR         @R3
    00000268 0009                   NOP
          EDIT.c   320        return(1);
    0000026A E001                   MOV         #1,R0
          EDIT.c   321    }
    0000026C 910C                   MOV.W       L5025+6,R1 ; H'012C
    0000026E 3F1C                   ADD         R1,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000270 4F26                   LDS.L       @R15+,PR
    00000272 68F6                   MOV.L       @R15+,R8
    00000274 69F6                   MOV.L       @R15+,R9
    00000276 6AF6                   MOV.L       @R15+,R10
    00000278 6BF6                   MOV.L       @R15+,R11
    0000027A 6CF6                   MOV.L       @R15+,R12
    0000027C 6DF6                   MOV.L       @R15+,R13
    0000027E 000B                   RTS
    00000280 6EF6                   MOV.L       @R15+,R14
    00000282              L5025:                            
    00000282 0080                   .DATA.W     H'0080
    00000284 0084                   .DATA.W     H'0084
    00000286 0088                   .DATA.W     H'0088
    00000288 012C                   .DATA.W     H'012C
    0000028A 0000                   .DATA.W     0
    0000028C <00000000>             .DATA.L     __iClipSize
    00000290 <00000000>             .DATA.L     _memset
    00000294 <00000000>             .DATA.L     __sFiles
    00000298 <00000000>             .DATA.L     L511
    0000029C <00000000>             .DATA.L     _PopupMessage
    000002A0 <00000000>             .DATA.L     __sFolders
    000002A4 <00000000>             .DATA.L     L513
    000002A8 <00000000>             .DATA.L     _ConfigExport
    000002AC <00000000>             .DATA.L     _QuitHandler
    000002B0 <00000000>             .DATA.L     _SetQuitHandler
    000002B4 <00000000>             .DATA.L     _sprintf
    000002B8 <00000000>             .DATA.L     _Explorer
    000002BC <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
          EDIT.c   322    
          EDIT.c   323    // ----------------------------------------------------------------
          EDIT.c   324    // Text editor
          EDIT.c   325    int Editor(char *sRoot, char *sFolder, char *sFile, 
    000002C0              _Editor:                         ; function: Editor
                                                           ; frame size=8452
                                                           ; used runtime library name:
                                                           ; __slow_mvn, __slow_strcpy, __quick_strcmp1
    000002C0 2FE6                   MOV.L       R14,@-R15
    000002C2 EE00                   MOV         #0,R14
          EDIT.c   326               int iNew, struct Config *sConfig)
          EDIT.c   327    {
          EDIT.c   328        //Variables
          EDIT.c   329        int i;                       //Counter
          EDIT.c   330        int iExit;                   //Exit flag
          EDIT.c   331        int iCode;                   //Menu code 
          EDIT.c   332        int iCx=0,iCy=1;             //Cursor position
          EDIT.c   333        int iACx=0,iACy=0;           //Previous cursor position
          EDIT.c   334        int iColumn=0;               //Column for cursor movements
          EDIT.c   335        int iLen;                    //Text length
          EDIT.c   336        int iLn2;                    //Text length
          EDIT.c   337        int iTxtPtr=0;               //Text pointer
          EDIT.c   338        int iTopLine=0;              //Text top line
          EDIT.c   339        int iMaxPtr;                 //Maximum text pointer value
          EDIT.c   340        int iRefresh=0;              //Refresh screen
          EDIT.c   341        int iPtr;                    //Pointer
          EDIT.c   342        int iBinary=0;               //Binary file
          EDIT.c   343        int iLNum;                   //Text lines
          EDIT.c   344        int iASaved=0;               //Saved file (previous status)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   345        int iSaved=0;                //Saved file
          EDIT.c   346        int iNewFile;                //New file flag
          EDIT.c   347        int iLines[MAXLINE];         //Text line positions
          EDIT.c   348        int iAnswer;                 //User answer
          EDIT.c   349        int iStart=0;                //Clip start
          EDIT.c   350        int iEnd=0;                  //Clip end
          EDIT.c   351        int iAEnd=-1;                //Clip end (previous position)
          EDIT.c   352        int iClipMode=0;             //Clip mode
          EDIT.c   353        int iCopy;                   //Text copied to clipboard
          EDIT.c   354        int iCntx;                   //Font context for edit window
          EDIT.c   355        int iAFont;                  //Previous font
          EDIT.c   356        int iAWWrap;                 //Previous word wrap mode
          EDIT.c   357        int iFound;                  //Found string
          EDIT.c   358        int iEqual;                  //Equal flag
          EDIT.c   359        unsigned int iKey;           //Keyboard code
          EDIT.c   360        char cChr;                   //Character
          EDIT.c   361        char sRootAux[5]="fls0";     //Root directory (aux)
    000002C4 916E                   MOV.W       L5026+6,R1 ; H'009C
    000002C6 2FD6                   MOV.L       R13,@-R15
    000002C8 2FC6                   MOV.L       R12,@-R15
    000002CA 2FB6                   MOV.L       R11,@-R15
    000002CC 2FA6                   MOV.L       R10,@-R15
    000002CE EB01                   MOV         #1,R11
    000002D0 9D66                   MOV.W       L5026+2,R13; H'00A4
    000002D2 2F96                   MOV.L       R9,@-R15
    000002D4 2F86                   MOV.L       R8,@-R15
    000002D6 69E3                   MOV         R14,R9
    000002D8 D233                   MOV.L       L5026+10,R2; L557
    000002DA 68E3                   MOV         R14,R8
    000002DC 4F22                   STS.L       PR,@-R15
    000002DE 905E                   MOV.W       L5026,R0   ; H'DF5C
    000002E0 3F0C                   ADD         R0,R15
    000002E2 3DFC                   ADD         R15,R13
    000002E4 1F4D                   MOV.L       R4,@(52,R15)
    000002E6 31FC                   ADD         R15,R1
    000002E8 905B                   MOV.W       L5026+4,R0 ; H'20C4
    000002EA 1F5C                   MOV.L       R5,@(48,R15)
    000002EC 1F6B                   MOV.L       R6,@(44,R15)
    000002EE 0AFE                   MOV.L       @(R0,R15),R10
    000002F0 1FE2                   MOV.L       R14,@(8,R15)
    000002F2 1FB1                   MOV.L       R11,@(4,R15)
    000002F4 1FE7                   MOV.L       R14,@(28,R15)
    000002F6 2FE2                   MOV.L       R14,@R15
    000002F8 1FE5                   MOV.L       R14,@(20,R15)
    000002FA 1FEE                   MOV.L       R14,@(56,R15)
    000002FC 1FEA                   MOV.L       R14,@(40,R15)
    000002FE D32B                   MOV.L       L5026+14,R3; __slow_mvn
    00000300 430B                   JSR         @R3
    00000302 E005                   MOV         #5,R0
          EDIT.c   362        char sFolderAux[MAXFNAME]="";//Folder name (aux)
    00000304 914F                   MOV.W       L5026+8,R1 ; H'008C
    00000306 31FC                   ADD         R15,R1
    00000308 D229                   MOV.L       L5026+18,R2; L559
    0000030A D328                   MOV.L       L5026+14,R3; __slow_mvn
    0000030C 430B                   JSR         @R3
    0000030E E00D                   MOV         #13,R0
          EDIT.c   363        char sFileAux[MAXFNAME]="";  //File name (aux)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000310 D228                   MOV.L       L5026+22,R2; L561
    00000312 61F3                   MOV         R15,R1
    00000314 D325                   MOV.L       L5026+14,R3; __slow_mvn
    00000316 717C                   ADD         #124,R1
    00000318 430B                   JSR         @R3
    0000031A E00D                   MOV         #13,R0
          EDIT.c   364        char sString[16]="";         //Search string
    0000031C D226                   MOV.L       L5026+26,R2; L563
    0000031E 61F3                   MOV         R15,R1
    00000320 D322                   MOV.L       L5026+14,R3; __slow_mvn
    00000322 716C                   ADD         #108,R1
    00000324 430B                   JSR         @R3
    00000326 E010                   MOV         #16,R0
          EDIT.c   365        char *sText;                 //Text buffer
          EDIT.c   366        char *sClip;                 //Clip buffer
          EDIT.c   367        
          EDIT.c   368        //Application mode
          EDIT.c   369        _iAppMode=EDITOR;
    00000328 D124                   MOV.L       L5026+30,R1; __iAppMode
    0000032A 21B2                   MOV.L       R11,@R1
          EDIT.c   370              
          EDIT.c   371        //Global pointers
          EDIT.c   372        sText=_sText;
    0000032C D324                   MOV.L       L5026+34,R3; __sText
    0000032E 6C32                   MOV.L       @R3,R12
          EDIT.c   373        sClip=_sClip;
    00000330 D024                   MOV.L       L5026+38,R0; __sClip
    00000332 6202                   MOV.L       @R0,R2
    00000334 1F2F                   MOV.L       R2,@(60,R15)
          EDIT.c   374        iNewFile=iNew;
    00000336 1F76                   MOV.L       R7,@(24,R15)
          EDIT.c   375        if(strlen(sClip)>0) 
    00000338 D223                   MOV.L       L5026+42,R2; _strlen
    0000033A 420B                   JSR         @R2
    0000033C 54FF                   MOV.L       @(60,R15),R4
    0000033E 6393                   MOV         R9,R3
    00000340 3036                   CMP/HI      R3,R0
    00000342 8B02                   BF          L4056
          EDIT.c   376          iCopy=1; 
    00000344 E064                   MOV         #100,R0
    00000346 A002                   BRA         L4057
    00000348 0FB6                   MOV.L       R11,@(R0,R15)
    0000034A              L4056:                            
          EDIT.c   377        else 
          EDIT.c   378          iCopy=0;
    0000034A E064                   MOV         #100,R0
    0000034C 0FE6                   MOV.L       R14,@(R0,R15)
    0000034E              L4057:                            
          EDIT.c   379        
          EDIT.c   380        //Load file
          EDIT.c   381        if(iNewFile==1)
    0000034E 50F6                   MOV.L       @(24,R15),R0
    00000350 8801                   CMP/EQ      #1,R0
    00000352 8B07                   BF          L4058
          EDIT.c   382        {
          EDIT.c   383          sText[0]=ENDMARK; sText[1]=0;
    00000354 E20C                   MOV         #12,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000356 60E3                   MOV         R14,R0
    00000358 2C20                   MOV.B       R2,@R12
    0000035A 80C1                   MOV.B       R0,@(1,R12)
          EDIT.c   384          iNewFile=1;
    0000035C E048                   MOV         #72,R0
    0000035E 0FB6                   MOV.L       R11,@(R0,R15)
          EDIT.c   385          iSaved=0;
    00000360 A03C                   BRA         L4059
    00000362 1FE9                   MOV.L       R14,@(36,R15)
    00000364              L4058:                            
          EDIT.c   386        }
          EDIT.c   387        else
          EDIT.c   388        {
          EDIT.c   389          if(ReadFile(sRoot,sFolder,sFile,sText,&iBinary)==1)
    00000364 D319                   MOV.L       L5026+46,R3; _ReadFile
    00000366 62F3                   MOV         R15,R2
    00000368 7238                   ADD         #56,R2
    0000036A 67C3                   MOV         R12,R7
    0000036C 2F26                   MOV.L       R2,@-R15
    0000036E 56FC                   MOV.L       @(48,R15),R6
    00000370 55FD                   MOV.L       @(52,R15),R5
    00000372 430B                   JSR         @R3
    00000374 54FE                   MOV.L       @(56,R15),R4
    00000376 8801                   CMP/EQ      #1,R0
    00000378 8F04                   BF/S        L4060
    0000037A 7F04                   ADD         #4,R15
          EDIT.c   390          {
          EDIT.c   391            iSaved=1;
    0000037C 1FB9                   MOV.L       R11,@(36,R15)
          EDIT.c   392            iNewFile=0;
    0000037E E048                   MOV         #72,R0
    00000380 A02C                   BRA         L4059
    00000382 0FE6                   MOV.L       R14,@(R0,R15)
    00000384              L4060:                            
          EDIT.c   393          }
          EDIT.c   394          else
          EDIT.c   395          {
          EDIT.c   396            PopupMessage(1,"File open error!",NULL,NULL,NULL,NULL);
    00000384 2FE6                   MOV.L       R14,@-R15
    00000386 E200                   MOV         #0,R2
    00000388 D511                   MOV.L       L5026+50,R5; L570
    0000038A 6723                   MOV         R2,R7
    0000038C D311                   MOV.L       L5026+54,R3; _PopupMessage
    0000038E 6623                   MOV         R2,R6
    00000390 2F26                   MOV.L       R2,@-R15
    00000392 430B                   JSR         @R3
    00000394 E401                   MOV         #1,R4
    00000396 7F08                   ADD         #8,R15
          EDIT.c   397            return(0);
    00000398 D10F                   MOV.L       L5026+58,R1; L4062
    0000039A 412B                   JMP         @R1
    0000039C E000                   MOV         #0,R0
    0000039E              L5026:                            
    0000039E DF5C                   .DATA.W     H'DF5C
    000003A0 00A4                   .DATA.W     H'00A4
    000003A2 20C4                   .DATA.W     H'20C4
    000003A4 009C                   .DATA.W     H'009C




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003A6 008C                   .DATA.W     H'008C
    000003A8 <00000000>             .DATA.L     L557
    000003AC <00000000>             .DATA.L     __slow_mvn
    000003B0 <00000000>             .DATA.L     L559
    000003B4 <00000000>             .DATA.L     L561
    000003B8 <00000000>             .DATA.L     L563
    000003BC <00000000>             .DATA.L     __iAppMode
    000003C0 <00000000>             .DATA.L     __sText
    000003C4 <00000000>             .DATA.L     __sClip
    000003C8 <00000000>             .DATA.L     _strlen
    000003CC <00000000>             .DATA.L     _ReadFile
    000003D0 <00000000>             .DATA.L     L570
    000003D4 <00000000>             .DATA.L     _PopupMessage
    000003D8 <00000000>             .DATA.L     L4062
    000003DC              L4059:                            
          EDIT.c   398          }
          EDIT.c   399        }
          EDIT.c   400        
          EDIT.c   401        //Initializations
          EDIT.c   402        Bdisp_AllClr_DDVRAM();
    000003DC D24E                   MOV.L       L5027+14,R2; _Bdisp_AllClr_DDVRAM
    000003DE 420B                   JSR         @R2
    000003E0 0009                   NOP
          EDIT.c   403        SetEditorFont(sConfig->iFont,&iCntx);
    000003E2 65F3                   MOV         R15,R5
    000003E4 D34D                   MOV.L       L5027+18,R3; _SetEditorFont
    000003E6 750C                   ADD         #12,R5
    000003E8 430B                   JSR         @R3
    000003EA 54A9                   MOV.L       @(36,R10),R4
          EDIT.c   404        MenuSetBar(MENUBARMAIN);
    000003EC D24C                   MOV.L       L5027+22,R2; _MenuSetBar
    000003EE 420B                   JSR         @R2
    000003F0 E401                   MOV         #1,R4
          EDIT.c   405        PrintFileName(sRoot,sFile,iBinary,iSaved);
    000003F2 57F9                   MOV.L       @(36,R15),R7
    000003F4 56FE                   MOV.L       @(56,R15),R6
    000003F6 55FB                   MOV.L       @(44,R15),R5
    000003F8 D34A                   MOV.L       L5027+26,R3; _PrintFileName
    000003FA 430B                   JSR         @R3
    000003FC 54FD                   MOV.L       @(52,R15),R4
          EDIT.c   406        PrintKeyboardStatus();
    000003FE D24A                   MOV.L       L5027+30,R2; _PrintKeyboardStatus
    00000400 420B                   JSR         @R2
    00000402 0009                   NOP
          EDIT.c   407        CalcLines(sText,iLines,&iLNum,0,iCntx,sConfig);
    00000404 2FA6                   MOV.L       R10,@-R15
    00000406 E700                   MOV         #0,R7
    00000408 53F4                   MOV.L       @(16,R15),R3
    0000040A 65D3                   MOV         R13,R5
    0000040C 2F36                   MOV.L       R3,@-R15
    0000040E 66F3                   MOV         R15,R6
    00000410 D346                   MOV.L       L5027+34,R3; _CalcLines
    00000412 7618                   ADD         #24,R6
    00000414 430B                   JSR         @R3
    00000416 64C3                   MOV         R12,R4
          EDIT.c   408        DumpTextLines(sText,iLines,iLNum,iTopLine,iStart,iEnd,iCntx);
    00000418 52F5                   MOV.L       @(20,R15),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000041A E300                   MOV         #0,R3
    0000041C 2F26                   MOV.L       R2,@-R15
    0000041E 65D3                   MOV         R13,R5
    00000420 2F96                   MOV.L       R9,@-R15
    00000422 2F36                   MOV.L       R3,@-R15
    00000424 57F5                   MOV.L       @(20,R15),R7
    00000426 56F9                   MOV.L       @(36,R15),R6
    00000428 D241                   MOV.L       L5027+38,R2; _DumpTextLines
    0000042A 420B                   JSR         @R2
    0000042C 64C3                   MOV         R12,R4
    0000042E 7F14                   ADD         #20,R15
          EDIT.c   409        PrintInfoBar(sFolder,iTopLine+iCy,iLNum,sConfig);
    00000430 D240                   MOV.L       L5027+42,R2; _PrintInfoBar
    00000432 67A3                   MOV         R10,R7
    00000434 56F4                   MOV.L       @(16,R15),R6
    00000436 63F2                   MOV.L       @R15,R3
    00000438 55F1                   MOV.L       @(4,R15),R5
    0000043A 353C                   ADD         R3,R5
    0000043C 420B                   JSR         @R2
    0000043E 54FC                   MOV.L       @(48,R15),R4
          EDIT.c   410        SetFontContext(iCntx);
    00000440 D33D                   MOV.L       L5027+46,R3; _SetFontContext
    00000442 430B                   JSR         @R3
    00000444 54F3                   MOV.L       @(12,R15),R4
          EDIT.c   411        SetCursor(iCx,iCy,1,iClipMode);
    00000446 E700                   MOV         #0,R7
    00000448 55F1                   MOV.L       @(4,R15),R5
    0000044A E601                   MOV         #1,R6
    0000044C D33B                   MOV.L       L5027+50,R3; _SetCursor
    0000044E 430B                   JSR         @R3
    00000450 54F2                   MOV.L       @(8,R15),R4
          EDIT.c   412        KeyboardStatusHideStore();
    00000452 D23B                   MOV.L       L5027+54,R2; _KeyboardStatusHideStore
    00000454 420B                   JSR         @R2
    00000456 0009                   NOP
          EDIT.c   413        KeyboardStatusHide(0);
    00000458 D33A                   MOV.L       L5027+58,R3; _KeyboardStatusHide
    0000045A 430B                   JSR         @R3
    0000045C E400                   MOV         #0,R4
          EDIT.c   414        Bdisp_PutDisp_DD();
    0000045E D23A                   MOV.L       L5027+62,R2; _Bdisp_PutDisp_DD
    00000460 420B                   JSR         @R2
    00000462 0009                   NOP
          EDIT.c   415        
          EDIT.c   416        //Main loop
          EDIT.c   417        iExit=0;
    00000464 E300                   MOV         #0,R3
    00000466 E060                   MOV         #96,R0
    00000468 0F36                   MOV.L       R3,@(R0,R15)
    0000046A 62F3                   MOV         R15,R2
    0000046C 726C                   ADD         #108,R2
    0000046E E058                   MOV         #88,R0
    00000470 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c   418        do{
    00000472              L4063:                            
          EDIT.c   419          
          EDIT.c   420          //Inititializations




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   421          iRefresh=0;
          EDIT.c   422          iACx=iCx;
    00000472 E044                   MOV         #68,R0
    00000474 1FE5                   MOV.L       R14,@(20,R15)
    00000476 53F2                   MOV.L       @(8,R15),R3
    00000478 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c   423          iACy=iCy;
    0000047A E050                   MOV         #80,R0
    0000047C 52F1                   MOV.L       @(4,R15),R2
    0000047E 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c   424          iAEnd=iEnd;
    00000480 E068                   MOV         #104,R0
    00000482 0F96                   MOV.L       R9,@(R0,R15)
          EDIT.c   425          iASaved=iSaved;
    00000484 53F9                   MOV.L       @(36,R15),R3
    00000486 E05C                   MOV         #92,R0
    00000488 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c   426          SetFontContext(iCntx);
    0000048A D32B                   MOV.L       L5027+46,R3; _SetFontContext
    0000048C 430B                   JSR         @R3
    0000048E 54F3                   MOV.L       @(12,R15),R4
          EDIT.c   427          
          EDIT.c   428          //Set global variables for quit handler
          EDIT.c   429          _iBinary=iBinary;
    00000490 D42E                   MOV.L       L5027+66,R4; __iBinary
          EDIT.c   430          _iSaved=iSaved;
          EDIT.c   431          _iNewFile=iNewFile;
    00000492 E048                   MOV         #72,R0
    00000494 52FE                   MOV.L       @(56,R15),R2
    00000496 2422                   MOV.L       R2,@R4
    00000498 D42D                   MOV.L       L5027+70,R4; __iSaved
    0000049A 53F9                   MOV.L       @(36,R15),R3
          EDIT.c   432          strcpy(_sRoot,sRoot);
    0000049C D22F                   MOV.L       L5027+82,R2; __slow_strcpy
    0000049E 2432                   MOV.L       R3,@R4
    000004A0 D42C                   MOV.L       L5027+74,R4; __iNewFile
    000004A2 03FE                   MOV.L       @(R0,R15),R3
    000004A4 D02C                   MOV.L       L5027+78,R0; __sRoot
    000004A6 2432                   MOV.L       R3,@R4
    000004A8 51FD                   MOV.L       @(52,R15),R1
    000004AA 420B                   JSR         @R2
    000004AC 0009                   NOP
          EDIT.c   433          strcpy(_sFolder,sFolder);
    000004AE 51FC                   MOV.L       @(48,R15),R1
    000004B0 D02B                   MOV.L       L5027+86,R0; __sFolder
    000004B2 D32A                   MOV.L       L5027+82,R3; __slow_strcpy
    000004B4 430B                   JSR         @R3
    000004B6 0009                   NOP
          EDIT.c   434          strcpy(_sFile,sFile);
    000004B8 51FB                   MOV.L       @(44,R15),R1
    000004BA D02A                   MOV.L       L5027+90,R0; __sFile
    000004BC D227                   MOV.L       L5027+82,R2; __slow_strcpy
    000004BE 420B                   JSR         @R2
    000004C0 0009                   NOP
          EDIT.c   435          memcpy(&_sConfig,sConfig,sizeof(struct Config));      
    000004C2 9622                   MOV.W       L5027,R6   ; H'0100
    000004C4 D428                   MOV.L       L5027+94,R4; __sConfig




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004C6 D329                   MOV.L       L5027+98,R3; _memcpy
    000004C8 430B                   JSR         @R3
    000004CA 65A3                   MOV         R10,R5
          EDIT.c   436          
          EDIT.c   437          //Get Key
          EDIT.c   438          iKey=GetKeyb();
    000004CC D228                   MOV.L       L5027+102,R2; _GetKeyb
    000004CE 420B                   JSR         @R2
    000004D0 0009                   NOP
          EDIT.c   439          
          EDIT.c   440          //Get menu commands
          EDIT.c   441          if(iKey==KEY_CTRL_F1 || iKey==KEY_CTRL_F2
          EDIT.c   442          || iKey==KEY_CTRL_F3 || iKey==KEY_CTRL_F4
          EDIT.c   443          || iKey==KEY_CTRL_F5 || iKey==KEY_CTRL_F6)
    000004D2 941B                   MOV.W       L5027+2,R4 ; H'7539
    000004D4 3040                   CMP/EQ      R4,R0
    000004D6 8D0F                   BT/S        L4065
    000004D8 1F06                   MOV.L       R0,@(24,R15)
    000004DA 9218                   MOV.W       L5027+4,R2 ; H'753A
    000004DC 3020                   CMP/EQ      R2,R0
    000004DE 890B                   BT          L4065
    000004E0 9116                   MOV.W       L5027+6,R1 ; H'753B
    000004E2 3010                   CMP/EQ      R1,R0
    000004E4 8908                   BT          L4065
    000004E6 9214                   MOV.W       L5027+8,R2 ; H'753C
    000004E8 3020                   CMP/EQ      R2,R0
    000004EA 8905                   BT          L4065
    000004EC 9112                   MOV.W       L5027+10,R1; H'753D
    000004EE 3010                   CMP/EQ      R1,R0
    000004F0 8902                   BT          L4065
    000004F2 9210                   MOV.W       L5027+12,R2; H'753E
    000004F4 3020                   CMP/EQ      R2,R0
    000004F6 8B04                   BF          L4064
    000004F8              L4065:                            
          EDIT.c   444            iKey=-MenuFunctionKey(iKey);
    000004F8 D31E                   MOV.L       L5027+106,R3; _MenuFunctionKey
    000004FA 430B                   JSR         @R3
    000004FC 54F6                   MOV.L       @(24,R15),R4
    000004FE 600B                   NEG         R0,R0
    00000500 1F06                   MOV.L       R0,@(24,R15)
    00000502              L4064:                            
          EDIT.c   445          
          EDIT.c   446          //Process keys
          EDIT.c   447          switch(iKey)
    00000502 50F6                   MOV.L       @(24,R15),R0
    00000504 88DC                   CMP/EQ      #-36,R0
    00000506 A037                   BRA         L4912
    00000508 0009                   NOP
    0000050A              L5027:                            
    0000050A 0100                   .DATA.W     H'0100
    0000050C 7539                   .DATA.W     H'7539
    0000050E 753A                   .DATA.W     H'753A
    00000510 753B                   .DATA.W     H'753B
    00000512 753C                   .DATA.W     H'753C
    00000514 753D                   .DATA.W     H'753D
    00000516 753E                   .DATA.W     H'753E
    00000518 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000051C <00000000>             .DATA.L     _SetEditorFont
    00000520 <00000000>             .DATA.L     _MenuSetBar
    00000524 <00000000>             .DATA.L     _PrintFileName
    00000528 <00000000>             .DATA.L     _PrintKeyboardStatus
    0000052C <00000000>             .DATA.L     _CalcLines
    00000530 <00000000>             .DATA.L     _DumpTextLines
    00000534 <00000000>             .DATA.L     _PrintInfoBar
    00000538 <00000000>             .DATA.L     _SetFontContext
    0000053C <00000000>             .DATA.L     _SetCursor
    00000540 <00000000>             .DATA.L     _KeyboardStatusHideStore
    00000544 <00000000>             .DATA.L     _KeyboardStatusHide
    00000548 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    0000054C <00000000>             .DATA.L     __iBinary
    00000550 <00000000>             .DATA.L     __iSaved
    00000554 <00000000>             .DATA.L     __iNewFile
    00000558 <00000000>             .DATA.L     __sRoot
    0000055C <00000000>             .DATA.L     __slow_strcpy
    00000560 <00000000>             .DATA.L     __sFolder
    00000564 <00000000>             .DATA.L     __sFile
    00000568 <00000000>             .DATA.L     __sConfig
    0000056C <00000000>             .DATA.L     _memcpy
    00000570 <00000000>             .DATA.L     _GetKeyb
    00000574 <00000000>             .DATA.L     _MenuFunctionKey
    00000578              L4912:                            
    00000578 8B01                   BF          L5028
    0000057A A090                   BRA         L2588
    0000057C 0009                   NOP
    0000057E              L5028:                            
    0000057E 88E8                   CMP/EQ      #-24,R0
    00000580 8B01                   BF          L5029
    00000582 A129                   BRA         L2589
    00000584 0009                   NOP
    00000586              L5029:                            
    00000586 88E7                   CMP/EQ      #-25,R0
    00000588 8B01                   BF          L5030
    0000058A A12A                   BRA         L2590
    0000058C 0009                   NOP
    0000058E              L5030:                            
    0000058E 88BD                   CMP/EQ      #-67,R0
    00000590 8B01                   BF          L5031
    00000592 A12B                   BRA         L2591
    00000594 0009                   NOP
    00000596              L5031:                            
    00000596 88FE                   CMP/EQ      #-2,R0
    00000598 8B01                   BF          L5032
    0000059A A12C                   BRA         L2592
    0000059C 0009                   NOP
    0000059E              L5032:                            
    0000059E 88F1                   CMP/EQ      #-15,R0
    000005A0 8B01                   BF          L5033
    000005A2 A12D                   BRA         L2593
    000005A4 0009                   NOP
    000005A6              L5033:                            
    000005A6 88F0                   CMP/EQ      #-16,R0
    000005A8 8B01                   BF          L5034
    000005AA A13F                   BRA         L2594
    000005AC 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005AE              L5034:                            
    000005AE 88B8                   CMP/EQ      #-72,R0
    000005B0 8B01                   BF          L5035
    000005B2 A151                   BRA         L2595
    000005B4 0009                   NOP
    000005B6              L5035:                            
    000005B6 88B7                   CMP/EQ      #-73,R0
    000005B8 8B01                   BF          L5036
    000005BA A163                   BRA         L2596
    000005BC 0009                   NOP
    000005BE              L5036:                            
    000005BE 88EE                   CMP/EQ      #-18,R0
    000005C0 8B01                   BF          L5037
    000005C2 A175                   BRA         L2597
    000005C4 0009                   NOP
    000005C6              L5037:                            
    000005C6 88EF                   CMP/EQ      #-17,R0
    000005C8 8B01                   BF          L5038
    000005CA A187                   BRA         L2598
    000005CC 0009                   NOP
    000005CE              L5038:                            
    000005CE 9147                   MOV.W       L5039,R1   ; H'7562
    000005D0 3010                   CMP/EQ      R1,R0
    000005D2 8B01                   BF          L5040
    000005D4 A198                   BRA         L2599
    000005D6 0009                   NOP
    000005D8              L5040:                            
    000005D8 88ED                   CMP/EQ      #-19,R0
    000005DA 8B01                   BF          L5041
    000005DC A194                   BRA         L2600
    000005DE 0009                   NOP
    000005E0              L5041:                            
    000005E0 913F                   MOV.W       L5039+2,R1 ; H'7554
    000005E2 3010                   CMP/EQ      R1,R0
    000005E4 8B01                   BF          L5042
    000005E6 A1C9                   BRA         L2601
    000005E8 0009                   NOP
    000005EA              L5042:                            
    000005EA 88EA                   CMP/EQ      #-22,R0
    000005EC 8B01                   BF          L5043
    000005EE A1C5                   BRA         L2602
    000005F0 0009                   NOP
    000005F2              L5043:                            
    000005F2 88EC                   CMP/EQ      #-20,R0
    000005F4 8B01                   BF          L5044
    000005F6 A267                   BRA         L2606
    000005F8 0009                   NOP
    000005FA              L5044:                            
    000005FA 88EB                   CMP/EQ      #-21,R0
    000005FC 8B01                   BF          L5045
    000005FE A263                   BRA         L2607
    00000600 0009                   NOP
    00000602              L5045:                            
    00000602 88E9                   CMP/EQ      #-23,R0
    00000604 8B01                   BF          L5046
    00000606 A25F                   BRA         L2608
    00000608 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000060A              L5046:                            
    0000060A 88D1                   CMP/EQ      #-47,R0
    0000060C 8B01                   BF          L5047
    0000060E A383                   BRA         L2613
    00000610 0009                   NOP
    00000612              L5047:                            
    00000612 88D0                   CMP/EQ      #-48,R0
    00000614 8B01                   BF          L5048
    00000616 A37F                   BRA         L2614
    00000618 0009                   NOP
    0000061A              L5048:                            
    0000061A 88FB                   CMP/EQ      #-5,R0
    0000061C 8B01                   BF          L5049
    0000061E A428                   BRA         L2617
    00000620 0009                   NOP
    00000622              L5049:                            
    00000622 88FA                   CMP/EQ      #-6,R0
    00000624 8B01                   BF          L5050
    00000626 A495                   BRA         L2624
    00000628 0009                   NOP
    0000062A              L5050:                            
    0000062A 88D5                   CMP/EQ      #-43,R0
    0000062C 8B01                   BF          L5051
    0000062E A4FE                   BRA         L2627
    00000630 0009                   NOP
    00000632              L5051:                            
    00000632 9117                   MOV.W       L5039+4,R1 ; H'7532
    00000634 3010                   CMP/EQ      R1,R0
    00000636 8B01                   BF          L5052
    00000638 A554                   BRA         L2633
    0000063A 0009                   NOP
    0000063C              L5052:                            
    0000063C 88D2                   CMP/EQ      #-46,R0
    0000063E 8B01                   BF          L5053
    00000640 A596                   BRA         L2636
    00000642 0009                   NOP
    00000644              L5053:                            
    00000644 910F                   MOV.W       L5039+6,R1 ; H'7555
    00000646 3010                   CMP/EQ      R1,R0
    00000648 8B01                   BF          L5054
    0000064A A591                   BRA         L2637
    0000064C 0009                   NOP
    0000064E              L5054:                            
    0000064E 910B                   MOV.W       L5039+8,R1 ; H'7545
    00000650 3010                   CMP/EQ      R1,R0
    00000652 8B01                   BF          L5055
    00000654 A5D1                   BRA         L2638
    00000656 0009                   NOP
    00000658              L5055:                            
    00000658 9107                   MOV.W       L5039+10,R1; H'7544
    0000065A 3010                   CMP/EQ      R1,R0
    0000065C A006                   BRA         L4913
    0000065E 0009                   NOP
    00000660              L5039:                            
    00000660 7562                   .DATA.W     H'7562
    00000662 7554                   .DATA.W     H'7554
    00000664 7532                   .DATA.W     H'7532




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000666 7555                   .DATA.W     H'7555
    00000668 7545                   .DATA.W     H'7545
    0000066A 7544                   .DATA.W     H'7544
    0000066C              L4913:                            
    0000066C 8B01                   BF          L5056
    0000066E A5DA                   BRA         L2639
    00000670 0009                   NOP
    00000672              L5056:                            
    00000672 91A2                   MOV.W       L5057,R1   ; H'7547
    00000674 3010                   CMP/EQ      R1,R0
    00000676 8B01                   BF          L5058
    00000678 A5EB                   BRA         L2640
    0000067A 0009                   NOP
    0000067C              L5058:                            
    0000067C 919E                   MOV.W       L5057+2,R1 ; H'7542
    0000067E 3010                   CMP/EQ      R1,R0
    00000680 8B01                   BF          L5059
    00000682 A5FC                   BRA         L2641
    00000684 0009                   NOP
    00000686              L5059:                            
    00000686 919A                   MOV.W       L5057+4,R1 ; H'753F
    00000688 3010                   CMP/EQ      R1,R0
    0000068A 8B01                   BF          L5060
    0000068C A618                   BRA         L2642
    0000068E 0009                   NOP
    00000690              L5060:                            
    00000690 9196                   MOV.W       L5057+6,R1 ; H'7549
    00000692 3010                   CMP/EQ      R1,R0
    00000694 8B01                   BF          L5061
    00000696 A66D                   BRA         L2643
    00000698 0009                   NOP
    0000069A              L5061:                            
    0000069A A6EB                   BRA         L2644
    0000069C 0009                   NOP
    0000069E              L2588:                           ; case label 
          EDIT.c   448          {
          EDIT.c   449            //Character selection
          EDIT.c   450            case -NODECHARSEL:
          EDIT.c   451              
          EDIT.c   452              //Do not insert characters in clip mode
          EDIT.c   453              if(iClipMode==1) break;
    0000069E 50FA                   MOV.L       @(40,R15),R0
    000006A0 8801                   CMP/EQ      #1,R0
    000006A2 8B01                   BF          L5062
    000006A4 A778                   BRA         L4066
    000006A6 0009                   NOP
    000006A8              L5062:                            
          EDIT.c   454          
          EDIT.c   455              //Get character
          EDIT.c   456              cChr=CharacterSelect(1,sConfig);
    000006A8 D346                   MOV.L       L5057+10,R3; _CharacterSelect
    000006AA 65A3                   MOV         R10,R5
    000006AC 430B                   JSR         @R3
    000006AE E401                   MOV         #1,R4
          EDIT.c   457          
          EDIT.c   458              //Insert character into text
          EDIT.c   459              iLen=strlen(sText);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006B0 D345                   MOV.L       L5057+14,R3; _strlen
    000006B2 61F3                   MOV         R15,R1
    000006B4 7118                   ADD         #24,R1
    000006B6 2100                   MOV.B       R0,@R1
    000006B8 430B                   JSR         @R3
    000006BA 64C3                   MOV         R12,R4
    000006BC 1F08                   MOV.L       R0,@(32,R15)
          EDIT.c   460              if(cChr!=0 && iLen<_iTextSize)
    000006BE E018                   MOV         #24,R0
    000006C0 03FC                   MOV.B       @(R0,R15),R3
    000006C2 2338                   TST         R3,R3
    000006C4 8B01                   BF          L5063
    000006C6 A595                   BRA         L1592
    000006C8 0009                   NOP
    000006CA              L5063:                            
    000006CA D340                   MOV.L       L5057+18,R3; __iTextSize
    000006CC 52F8                   MOV.L       @(32,R15),R2
    000006CE 6132                   MOV.L       @R3,R1
    000006D0 3213                   CMP/GE      R1,R2
    000006D2 8B01                   BF          L5064
    000006D4 A58E                   BRA         L1592
    000006D6 0009                   NOP
    000006D8              L5064:                            
          EDIT.c   461              {
          EDIT.c   462                MoveCursor(CURSORMARK,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    000006D8 53F3                   MOV.L       @(12,R15),R3
    000006DA E501                   MOV         #1,R5
    000006DC 2F36                   MOV.L       R3,@-R15
    000006DE 2FC6                   MOV.L       R12,@-R15
    000006E0 2FD6                   MOV.L       R13,@-R15
    000006E2 53F7                   MOV.L       @(28,R15),R3
    000006E4 2F36                   MOV.L       R3,@-R15
    000006E6 62F3                   MOV         R15,R2
    000006E8 7224                   ADD         #36,R2
    000006EA 2F26                   MOV.L       R2,@-R15
    000006EC 63F3                   MOV         R15,R3
    000006EE 7330                   ADD         #48,R3
    000006F0 2F36                   MOV.L       R3,@-R15
    000006F2 62F3                   MOV         R15,R2
    000006F4 D336                   MOV.L       L5057+22,R3; _MoveCursor
    000006F6 7218                   ADD         #24,R2
    000006F8 2F26                   MOV.L       R2,@-R15
    000006FA 67F3                   MOV         R15,R7
    000006FC 7720                   ADD         #32,R7
    000006FE 66F3                   MOV         R15,R6
    00000700 7624                   ADD         #36,R6
    00000702 430B                   JSR         @R3
    00000704 E40B                   MOV         #11,R4
    00000706 7F1C                   ADD         #28,R15
          EDIT.c   463                iPtr=iLines[iTopLine+iCy-1]+iCx;
    00000708 63F2                   MOV.L       @R15,R3
    0000070A 50F1                   MOV.L       @(4,R15),R0
    0000070C 52F2                   MOV.L       @(8,R15),R2
    0000070E 303C                   ADD         R3,R0
          EDIT.c   464                for(i=iLen+1;i>iPtr;i--) sText[i]=sText[i-1];
    00000710 54F8                   MOV.L       @(32,R15),R4
    00000712 70FF                   ADD         #-1,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000714 4008                   SHLL2       R0
    00000716 7401                   ADD         #1,R4
    00000718 06DE                   MOV.L       @(R0,R13),R6
    0000071A 6543                   MOV         R4,R5
    0000071C 362C                   ADD         R2,R6
    0000071E 75FF                   ADD         #-1,R5
    00000720 35CC                   ADD         R12,R5
    00000722 6743                   MOV         R4,R7
    00000724 37CC                   ADD         R12,R7
    00000726 3467                   CMP/GT      R6,R4
    00000728 8F06                   BF/S        L4069
    0000072A 7701                   ADD         #1,R7
    0000072C              L4070:                            
    0000072C 6350                   MOV.B       @R5,R3
    0000072E 74FF                   ADD         #-1,R4
    00000730 2734                   MOV.B       R3,@-R7
    00000732 3467                   CMP/GT      R6,R4
    00000734 8DFA                   BT/S        L4070
    00000736 75FF                   ADD         #-1,R5
    00000738              L4069:                            
          EDIT.c   465                sText[iPtr]=cChr;
    00000738 6063                   MOV         R6,R0
    0000073A 63F3                   MOV         R15,R3
    0000073C 7318                   ADD         #24,R3
          EDIT.c   466                CalcLines(sText,iLines,&iLNum,iTopLine,iCntx,sConfig);
    0000073E 65D3                   MOV         R13,R5
    00000740 6330                   MOV.B       @R3,R3
    00000742 0C34                   MOV.B       R3,@(R0,R12)
    00000744 2FA6                   MOV.L       R10,@-R15
    00000746 52F4                   MOV.L       @(16,R15),R2
    00000748 D322                   MOV.L       L5057+26,R3; _CalcLines
    0000074A 2F26                   MOV.L       R2,@-R15
    0000074C 57F2                   MOV.L       @(8,R15),R7
    0000074E 66F3                   MOV         R15,R6
    00000750 7618                   ADD         #24,R6
    00000752 430B                   JSR         @R3
    00000754 64C3                   MOV         R12,R4
          EDIT.c   467                MoveCursor(CURSORFIND,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00000756 E501                   MOV         #1,R5
    00000758 52F5                   MOV.L       @(20,R15),R2
    0000075A 2F26                   MOV.L       R2,@-R15
    0000075C 2FC6                   MOV.L       R12,@-R15
    0000075E 2FD6                   MOV.L       R13,@-R15
    00000760 53F9                   MOV.L       @(36,R15),R3
    00000762 2F36                   MOV.L       R3,@-R15
    00000764 62F3                   MOV         R15,R2
    00000766 722C                   ADD         #44,R2
    00000768 2F26                   MOV.L       R2,@-R15
    0000076A 63F3                   MOV         R15,R3
    0000076C 7338                   ADD         #56,R3
    0000076E 2F36                   MOV.L       R3,@-R15
    00000770 D317                   MOV.L       L5057+22,R3; _MoveCursor
    00000772 62F3                   MOV         R15,R2
    00000774 7220                   ADD         #32,R2
    00000776 2F26                   MOV.L       R2,@-R15
    00000778 67F3                   MOV         R15,R7
    0000077A 7728                   ADD         #40,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000077C 66F3                   MOV         R15,R6
    0000077E 762C                   ADD         #44,R6
    00000780 430B                   JSR         @R3
    00000782 E40C                   MOV         #12,R4
          EDIT.c   468                MoveCursor(CURSORRIGHT,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00000784 52FC                   MOV.L       @(48,R15),R2
    00000786 E040                   MOV         #64,R0
    00000788 2F26                   MOV.L       R2,@-R15
    0000078A E501                   MOV         #1,R5
    0000078C 2FC6                   MOV.L       R12,@-R15
    0000078E 2FD6                   MOV.L       R13,@-R15
    00000790 03FE                   MOV.L       @(R0,R15),R3
    00000792 2F36                   MOV.L       R3,@-R15
    00000794 62F3                   MOV         R15,R2
    00000796 7248                   ADD         #72,R2
    00000798 2F26                   MOV.L       R2,@-R15
    0000079A 63F3                   MOV         R15,R3
    0000079C 7354                   ADD         #84,R3
    0000079E 2F36                   MOV.L       R3,@-R15
    000007A0 D30B                   MOV.L       L5057+22,R3; _MoveCursor
    000007A2 62F3                   MOV         R15,R2
    000007A4 723C                   ADD         #60,R2
    000007A6 2F26                   MOV.L       R2,@-R15
    000007A8 67F3                   MOV         R15,R7
    000007AA 7744                   ADD         #68,R7
    000007AC 66F3                   MOV         R15,R6
    000007AE 7648                   ADD         #72,R6
    000007B0 430B                   JSR         @R3
    000007B2 E405                   MOV         #5,R4
    000007B4 7F40                   ADD         #64,R15
    000007B6 A51D                   BRA         L1592
          EDIT.c   469                iSaved=0;
    000007B8 1FE9                   MOV.L       R14,@(36,R15)
    000007BA              L5057:                            
    000007BA 7547                   .DATA.W     H'7547
    000007BC 7542                   .DATA.W     H'7542
    000007BE 753F                   .DATA.W     H'753F
    000007C0 7549                   .DATA.W     H'7549
    000007C2 0000                   .DATA.W     0
    000007C4 <00000000>             .DATA.L     _CharacterSelect
    000007C8 <00000000>             .DATA.L     _strlen
    000007CC <00000000>             .DATA.L     __iTextSize
    000007D0 <00000000>             .DATA.L     _MoveCursor
    000007D4 <00000000>             .DATA.L     _CalcLines
    000007D8              L2589:                           ; case label 
          EDIT.c   470              }
          EDIT.c   471              iRefresh=2;
          EDIT.c   472              break;
          EDIT.c   473            
          EDIT.c   474            //Help text
          EDIT.c   475            case -NODEHELPHELP: 
          EDIT.c   476              HelpText();
    000007D8 D34F                   MOV.L       L5065+4,R3 ; _HelpText
    000007DA 430B                   JSR         @R3
    000007DC 0009                   NOP
    000007DE A505                   BRA         L1591
    000007E0 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007E2              L2590:                           ; case label 
          EDIT.c   477              MenuFunctionKey(KEY_CTRL_EXIT);
          EDIT.c   478              iRefresh=2;
          EDIT.c   479              break;
          EDIT.c   480              
          EDIT.c   481            //About
          EDIT.c   482            case -NODEHELPABOU: 
          EDIT.c   483              AboutPopup();
    000007E2 D34E                   MOV.L       L5065+8,R3 ; _AboutPopup
    000007E4 430B                   JSR         @R3
    000007E6 0009                   NOP
          EDIT.c   484              break;
    000007E8 A6D6                   BRA         L4066
    000007EA 0009                   NOP
    000007EC              L2591:                           ; case label 
          EDIT.c   485            
          EDIT.c   486            //Memory status
          EDIT.c   487            case -NODEHELPMEMO: 
          EDIT.c   488              PopupMemory(sConfig);
    000007EC D34C                   MOV.L       L5065+12,R3; _PopupMemory
    000007EE 430B                   JSR         @R3
    000007F0 64A3                   MOV         R10,R4
          EDIT.c   489              break;
    000007F2 A6D1                   BRA         L4066
    000007F4 0009                   NOP
    000007F6              L2592:                           ; case label 
          EDIT.c   490            
          EDIT.c   491            //Change upper/lower case
          EDIT.c   492            case -NODEALPHA: 
          EDIT.c   493              KeyboardStatusChangeCase();
    000007F6 D34B                   MOV.L       L5065+16,R3; _KeyboardStatusChangeCase
    000007F8 430B                   JSR         @R3
    000007FA 0009                   NOP
          EDIT.c   494              break;
    000007FC A6CC                   BRA         L4066
    000007FE 0009                   NOP
    00000800              L2593:                           ; case label 
          EDIT.c   495            
          EDIT.c   496            //Go to top
          EDIT.c   497            case -NODEGOTOTOP: 
          EDIT.c   498              MoveCursor(CURSORTOP,1,&iCx,&iCy,&iTopLine,&iColumn,
          EDIT.c   499                         &iRefresh,iLNum,iLines,sText,iCntx);
    00000800 53F3                   MOV.L       @(12,R15),R3
    00000802 E501                   MOV         #1,R5
    00000804 2F36                   MOV.L       R3,@-R15
    00000806 2FC6                   MOV.L       R12,@-R15
    00000808 2FD6                   MOV.L       R13,@-R15
    0000080A 53F7                   MOV.L       @(28,R15),R3
    0000080C 2F36                   MOV.L       R3,@-R15
    0000080E 62F3                   MOV         R15,R2
    00000810 7224                   ADD         #36,R2
    00000812 2F26                   MOV.L       R2,@-R15
    00000814 63F3                   MOV         R15,R3
    00000816 7330                   ADD         #48,R3
    00000818 2F36                   MOV.L       R3,@-R15
    0000081A 62F3                   MOV         R15,R2
    0000081C 7218                   ADD         #24,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000081E 2F26                   MOV.L       R2,@-R15
    00000820 67F3                   MOV         R15,R7
    00000822 7720                   ADD         #32,R7
    00000824 66F3                   MOV         R15,R6
    00000826 7624                   ADD         #36,R6
          EDIT.c   500              break;
    00000828 A53E                   BRA         L4910
    0000082A 6453                   MOV         R5,R4
    0000082C              L2594:                           ; case label 
          EDIT.c   501            
          EDIT.c   502            //Go to bottom
          EDIT.c   503            case -NODEGOTOBTM: 
          EDIT.c   504              MoveCursor(CURSORBOTTOM,1,&iCx,&iCy,&iTopLine,&iColumn,
          EDIT.c   505                         &iRefresh,iLNum,iLines,sText,iCntx);
    0000082C 53F3                   MOV.L       @(12,R15),R3
    0000082E E501                   MOV         #1,R5
    00000830 2F36                   MOV.L       R3,@-R15
    00000832 2FC6                   MOV.L       R12,@-R15
    00000834 2FD6                   MOV.L       R13,@-R15
    00000836 53F7                   MOV.L       @(28,R15),R3
    00000838 2F36                   MOV.L       R3,@-R15
    0000083A 62F3                   MOV         R15,R2
    0000083C 7224                   ADD         #36,R2
    0000083E 2F26                   MOV.L       R2,@-R15
    00000840 63F3                   MOV         R15,R3
    00000842 7330                   ADD         #48,R3
    00000844 2F36                   MOV.L       R3,@-R15
    00000846 62F3                   MOV         R15,R2
    00000848 7218                   ADD         #24,R2
    0000084A 2F26                   MOV.L       R2,@-R15
    0000084C 67F3                   MOV         R15,R7
    0000084E 7720                   ADD         #32,R7
    00000850 66F3                   MOV         R15,R6
    00000852 7624                   ADD         #36,R6
          EDIT.c   506              break;
    00000854 A528                   BRA         L4910
    00000856 E402                   MOV         #2,R4
    00000858              L2595:                           ; case label 
          EDIT.c   507              
          EDIT.c   508            //Cursor home
          EDIT.c   509            case -NODEGOTOHOME: 
          EDIT.c   510              MoveCursor(CURSORHOME,1,&iCx,&iCy,&iTopLine,&iColumn,
          EDIT.c   511                         &iRefresh,iLNum,iLines,sText,iCntx);
    00000858 53F3                   MOV.L       @(12,R15),R3
    0000085A E501                   MOV         #1,R5
    0000085C 2F36                   MOV.L       R3,@-R15
    0000085E 2FC6                   MOV.L       R12,@-R15
    00000860 2FD6                   MOV.L       R13,@-R15
    00000862 53F7                   MOV.L       @(28,R15),R3
    00000864 2F36                   MOV.L       R3,@-R15
    00000866 62F3                   MOV         R15,R2
    00000868 7224                   ADD         #36,R2
    0000086A 2F26                   MOV.L       R2,@-R15
    0000086C 63F3                   MOV         R15,R3
    0000086E 7330                   ADD         #48,R3
    00000870 2F36                   MOV.L       R3,@-R15
    00000872 62F3                   MOV         R15,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000874 7218                   ADD         #24,R2
    00000876 2F26                   MOV.L       R2,@-R15
    00000878 67F3                   MOV         R15,R7
    0000087A 7720                   ADD         #32,R7
    0000087C 66F3                   MOV         R15,R6
    0000087E 7624                   ADD         #36,R6
          EDIT.c   512              break;
    00000880 A512                   BRA         L4910
    00000882 E409                   MOV         #9,R4
    00000884              L2596:                           ; case label 
          EDIT.c   513    
          EDIT.c   514            //Cursor end
          EDIT.c   515            case -NODEGOTOEND: 
          EDIT.c   516              MoveCursor(CURSOREND,1,&iCx,&iCy,&iTopLine,&iColumn,
          EDIT.c   517              &iRefresh,iLNum,iLines,sText,iCntx);
    00000884 53F3                   MOV.L       @(12,R15),R3
    00000886 E501                   MOV         #1,R5
    00000888 2F36                   MOV.L       R3,@-R15
    0000088A 2FC6                   MOV.L       R12,@-R15
    0000088C 2FD6                   MOV.L       R13,@-R15
    0000088E 53F7                   MOV.L       @(28,R15),R3
    00000890 2F36                   MOV.L       R3,@-R15
    00000892 62F3                   MOV         R15,R2
    00000894 7224                   ADD         #36,R2
    00000896 2F26                   MOV.L       R2,@-R15
    00000898 63F3                   MOV         R15,R3
    0000089A 7330                   ADD         #48,R3
    0000089C 2F36                   MOV.L       R3,@-R15
    0000089E 62F3                   MOV         R15,R2
    000008A0 7218                   ADD         #24,R2
    000008A2 2F26                   MOV.L       R2,@-R15
    000008A4 67F3                   MOV         R15,R7
    000008A6 7720                   ADD         #32,R7
    000008A8 66F3                   MOV         R15,R6
    000008AA 7624                   ADD         #36,R6
          EDIT.c   518              break;
    000008AC A4FC                   BRA         L4910
    000008AE E40A                   MOV         #10,R4
    000008B0              L2597:                           ; case label 
          EDIT.c   519          
          EDIT.c   520            //Page up
          EDIT.c   521            case -NODEGOTOPGU: 
          EDIT.c   522              MoveCursor(CURSORPAGEUP,1,&iCx,&iCy,&iTopLine,&iColumn,
          EDIT.c   523                         &iRefresh,iLNum,iLines,sText,iCntx);
    000008B0 53F3                   MOV.L       @(12,R15),R3
    000008B2 E501                   MOV         #1,R5
    000008B4 2F36                   MOV.L       R3,@-R15
    000008B6 2FC6                   MOV.L       R12,@-R15
    000008B8 2FD6                   MOV.L       R13,@-R15
    000008BA 53F7                   MOV.L       @(28,R15),R3
    000008BC 2F36                   MOV.L       R3,@-R15
    000008BE 62F3                   MOV         R15,R2
    000008C0 7224                   ADD         #36,R2
    000008C2 2F26                   MOV.L       R2,@-R15
    000008C4 63F3                   MOV         R15,R3
    000008C6 7330                   ADD         #48,R3
    000008C8 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008CA 62F3                   MOV         R15,R2
    000008CC 7218                   ADD         #24,R2
    000008CE 2F26                   MOV.L       R2,@-R15
    000008D0 67F3                   MOV         R15,R7
    000008D2 7720                   ADD         #32,R7
    000008D4 66F3                   MOV         R15,R6
    000008D6 7624                   ADD         #36,R6
          EDIT.c   524              break;
    000008D8 A4E6                   BRA         L4910
    000008DA E404                   MOV         #4,R4
    000008DC              L2598:                           ; case label 
          EDIT.c   525    
          EDIT.c   526            //Page down
          EDIT.c   527            case -NODEGOTOPGD: 
          EDIT.c   528              MoveCursor(CURSORPAGEDOWN,1,&iCx,&iCy,&iTopLine,&iColumn,
          EDIT.c   529              &iRefresh,iLNum,iLines,sText,iCntx);
    000008DC 53F3                   MOV.L       @(12,R15),R3
    000008DE E501                   MOV         #1,R5
    000008E0 2F36                   MOV.L       R3,@-R15
    000008E2 2FC6                   MOV.L       R12,@-R15
    000008E4 2FD6                   MOV.L       R13,@-R15
    000008E6 53F7                   MOV.L       @(28,R15),R3
    000008E8 2F36                   MOV.L       R3,@-R15
    000008EA 62F3                   MOV         R15,R2
    000008EC 7224                   ADD         #36,R2
    000008EE 2F26                   MOV.L       R2,@-R15
    000008F0 63F3                   MOV         R15,R3
    000008F2 7330                   ADD         #48,R3
    000008F4 2F36                   MOV.L       R3,@-R15
    000008F6 62F3                   MOV         R15,R2
    000008F8 7218                   ADD         #24,R2
    000008FA 2F26                   MOV.L       R2,@-R15
    000008FC 67F3                   MOV         R15,R7
    000008FE 7720                   ADD         #32,R7
    00000900 66F3                   MOV         R15,R6
    00000902 7624                   ADD         #36,R6
          EDIT.c   530              break;
    00000904 A4D0                   BRA         L4910
    00000906 E403                   MOV         #3,R4
    00000908              L2599:                           ; case label 
          EDIT.c   531          
          EDIT.c   532            //Clip mode on / off
          EDIT.c   533            case KEY_CTRL_CLIP:
          EDIT.c   534            case -NODEEDITCLIP:
    00000908              L2600:                           ; case label 
          EDIT.c   535              if(iKey==KEY_CTRL_CLIP)
    00000908 9404                   MOV.W       L5065,R4   ; H'7562
    0000090A 53F6                   MOV.L       @(24,R15),R3
    0000090C 3340                   CMP/EQ      R4,R3
    0000090E 8B18                   BF          L4071
          EDIT.c   536              {
          EDIT.c   537                while(MenuGetBar()!=MENUBARMAIN) MenuFunctionKey(KEY_CTRL_EXIT);
    00000910 A00E                   BRA         L4072
    00000912 0009                   NOP
    00000914              L5065:                            
    00000914 7562                   .DATA.W     H'7562
    00000916 0000                   .DATA.W     0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000918 <00000000>             .DATA.L     _HelpText
    0000091C <00000000>             .DATA.L     _AboutPopup
    00000920 <00000000>             .DATA.L     _PopupMemory
    00000924 <00000000>             .DATA.L     _KeyboardStatusChangeCase
    00000928              L4073:                            
    00000928 9421                   MOV.W       L5066,R4   ; H'7532
    0000092A D312                   MOV.L       L5066+6,R3 ; _MenuFunctionKey
    0000092C 430B                   JSR         @R3
    0000092E 0009                   NOP
    00000930              L4072:                            
    00000930 D211                   MOV.L       L5066+10,R2; _MenuGetBar
    00000932 420B                   JSR         @R2
    00000934 0009                   NOP
    00000936 8801                   CMP/EQ      #1,R0
    00000938 8BF6                   BF          L4073
          EDIT.c   538                MenuFunctionKey(KEY_CTRL_F2);
    0000093A 9919                   MOV.W       L5066+2,R9 ; H'753A
    0000093C D20D                   MOV.L       L5066+6,R2 ; _MenuFunctionKey
    0000093E 420B                   JSR         @R2
    00000940 6493                   MOV         R9,R4
    00000942              L4071:                            
          EDIT.c   539              }
          EDIT.c   540              if(iClipMode==0)
    00000942 53FA                   MOV.L       @(40,R15),R3
    00000944 2338                   TST         R3,R3
    00000946 8B0B                   BF          L4074
          EDIT.c   541              {
          EDIT.c   542                iClipMode=1;
    00000948 1FBA                   MOV.L       R11,@(40,R15)
          EDIT.c   543                iPtr=iLines[iTopLine+iCy-1]+iCx;
    0000094A 63F2                   MOV.L       @R15,R3
    0000094C 50F1                   MOV.L       @(4,R15),R0
    0000094E 303C                   ADD         R3,R0
    00000950 52F2                   MOV.L       @(8,R15),R2
    00000952 70FF                   ADD         #-1,R0
    00000954 4008                   SHLL2       R0
    00000956 04DE                   MOV.L       @(R0,R13),R4
    00000958 342C                   ADD         R2,R4
          EDIT.c   544                iStart=iPtr;
    0000095A 6843                   MOV         R4,R8
    0000095C A61B                   BRA         L1585
          EDIT.c   545                iEnd=iPtr;
    0000095E 6943                   MOV         R4,R9
    00000960              L4074:                            
          EDIT.c   546                iRefresh=1;
          EDIT.c   547              }
          EDIT.c   548              else
          EDIT.c   549              {
          EDIT.c   550                iClipMode=0;
    00000960 1FEA                   MOV.L       R14,@(40,R15)
          EDIT.c   551                iStart=0;
    00000962 68E3                   MOV         R14,R8
          EDIT.c   552                iEnd=0;
    00000964 69E3                   MOV         R14,R9
          EDIT.c   553                iAEnd=-1;
    00000966 E3FF                   MOV         #-1,R3
    00000968 E068                   MOV         #104,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000096A A614                   BRA         L1585
    0000096C 0F36                   MOV.L       R3,@(R0,R15)
    0000096E              L5066:                            
    0000096E 7532                   .DATA.W     H'7532
    00000970 753A                   .DATA.W     H'753A
    00000972 0000                   .DATA.W     0
    00000974 <00000000>             .DATA.L     _MenuFunctionKey
    00000978 <00000000>             .DATA.L     _MenuGetBar
    0000097C              L2601:                           ; case label 
          EDIT.c   554                iRefresh=1;
          EDIT.c   555              }
          EDIT.c   556              break; 
          EDIT.c   557            
          EDIT.c   558            //Paste
          EDIT.c   559            case KEY_CTRL_PASTE:
          EDIT.c   560            case -NODEEDITPAST:
    0000097C              L2602:                           ; case label 
          EDIT.c   561              if(iCopy==1)
    0000097C E064                   MOV         #100,R0
    0000097E 00FE                   MOV.L       @(R0,R15),R0
    00000980 8801                   CMP/EQ      #1,R0
    00000982 8901                   BT          L5067
    00000984 A095                   BRA         L4076
    00000986 0009                   NOP
    00000988              L5067:                            
          EDIT.c   562              {
          EDIT.c   563                iLen=strlen(sText);
    00000988 D275                   MOV.L       L5068+2,R2 ; _strlen
    0000098A 420B                   JSR         @R2
    0000098C 64C3                   MOV         R12,R4
    0000098E 61F3                   MOV         R15,R1
          EDIT.c   564                iLn2=strlen(sClip);
    00000990 D373                   MOV.L       L5068+2,R3 ; _strlen
    00000992 714C                   ADD         #76,R1
    00000994 2102                   MOV.L       R0,@R1
    00000996 430B                   JSR         @R3
    00000998 54FF                   MOV.L       @(60,R15),R4
    0000099A 61F3                   MOV         R15,R1
    0000099C 1F06                   MOV.L       R0,@(24,R15)
    0000099E 714C                   ADD         #76,R1
    000009A0 D470                   MOV.L       L5068+6,R4 ; __iTextSize
    000009A2 6312                   MOV.L       @R1,R3
    000009A4 303C                   ADD         R3,R0
    000009A6 6103                   MOV         R0,R1
    000009A8 1F08                   MOV.L       R0,@(32,R15)
    000009AA 6342                   MOV.L       @R4,R3
    000009AC 3133                   CMP/GE      R3,R1
    000009AE 8975                   BT          L4077
          EDIT.c   565                if(iLen+iLn2<_iTextSize)
          EDIT.c   566                {
          EDIT.c   567                  MoveCursor(CURSORMARK,iLn2,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    000009B0 53F3                   MOV.L       @(12,R15),R3
    000009B2 2F36                   MOV.L       R3,@-R15
    000009B4 2FC6                   MOV.L       R12,@-R15
    000009B6 2FD6                   MOV.L       R13,@-R15
    000009B8 53F7                   MOV.L       @(28,R15),R3
    000009BA 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009BC 62F3                   MOV         R15,R2
    000009BE 7224                   ADD         #36,R2
    000009C0 2F26                   MOV.L       R2,@-R15
    000009C2 63F3                   MOV         R15,R3
    000009C4 7330                   ADD         #48,R3
    000009C6 2F36                   MOV.L       R3,@-R15
    000009C8 D367                   MOV.L       L5068+10,R3; _MoveCursor
    000009CA 62F3                   MOV         R15,R2
    000009CC 7218                   ADD         #24,R2
    000009CE 2F26                   MOV.L       R2,@-R15
    000009D0 55FD                   MOV.L       @(52,R15),R5
    000009D2 67F3                   MOV         R15,R7
    000009D4 7720                   ADD         #32,R7
    000009D6 66F3                   MOV         R15,R6
    000009D8 7624                   ADD         #36,R6
    000009DA 430B                   JSR         @R3
    000009DC E40B                   MOV         #11,R4
    000009DE 7F1C                   ADD         #28,R15
          EDIT.c   568                  iPtr=iLines[iTopLine+iCy-1]+iCx;
    000009E0 63F2                   MOV.L       @R15,R3
    000009E2 50F1                   MOV.L       @(4,R15),R0
    000009E4 52F2                   MOV.L       @(8,R15),R2
    000009E6 303C                   ADD         R3,R0
          EDIT.c   569                  for(i=iLen+iLn2;i>iPtr;i--) sText[i]=sText[i-iLn2];
    000009E8 54F8                   MOV.L       @(32,R15),R4
    000009EA 70FF                   ADD         #-1,R0
    000009EC 51F6                   MOV.L       @(24,R15),R1
    000009EE 6543                   MOV         R4,R5
    000009F0 4008                   SHLL2       R0
    000009F2 3518                   SUB         R1,R5
    000009F4 06DE                   MOV.L       @(R0,R13),R6
    000009F6 6743                   MOV         R4,R7
    000009F8 362C                   ADD         R2,R6
    000009FA 35CC                   ADD         R12,R5
    000009FC 37CC                   ADD         R12,R7
    000009FE 3467                   CMP/GT      R6,R4
    00000A00 8F06                   BF/S        L4078
    00000A02 7701                   ADD         #1,R7
    00000A04              L4079:                            
    00000A04 6350                   MOV.B       @R5,R3
    00000A06 74FF                   ADD         #-1,R4
    00000A08 2734                   MOV.B       R3,@-R7
    00000A0A 3467                   CMP/GT      R6,R4
    00000A0C 8DFA                   BT/S        L4079
    00000A0E 75FF                   ADD         #-1,R5
    00000A10              L4078:                            
    00000A10 57FF                   MOV.L       @(60,R15),R7
    00000A12 6463                   MOV         R6,R4
          EDIT.c   570                  for(i=0;i<iLn2;i++) sText[iPtr+i]=sClip[i];
    00000A14 53F6                   MOV.L       @(24,R15),R3
    00000A16 65E3                   MOV         R14,R5
    00000A18 4315                   CMP/PL      R3
    00000A1A 8F07                   BF/S        L4080
    00000A1C 34CC                   ADD         R12,R4
    00000A1E              L4081:                            
    00000A1E 7501                   ADD         #1,R5
    00000A20 6374                   MOV.B       @R7+,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A22 2430                   MOV.B       R3,@R4
    00000A24 52F6                   MOV.L       @(24,R15),R2
    00000A26 3523                   CMP/GE      R2,R5
    00000A28 8FF9                   BF/S        L4081
    00000A2A 7401                   ADD         #1,R4
    00000A2C              L4080:                            
          EDIT.c   571                  CalcLines(sText,iLines,&iLNum,iTopLine,iCntx,sConfig);
    00000A2C 2FA6                   MOV.L       R10,@-R15
    00000A2E 65D3                   MOV         R13,R5
    00000A30 D34E                   MOV.L       L5068+14,R3; _CalcLines
    00000A32 52F4                   MOV.L       @(16,R15),R2
    00000A34 2F26                   MOV.L       R2,@-R15
    00000A36 66F3                   MOV         R15,R6
    00000A38 57F2                   MOV.L       @(8,R15),R7
    00000A3A 7618                   ADD         #24,R6
    00000A3C 430B                   JSR         @R3
    00000A3E 64C3                   MOV         R12,R4
          EDIT.c   572                  MoveCursor(CURSORFIND,iLn2,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00000A40 52F5                   MOV.L       @(20,R15),R2
    00000A42 2F26                   MOV.L       R2,@-R15
    00000A44 2FC6                   MOV.L       R12,@-R15
    00000A46 2FD6                   MOV.L       R13,@-R15
    00000A48 53F9                   MOV.L       @(36,R15),R3
    00000A4A 2F36                   MOV.L       R3,@-R15
    00000A4C 62F3                   MOV         R15,R2
    00000A4E 722C                   ADD         #44,R2
    00000A50 2F26                   MOV.L       R2,@-R15
    00000A52 63F3                   MOV         R15,R3
    00000A54 7338                   ADD         #56,R3
    00000A56 2F36                   MOV.L       R3,@-R15
    00000A58 D343                   MOV.L       L5068+10,R3; _MoveCursor
    00000A5A 62F3                   MOV         R15,R2
    00000A5C 7220                   ADD         #32,R2
    00000A5E 2F26                   MOV.L       R2,@-R15
    00000A60 55FF                   MOV.L       @(60,R15),R5
    00000A62 67F3                   MOV         R15,R7
    00000A64 7728                   ADD         #40,R7
    00000A66 66F3                   MOV         R15,R6
    00000A68 762C                   ADD         #44,R6
    00000A6A 430B                   JSR         @R3
    00000A6C E40C                   MOV         #12,R4
          EDIT.c   573                  MoveCursor(CURSORRIGHT,iLn2,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx)
                         +;
    00000A6E E040                   MOV         #64,R0
    00000A70 52FC                   MOV.L       @(48,R15),R2
    00000A72 2F26                   MOV.L       R2,@-R15
    00000A74 2FC6                   MOV.L       R12,@-R15
    00000A76 2FD6                   MOV.L       R13,@-R15
    00000A78 03FE                   MOV.L       @(R0,R15),R3
    00000A7A E058                   MOV         #88,R0
    00000A7C 2F36                   MOV.L       R3,@-R15
    00000A7E 62F3                   MOV         R15,R2
    00000A80 7248                   ADD         #72,R2
    00000A82 2F26                   MOV.L       R2,@-R15
    00000A84 63F3                   MOV         R15,R3
    00000A86 7354                   ADD         #84,R3
    00000A88 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A8A 62F3                   MOV         R15,R2
    00000A8C 723C                   ADD         #60,R2
    00000A8E 2F26                   MOV.L       R2,@-R15
    00000A90 67F3                   MOV         R15,R7
    00000A92 7744                   ADD         #68,R7
    00000A94 66F3                   MOV         R15,R6
    00000A96 7648                   ADD         #72,R6
    00000A98 A579                   BRA         L4911
    00000A9A 05FE                   MOV.L       @(R0,R15),R5
    00000A9C              L4077:                            
          EDIT.c   574                  iSaved=0;
          EDIT.c   575                  iRefresh=1;
          EDIT.c   576                }
          EDIT.c   577                else
          EDIT.c   578                  PopupMessage(1,"Not pasted.","Buffer overflow!",NULL,NULL,NULL);
    00000A9C D634                   MOV.L       L5068+18,R6; L580
    00000A9E E300                   MOV         #0,R3
    00000AA0 D534                   MOV.L       L5068+22,R5; L579
    00000AA2 6733                   MOV         R3,R7
    00000AA4 D234                   MOV.L       L5068+26,R2; _PopupMessage
    00000AA6 2F36                   MOV.L       R3,@-R15
    00000AA8 2F36                   MOV.L       R3,@-R15
    00000AAA 420B                   JSR         @R2
    00000AAC E401                   MOV         #1,R4
    00000AAE A573                   BRA         L4066
    00000AB0 7F08                   ADD         #8,R15
    00000AB2              L4076:                            
          EDIT.c   579              }
          EDIT.c   580              else
          EDIT.c   581                PopupMessage(1,"Clipboard empty!",NULL,NULL,NULL,NULL);
    00000AB2 E200                   MOV         #0,R2
    00000AB4 D531                   MOV.L       L5068+30,R5; L581
    00000AB6 6723                   MOV         R2,R7
    00000AB8 D32F                   MOV.L       L5068+26,R3; _PopupMessage
    00000ABA 6623                   MOV         R2,R6
    00000ABC 2FE6                   MOV.L       R14,@-R15
    00000ABE 2F26                   MOV.L       R2,@-R15
    00000AC0 430B                   JSR         @R3
    00000AC2 E401                   MOV         #1,R4
          EDIT.c   582              break;
    00000AC4 A568                   BRA         L4066
    00000AC6 7F08                   ADD         #8,R15
    00000AC8              L2606:                           ; case label 
          EDIT.c   583    
          EDIT.c   584            //Copy & Cut & Delete
          EDIT.c   585            case -NODEEDITCOPY:
          EDIT.c   586            case -NODEEDITCUT:
    00000AC8              L2607:                           ; case label 
          EDIT.c   587            case -NODEEDITDEL:
    00000AC8              L2608:                           ; case label 
    00000AC8 6393                   MOV         R9,R3
    00000ACA 3388                   SUB         R8,R3
    00000ACC 1F38                   MOV.L       R3,@(32,R15)
    00000ACE 50F6                   MOV.L       @(24,R15),R0
    00000AD0 88EC                   CMP/EQ      #-20,R0
    00000AD2 8902                   BT          L4085
    00000AD4 50F6                   MOV.L       @(24,R15),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AD6 88EB                   CMP/EQ      #-21,R0
    00000AD8 8B66                   BF          L4084
    00000ADA              L4085:                            
          EDIT.c   588              
          EDIT.c   589              //Copy
          EDIT.c   590              if(iKey==-NODEEDITCOPY || iKey==-NODEEDITCUT)
          EDIT.c   591              {
          EDIT.c   592                if(iClipMode==1 && iStart!=iEnd)
    00000ADA 50FA                   MOV.L       @(40,R15),R0
    00000ADC 8801                   CMP/EQ      #1,R0
    00000ADE 8B59                   BF          L4086
    00000AE0 3890                   CMP/EQ      R9,R8
    00000AE2 8957                   BT          L4086
          EDIT.c   593                {
          EDIT.c   594                  if(abs(iEnd-iStart)<_iClipSize)
    00000AE4 D326                   MOV.L       L5068+34,R3; _abs
    00000AE6 430B                   JSR         @R3
    00000AE8 54F8                   MOV.L       @(32,R15),R4
    00000AEA D326                   MOV.L       L5068+38,R3; __iClipSize
    00000AEC 6232                   MOV.L       @R3,R2
    00000AEE 3023                   CMP/GE      R2,R0
    00000AF0 8929                   BT          L4087
          EDIT.c   595                  {
          EDIT.c   596                    if(iStart<iEnd)
    00000AF2 3893                   CMP/GE      R9,R8
    00000AF4 890E                   BT          L4088
          EDIT.c   597                    {
          EDIT.c   598                      iPtr=iStart;
    00000AF6 6583                   MOV         R8,R5
          EDIT.c   599                      for(i=0;i<iEnd-iStart;i++)
    00000AF8 51F8                   MOV.L       @(32,R15),R1
    00000AFA 64E3                   MOV         R14,R4
    00000AFC 4115                   CMP/PL      R1
    00000AFE 8F16                   BF/S        L4091
    00000B00 35CC                   ADD         R12,R5
    00000B02              L4090:                            
          EDIT.c   600                      {
          EDIT.c   601                        sClip[i]=sText[iPtr];
    00000B02 50FF                   MOV.L       @(60,R15),R0
    00000B04 6354                   MOV.B       @R5+,R3
    00000B06 0434                   MOV.B       R3,@(R0,R4)
    00000B08 52F8                   MOV.L       @(32,R15),R2
    00000B0A 7401                   ADD         #1,R4
    00000B0C 3423                   CMP/GE      R2,R4
    00000B0E 8BF8                   BF          L4090
    00000B10 A00D                   BRA         L4091
    00000B12 0009                   NOP
    00000B14              L4088:                            
          EDIT.c   602                        iPtr++;
          EDIT.c   603                       }
          EDIT.c   604                     }
          EDIT.c   605                    else
          EDIT.c   606                    {
          EDIT.c   607                      iPtr=iEnd;
    00000B14 6593                   MOV         R9,R5
          EDIT.c   608                      for(i=0;i<iStart-iEnd;i++)
    00000B16 64E3                   MOV         R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B18 6683                   MOV         R8,R6
    00000B1A 3698                   SUB         R9,R6
    00000B1C 4615                   CMP/PL      R6
    00000B1E 8F06                   BF/S        L4091
    00000B20 35CC                   ADD         R12,R5
    00000B22              L4093:                            
          EDIT.c   609                      {
          EDIT.c   610                        sClip[i]=sText[iPtr];
    00000B22 50FF                   MOV.L       @(60,R15),R0
    00000B24 6354                   MOV.B       @R5+,R3
    00000B26 0434                   MOV.B       R3,@(R0,R4)
    00000B28 7401                   ADD         #1,R4
    00000B2A 3463                   CMP/GE      R6,R4
    00000B2C 8BF9                   BF          L4093
    00000B2E              L4091:                            
          EDIT.c   611                        iPtr++;
          EDIT.c   612                      }
          EDIT.c   613                    }
          EDIT.c   614                    sClip[i]=0;
    00000B2E 50FF                   MOV.L       @(60,R15),R0
    00000B30 04E4                   MOV.B       R14,@(R0,R4)
          EDIT.c   615                    iCopy=1;
    00000B32 E064                   MOV         #100,R0
    00000B34 0FB6                   MOV.L       R11,@(R0,R15)
          EDIT.c   616                    if(iKey==-NODEEDITCOPY)
    00000B36 50F6                   MOV.L       @(24,R15),R0
    00000B38 88EC                   CMP/EQ      #-20,R0
    00000B3A 8B02                   BF          L4094
          EDIT.c   617                    {
          EDIT.c   618                      iClipMode=0;
    00000B3C 1FEA                   MOV.L       R14,@(40,R15)
          EDIT.c   619                      iStart=0;
    00000B3E 68E3                   MOV         R14,R8
          EDIT.c   620                      iEnd=0;
    00000B40 69E3                   MOV         R14,R9
    00000B42              L4094:                            
          EDIT.c   621                    }
          EDIT.c   622                    iRefresh=1;
    00000B42 A031                   BRA         L4084
    00000B44 1FB5                   MOV.L       R11,@(20,R15)
    00000B46              L4087:                            
          EDIT.c   623                  }
          EDIT.c   624                  else
          EDIT.c   625                  {
          EDIT.c   626                    PopupMessage(1,"Selected text","is bigger than","clip buffer!",NULL,NULL);
    00000B46 E200                   MOV         #0,R2
    00000B48 D70F                   MOV.L       L5068+42,R7; L594
    00000B4A 2F26                   MOV.L       R2,@-R15
    00000B4C 2F26                   MOV.L       R2,@-R15
    00000B4E D60F                   MOV.L       L5068+46,R6; L593
    00000B50 D50F                   MOV.L       L5068+50,R5; L592
    00000B52 D109                   MOV.L       L5068+26,R1; _PopupMessage
    00000B54 410B                   JSR         @R1
    00000B56 E401                   MOV         #1,R4
    00000B58 7F08                   ADD         #8,R15
          EDIT.c   627                    iKey=0;
    00000B5A A025                   BRA         L4084




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B5C 1FE6                   MOV.L       R14,@(24,R15)
    00000B5E              L5068:                            
    00000B5E 0000                   .DATA.W     0
    00000B60 <00000000>             .DATA.L     _strlen
    00000B64 <00000000>             .DATA.L     __iTextSize
    00000B68 <00000000>             .DATA.L     _MoveCursor
    00000B6C <00000000>             .DATA.L     _CalcLines
    00000B70 <00000000>             .DATA.L     L580
    00000B74 <00000000>             .DATA.L     L579
    00000B78 <00000000>             .DATA.L     _PopupMessage
    00000B7C <00000000>             .DATA.L     L581
    00000B80 <00000000>             .DATA.L     _abs
    00000B84 <00000000>             .DATA.L     __iClipSize
    00000B88 <00000000>             .DATA.L     L594
    00000B8C <00000000>             .DATA.L     L593
    00000B90 <00000000>             .DATA.L     L592
    00000B94              L4086:                            
          EDIT.c   628                  }
          EDIT.c   629                }
          EDIT.c   630                else
          EDIT.c   631                  PopupMessage(1,"No text selected!",NULL,NULL,NULL,NULL);
    00000B94 2FE6                   MOV.L       R14,@-R15
    00000B96 E200                   MOV         #0,R2
    00000B98 D5A1                   MOV.L       L5069+2,R5 ; L595
    00000B9A 6723                   MOV         R2,R7
    00000B9C D3A1                   MOV.L       L5069+6,R3 ; _PopupMessage
    00000B9E 6623                   MOV         R2,R6
    00000BA0 2F26                   MOV.L       R2,@-R15
    00000BA2 430B                   JSR         @R3
    00000BA4 E401                   MOV         #1,R4
    00000BA6 7F08                   ADD         #8,R15
    00000BA8              L4084:                            
          EDIT.c   632              }
          EDIT.c   633            
          EDIT.c   634              //Delete selected text
          EDIT.c   635              if(iKey==-NODEEDITCUT || iKey==-NODEEDITDEL)
    00000BA8 50F6                   MOV.L       @(24,R15),R0
    00000BAA 88EB                   CMP/EQ      #-21,R0
    00000BAC 8904                   BT          L4098
    00000BAE 50F6                   MOV.L       @(24,R15),R0
    00000BB0 88E9                   CMP/EQ      #-23,R0
    00000BB2 8901                   BT          L5070
    00000BB4 A4F0                   BRA         L4066
    00000BB6 0009                   NOP
    00000BB8              L5070:                            
    00000BB8              L4098:                            
          EDIT.c   636              {
          EDIT.c   637                if(iClipMode==1 && iStart!=iEnd)
    00000BB8 50FA                   MOV.L       @(40,R15),R0
    00000BBA 8801                   CMP/EQ      #1,R0
    00000BBC 8901                   BT          L5071
    00000BBE A09B                   BRA         L4099
    00000BC0 0009                   NOP
    00000BC2              L5071:                            
    00000BC2 3890                   CMP/EQ      R9,R8
    00000BC4 8B01                   BF          L5072
    00000BC6 A097                   BRA         L4099




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BC8 0009                   NOP
    00000BCA              L5072:                            
          EDIT.c   638                {
          EDIT.c   639                  iLen=strlen(sText);
    00000BCA D397                   MOV.L       L5069+10,R3; _strlen
    00000BCC 430B                   JSR         @R3
    00000BCE 64C3                   MOV         R12,R4
          EDIT.c   640                  if(iStart<iEnd)
    00000BD0 3893                   CMP/GE      R9,R8
    00000BD2 8D42                   BT/S        L4100
    00000BD4 1F06                   MOV.L       R0,@(24,R15)
          EDIT.c   641                  {
          EDIT.c   642                    MoveCursor(CURSORLEFT,iEnd-iStart,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sTex
                         +t,iCntx);
    00000BD6 6593                   MOV         R9,R5
    00000BD8 52F3                   MOV.L       @(12,R15),R2
    00000BDA 3588                   SUB         R8,R5
    00000BDC 2F26                   MOV.L       R2,@-R15
    00000BDE 2FC6                   MOV.L       R12,@-R15
    00000BE0 2FD6                   MOV.L       R13,@-R15
    00000BE2 53F7                   MOV.L       @(28,R15),R3
    00000BE4 2F36                   MOV.L       R3,@-R15
    00000BE6 62F3                   MOV         R15,R2
    00000BE8 7224                   ADD         #36,R2
    00000BEA 2F26                   MOV.L       R2,@-R15
    00000BEC 63F3                   MOV         R15,R3
    00000BEE 7330                   ADD         #48,R3
    00000BF0 2F36                   MOV.L       R3,@-R15
    00000BF2 62F3                   MOV         R15,R2
    00000BF4 D38D                   MOV.L       L5069+14,R3; _MoveCursor
    00000BF6 7218                   ADD         #24,R2
    00000BF8 2F26                   MOV.L       R2,@-R15
    00000BFA 67F3                   MOV         R15,R7
    00000BFC 7720                   ADD         #32,R7
    00000BFE 66F3                   MOV         R15,R6
    00000C00 7624                   ADD         #36,R6
    00000C02 430B                   JSR         @R3
    00000C04 E406                   MOV         #6,R4
          EDIT.c   643                    MoveCursor(CURSORMARK,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00000C06 E501                   MOV         #1,R5
    00000C08 52FA                   MOV.L       @(40,R15),R2
    00000C0A 2F26                   MOV.L       R2,@-R15
    00000C0C 2FC6                   MOV.L       R12,@-R15
    00000C0E 2FD6                   MOV.L       R13,@-R15
    00000C10 53FE                   MOV.L       @(56,R15),R3
    00000C12 2F36                   MOV.L       R3,@-R15
    00000C14 62F3                   MOV         R15,R2
    00000C16 7240                   ADD         #64,R2
    00000C18 2F26                   MOV.L       R2,@-R15
    00000C1A 63F3                   MOV         R15,R3
    00000C1C 734C                   ADD         #76,R3
    00000C1E 2F36                   MOV.L       R3,@-R15
    00000C20 62F3                   MOV         R15,R2
    00000C22 7234                   ADD         #52,R2
    00000C24 2F26                   MOV.L       R2,@-R15
    00000C26 67F3                   MOV         R15,R7
    00000C28 773C                   ADD         #60,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C2A 66F3                   MOV         R15,R6
    00000C2C 7640                   ADD         #64,R6
    00000C2E B78D                   BSR         _MoveCursor
    00000C30 E40B                   MOV         #11,R4
    00000C32 7F38                   ADD         #56,R15
          EDIT.c   644                    for(i=iStart;i<iLen;i++) sText[i]=sText[i+iEnd-iStart];
    00000C34 53F6                   MOV.L       @(24,R15),R3
    00000C36 6483                   MOV         R8,R4
    00000C38 6683                   MOV         R8,R6
    00000C3A 3688                   SUB         R8,R6
    00000C3C 369C                   ADD         R9,R6
    00000C3E 36CC                   ADD         R12,R6
    00000C40 6583                   MOV         R8,R5
    00000C42 3433                   CMP/GE      R3,R4
    00000C44 8D33                   BT/S        L4103
    00000C46 35CC                   ADD         R12,R5
    00000C48              L4102:                            
    00000C48 6364                   MOV.B       @R6+,R3
    00000C4A 7401                   ADD         #1,R4
    00000C4C 2530                   MOV.B       R3,@R5
    00000C4E 52F6                   MOV.L       @(24,R15),R2
    00000C50 3423                   CMP/GE      R2,R4
    00000C52 8FF9                   BF/S        L4102
    00000C54 7501                   ADD         #1,R5
    00000C56 A02A                   BRA         L4103
    00000C58 0009                   NOP
    00000C5A              L4100:                            
          EDIT.c   645                  }
          EDIT.c   646                  else if(iStart>iEnd)
    00000C5A 3897                   CMP/GT      R9,R8
    00000C5C 8B27                   BF          L4103
          EDIT.c   647                  {
          EDIT.c   648                    MoveCursor(CURSORMARK,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00000C5E E501                   MOV         #1,R5
    00000C60 52F3                   MOV.L       @(12,R15),R2
    00000C62 2F26                   MOV.L       R2,@-R15
    00000C64 2FC6                   MOV.L       R12,@-R15
    00000C66 2FD6                   MOV.L       R13,@-R15
    00000C68 53F7                   MOV.L       @(28,R15),R3
    00000C6A 2F36                   MOV.L       R3,@-R15
    00000C6C 62F3                   MOV         R15,R2
    00000C6E 7224                   ADD         #36,R2
    00000C70 2F26                   MOV.L       R2,@-R15
    00000C72 63F3                   MOV         R15,R3
    00000C74 7330                   ADD         #48,R3
    00000C76 2F36                   MOV.L       R3,@-R15
    00000C78 62F3                   MOV         R15,R2
    00000C7A 7218                   ADD         #24,R2
    00000C7C 2F26                   MOV.L       R2,@-R15
    00000C7E 67F3                   MOV         R15,R7
    00000C80 7720                   ADD         #32,R7
    00000C82 66F3                   MOV         R15,R6
    00000C84 7624                   ADD         #36,R6
    00000C86 B761                   BSR         _MoveCursor
    00000C88 E40B                   MOV         #11,R4
    00000C8A 7F1C                   ADD         #28,R15
          EDIT.c   649                    for(i=iEnd;i<iLen;i++) sText[i]=sText[i+iStart-iEnd];




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C8C 53F6                   MOV.L       @(24,R15),R3
    00000C8E 6493                   MOV         R9,R4
    00000C90 6693                   MOV         R9,R6
    00000C92 368C                   ADD         R8,R6
    00000C94 3698                   SUB         R9,R6
    00000C96 36CC                   ADD         R12,R6
    00000C98 6593                   MOV         R9,R5
    00000C9A 3433                   CMP/GE      R3,R4
    00000C9C 8D07                   BT/S        L4103
    00000C9E 35CC                   ADD         R12,R5
    00000CA0              L4106:                            
    00000CA0 6364                   MOV.B       @R6+,R3
    00000CA2 7401                   ADD         #1,R4
    00000CA4 2530                   MOV.B       R3,@R5
    00000CA6 52F6                   MOV.L       @(24,R15),R2
    00000CA8 3423                   CMP/GE      R2,R4
    00000CAA 8FF9                   BF/S        L4106
    00000CAC 7501                   ADD         #1,R5
    00000CAE              L4103:                            
          EDIT.c   650                  }
          EDIT.c   651                  CalcLines(sText,iLines,&iLNum,iTopLine,iCntx,sConfig);
    00000CAE 65D3                   MOV         R13,R5
    00000CB0 D35F                   MOV.L       L5069+18,R3; _CalcLines
    00000CB2 2FA6                   MOV.L       R10,@-R15
    00000CB4 52F4                   MOV.L       @(16,R15),R2
    00000CB6 2F26                   MOV.L       R2,@-R15
    00000CB8 57F2                   MOV.L       @(8,R15),R7
    00000CBA 66F3                   MOV         R15,R6
    00000CBC 7618                   ADD         #24,R6
    00000CBE 430B                   JSR         @R3
    00000CC0 64C3                   MOV         R12,R4
          EDIT.c   652                  MoveCursor(CURSORFIND,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00000CC2 E501                   MOV         #1,R5
    00000CC4 52F5                   MOV.L       @(20,R15),R2
    00000CC6 2F26                   MOV.L       R2,@-R15
    00000CC8 2FC6                   MOV.L       R12,@-R15
    00000CCA 2FD6                   MOV.L       R13,@-R15
    00000CCC 53F9                   MOV.L       @(36,R15),R3
    00000CCE 2F36                   MOV.L       R3,@-R15
    00000CD0 62F3                   MOV         R15,R2
    00000CD2 722C                   ADD         #44,R2
    00000CD4 2F26                   MOV.L       R2,@-R15
    00000CD6 63F3                   MOV         R15,R3
    00000CD8 7338                   ADD         #56,R3
    00000CDA 2F36                   MOV.L       R3,@-R15
    00000CDC 62F3                   MOV         R15,R2
    00000CDE 7220                   ADD         #32,R2
    00000CE0 2F26                   MOV.L       R2,@-R15
    00000CE2 67F3                   MOV         R15,R7
    00000CE4 7728                   ADD         #40,R7
    00000CE6 66F3                   MOV         R15,R6
    00000CE8 762C                   ADD         #44,R6
    00000CEA B72F                   BSR         _MoveCursor
    00000CEC E40C                   MOV         #12,R4
    00000CEE 7F24                   ADD         #36,R15
          EDIT.c   653                  iClipMode=0;
    00000CF0 1FEA                   MOV.L       R14,@(40,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   654                  iStart=0;
    00000CF2 68E3                   MOV         R14,R8
    00000CF4 A3B9                   BRA         L1596
          EDIT.c   655                  iEnd=0;
    00000CF6 69E3                   MOV         R14,R9
    00000CF8              L4099:                            
          EDIT.c   656                  iRefresh=1;
          EDIT.c   657                  iSaved=0;
          EDIT.c   658                }
          EDIT.c   659                else
          EDIT.c   660                {
          EDIT.c   661                  if(iKey==-NODEEDITDEL) PopupMessage(1,"No text selected!",NULL,NULL,NULL,NULL);
    00000CF8 50F6                   MOV.L       @(24,R15),R0
    00000CFA 88E9                   CMP/EQ      #-23,R0
    00000CFC 8901                   BT          L5073
    00000CFE A44B                   BRA         L4066
    00000D00 0009                   NOP
    00000D02              L5073:                            
    00000D02 E200                   MOV         #0,R2
    00000D04 D546                   MOV.L       L5069+2,R5 ; L595
    00000D06 6723                   MOV         R2,R7
    00000D08 D346                   MOV.L       L5069+6,R3 ; _PopupMessage
    00000D0A 6623                   MOV         R2,R6
    00000D0C 2FE6                   MOV.L       R14,@-R15
    00000D0E 2F26                   MOV.L       R2,@-R15
    00000D10 430B                   JSR         @R3
    00000D12 E401                   MOV         #1,R4
          EDIT.c   662                }
          EDIT.c   663              }
          EDIT.c   664              break;
    00000D14 A440                   BRA         L4066
    00000D16 7F08                   ADD         #8,R15
    00000D18              L2613:                           ; case label 
          EDIT.c   665          
          EDIT.c   666            //Search for string
          EDIT.c   667            case -NODEEDI2SRC1: 
          EDIT.c   668            case -NODEEDI2SRCN: 
    00000D18              L2614:                           ; case label 
          EDIT.c   669              if(iKey==-NODEEDI2SRC1)
    00000D18 50F6                   MOV.L       @(24,R15),R0
    00000D1A 88D1                   CMP/EQ      #-47,R0
    00000D1C 8B07                   BF          L4109
          EDIT.c   670              {
          EDIT.c   671                iAnswer=GetSearchString(sString);
    00000D1E 64F3                   MOV         R15,R4
    00000D20 D244                   MOV.L       L5069+22,R2; _GetSearchString
    00000D22 420B                   JSR         @R2
    00000D24 746C                   ADD         #108,R4
    00000D26 61F3                   MOV         R15,R1
    00000D28 7140                   ADD         #64,R1
    00000D2A A01A                   BRA         L4110
    00000D2C 2102                   MOV.L       R0,@R1
    00000D2E              L4109:                            
          EDIT.c   672              }
          EDIT.c   673              else
          EDIT.c   674              {
          EDIT.c   675                MoveCursor(CURSORRIGHT,1,&iCx,&iCy,&iTopLine,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   676                &iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00000D2E E501                   MOV         #1,R5
    00000D30 52F3                   MOV.L       @(12,R15),R2
    00000D32 2F26                   MOV.L       R2,@-R15
    00000D34 2FC6                   MOV.L       R12,@-R15
    00000D36 2FD6                   MOV.L       R13,@-R15
    00000D38 53F7                   MOV.L       @(28,R15),R3
    00000D3A 2F36                   MOV.L       R3,@-R15
    00000D3C 62F3                   MOV         R15,R2
    00000D3E 7224                   ADD         #36,R2
    00000D40 2F26                   MOV.L       R2,@-R15
    00000D42 63F3                   MOV         R15,R3
    00000D44 7330                   ADD         #48,R3
    00000D46 2F36                   MOV.L       R3,@-R15
    00000D48 62F3                   MOV         R15,R2
    00000D4A 7218                   ADD         #24,R2
    00000D4C 2F26                   MOV.L       R2,@-R15
    00000D4E 67F3                   MOV         R15,R7
    00000D50 7720                   ADD         #32,R7
    00000D52 66F3                   MOV         R15,R6
    00000D54 7624                   ADD         #36,R6
    00000D56 B6F9                   BSR         _MoveCursor
    00000D58 E405                   MOV         #5,R4
    00000D5A 7F1C                   ADD         #28,R15
          EDIT.c   677                iAnswer=1;
    00000D5C E201                   MOV         #1,R2
    00000D5E E040                   MOV         #64,R0
    00000D60 0F26                   MOV.L       R2,@(R0,R15)
    00000D62              L4110:                            
          EDIT.c   678              }
          EDIT.c   679              if(iAnswer==1)
    00000D62 E040                   MOV         #64,R0
    00000D64 00FE                   MOV.L       @(R0,R15),R0
    00000D66 8801                   CMP/EQ      #1,R0
    00000D68 8B72                   BF          L4111
          EDIT.c   680              {
          EDIT.c   681                PopupMessage(0,"Searching...",NULL,NULL,NULL,NULL);
    00000D6A E200                   MOV         #0,R2
    00000D6C D532                   MOV.L       L5069+26,R5; L604
    00000D6E 6723                   MOV         R2,R7
    00000D70 D32C                   MOV.L       L5069+6,R3 ; _PopupMessage
    00000D72 6623                   MOV         R2,R6
    00000D74 2FE6                   MOV.L       R14,@-R15
    00000D76 2F26                   MOV.L       R2,@-R15
    00000D78 430B                   JSR         @R3
    00000D7A 6423                   MOV         R2,R4
          EDIT.c   682                iFound=0;
          EDIT.c   683                iLen=strlen(sText);
    00000D7C D32A                   MOV.L       L5069+10,R3; _strlen
    00000D7E 7F08                   ADD         #8,R15
    00000D80 E100                   MOV         #0,R1
    00000D82 E054                   MOV         #84,R0
    00000D84 0F16                   MOV.L       R1,@(R0,R15)
    00000D86 430B                   JSR         @R3
    00000D88 64C3                   MOV         R12,R4
          EDIT.c   684                iLn2=strlen(sString);
    00000D8A 64F3                   MOV         R15,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D8C D326                   MOV.L       L5069+10,R3; _strlen
    00000D8E 1F08                   MOV.L       R0,@(32,R15)
    00000D90 430B                   JSR         @R3
    00000D92 746C                   ADD         #108,R4
    00000D94 1F06                   MOV.L       R0,@(24,R15)
          EDIT.c   685                iPtr=iLines[iTopLine+iCy-1]+iCx;
    00000D96 63F2                   MOV.L       @R15,R3
    00000D98 50F1                   MOV.L       @(4,R15),R0
    00000D9A 303C                   ADD         R3,R0
    00000D9C 52F2                   MOV.L       @(8,R15),R2
    00000D9E 70FF                   ADD         #-1,R0
    00000DA0 51F8                   MOV.L       @(32,R15),R1
    00000DA2 4008                   SHLL2       R0
    00000DA4 06DE                   MOV.L       @(R0,R13),R6
    00000DA6 71FF                   ADD         #-1,R1
    00000DA8 362C                   ADD         R2,R6
    00000DAA E04C                   MOV         #76,R0
          EDIT.c   686                while(iFound==0 && iPtr<iLen-1)
    00000DAC A048                   BRA         L4112
    00000DAE 0F16                   MOV.L       R1,@(R0,R15)
    00000DB0              L4113:                            
          EDIT.c   687                {
          EDIT.c   688                  iEqual=1;
    00000DB0 1FB8                   MOV.L       R11,@(32,R15)
          EDIT.c   689                  for(i=0;i<iLn2;i++) 
    00000DB2 67E3                   MOV         R14,R7
    00000DB4 53F6                   MOV.L       @(24,R15),R3
    00000DB6 E058                   MOV         #88,R0
    00000DB8 05FE                   MOV.L       @(R0,R15),R5
    00000DBA 6463                   MOV         R6,R4
    00000DBC 4315                   CMP/PL      R3
    00000DBE 8F0B                   BF/S        L4114
    00000DC0 34CC                   ADD         R12,R4
    00000DC2              L4115:                            
          EDIT.c   690                    if(sText[iPtr+i]!=sString[i]) iEqual=0;
    00000DC2 6140                   MOV.B       @R4,R1
    00000DC4 6350                   MOV.B       @R5,R3
    00000DC6 3130                   CMP/EQ      R3,R1
    00000DC8 8D01                   BT/S        L4116
    00000DCA 7701                   ADD         #1,R7
    00000DCC 1FE8                   MOV.L       R14,@(32,R15)
    00000DCE              L4116:                            
    00000DCE 7501                   ADD         #1,R5
    00000DD0 53F6                   MOV.L       @(24,R15),R3
    00000DD2 3733                   CMP/GE      R3,R7
    00000DD4 8FF5                   BF/S        L4115
    00000DD6 7401                   ADD         #1,R4
    00000DD8              L4114:                            
          EDIT.c   691                  if(iEqual==0)
    00000DD8 51F8                   MOV.L       @(32,R15),R1
    00000DDA 2118                   TST         R1,R1
    00000DDC 8B2E                   BF          L4117
          EDIT.c   692                  {
          EDIT.c   693                    MoveCursor(CURSORRIGHT,1,&iCx,&iCy,&iTopLine,
          EDIT.c   694                    &iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00000DDE E501                   MOV         #1,R5
    00000DE0 52F3                   MOV.L       @(12,R15),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DE2 2F26                   MOV.L       R2,@-R15
    00000DE4 2FC6                   MOV.L       R12,@-R15
    00000DE6 2FD6                   MOV.L       R13,@-R15
    00000DE8 53F7                   MOV.L       @(28,R15),R3
    00000DEA 2F36                   MOV.L       R3,@-R15
    00000DEC 62F3                   MOV         R15,R2
    00000DEE 7224                   ADD         #36,R2
    00000DF0 2F26                   MOV.L       R2,@-R15
    00000DF2 63F3                   MOV         R15,R3
    00000DF4 7330                   ADD         #48,R3
    00000DF6 2F36                   MOV.L       R3,@-R15
    00000DF8 62F3                   MOV         R15,R2
    00000DFA 7218                   ADD         #24,R2
    00000DFC 2F26                   MOV.L       R2,@-R15
    00000DFE 67F3                   MOV         R15,R7
    00000E00 7720                   ADD         #32,R7
    00000E02 66F3                   MOV         R15,R6
    00000E04 7624                   ADD         #36,R6
    00000E06 B6A1                   BSR         _MoveCursor
    00000E08 E405                   MOV         #5,R4
    00000E0A 7F1C                   ADD         #28,R15
          EDIT.c   695                    iPtr=iLines[iTopLine+iCy-1]+iCx;
    00000E0C 63F2                   MOV.L       @R15,R3
    00000E0E 50F1                   MOV.L       @(4,R15),R0
    00000E10 52F2                   MOV.L       @(8,R15),R2
    00000E12 303C                   ADD         R3,R0
    00000E14 70FF                   ADD         #-1,R0
    00000E16 4008                   SHLL2       R0
    00000E18 06DE                   MOV.L       @(R0,R13),R6
    00000E1A A011                   BRA         L4112
    00000E1C 362C                   ADD         R2,R6
    00000E1E              L5069:                            
    00000E1E 0000                   .DATA.W     0
    00000E20 <00000000>             .DATA.L     L595
    00000E24 <00000000>             .DATA.L     _PopupMessage
    00000E28 <00000000>             .DATA.L     _strlen
    00000E2C <00000000>             .DATA.L     _MoveCursor
    00000E30 <00000000>             .DATA.L     _CalcLines
    00000E34 <00000000>             .DATA.L     _GetSearchString
    00000E38 <00000000>             .DATA.L     L604
    00000E3C              L4117:                            
          EDIT.c   696                  }
          EDIT.c   697                  else
          EDIT.c   698                    iFound=1;
    00000E3C E054                   MOV         #84,R0
    00000E3E 0FB6                   MOV.L       R11,@(R0,R15)
    00000E40              L4112:                            
    00000E40 E054                   MOV         #84,R0
    00000E42 03FE                   MOV.L       @(R0,R15),R3
    00000E44 2338                   TST         R3,R3
    00000E46 8B03                   BF          L4111
    00000E48 E04C                   MOV         #76,R0
    00000E4A 03FE                   MOV.L       @(R0,R15),R3
    00000E4C 3633                   CMP/GE      R3,R6
    00000E4E 8BAF                   BF          L4113
    00000E50              L4111:                            
          EDIT.c   699                }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   700              }
          EDIT.c   701              if(iFound==0) PopupMessage(1,"Not found!",NULL,NULL,NULL,NULL);
    00000E50 E054                   MOV         #84,R0
    00000E52 01FE                   MOV.L       @(R0,R15),R1
    00000E54 2118                   TST         R1,R1
    00000E56 8901                   BT          L5074
    00000E58 A39D                   BRA         L1585
    00000E5A 0009                   NOP
    00000E5C              L5074:                            
    00000E5C 2FE6                   MOV.L       R14,@-R15
    00000E5E E300                   MOV         #0,R3
    00000E60 D530                   MOV.L       L5075+4,R5 ; L607
    00000E62 6733                   MOV         R3,R7
    00000E64 D230                   MOV.L       L5075+8,R2 ; _PopupMessage
    00000E66 6633                   MOV         R3,R6
    00000E68 2F36                   MOV.L       R3,@-R15
    00000E6A 420B                   JSR         @R2
    00000E6C E401                   MOV         #1,R4
    00000E6E A392                   BRA         L1585
    00000E70 7F08                   ADD         #8,R15
    00000E72              L2617:                           ; case label 
          EDIT.c   702              iRefresh=1;
          EDIT.c   703              break;
          EDIT.c   704            
          EDIT.c   705            //Save file
          EDIT.c   706            case -NODEFILESAVE: 
          EDIT.c   707              if(iBinary==0)
    00000E72 53FE                   MOV.L       @(56,R15),R3
    00000E74 2338                   TST         R3,R3
    00000E76 8B48                   BF          L4121
          EDIT.c   708              { 
          EDIT.c   709                if(iSaved==0)
    00000E78 53F9                   MOV.L       @(36,R15),R3
    00000E7A 2338                   TST         R3,R3
    00000E7C 8B3A                   BF          L4122
          EDIT.c   710                {
          EDIT.c   711                  iAnswer=1;
    00000E7E E040                   MOV         #64,R0
    00000E80 0FB6                   MOV.L       R11,@(R0,R15)
          EDIT.c   712                  if(iNewFile==1)
    00000E82 E048                   MOV         #72,R0
    00000E84 00FE                   MOV.L       @(R0,R15),R0
    00000E86 8801                   CMP/EQ      #1,R0
    00000E88 8B0E                   BF          L4123
          EDIT.c   713                  {
          EDIT.c   714                    if(FileExist(sRoot,sFolder,sFile)==1)
    00000E8A 56FB                   MOV.L       @(44,R15),R6
    00000E8C 55FC                   MOV.L       @(48,R15),R5
    00000E8E D327                   MOV.L       L5075+12,R3; _FileExist
    00000E90 430B                   JSR         @R3
    00000E92 54FD                   MOV.L       @(52,R15),R4
    00000E94 8801                   CMP/EQ      #1,R0
    00000E96 8B07                   BF          L4123
          EDIT.c   715                      iAnswer=PopupContinueYesNo("File exists.","Continue?",NULL);
    00000E98 D525                   MOV.L       L5075+16,R5; L612
    00000E9A D426                   MOV.L       L5075+20,R4; L611
    00000E9C D326                   MOV.L       L5075+24,R3; _PopupContinueYesNo




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E9E 430B                   JSR         @R3
    00000EA0 E600                   MOV         #0,R6
    00000EA2 61F3                   MOV         R15,R1
    00000EA4 7140                   ADD         #64,R1
    00000EA6 2102                   MOV.L       R0,@R1
    00000EA8              L4123:                            
          EDIT.c   716                  }  
          EDIT.c   717                  if(iAnswer==1)
    00000EA8 E040                   MOV         #64,R0
    00000EAA 00FE                   MOV.L       @(R0,R15),R0
    00000EAC 8801                   CMP/EQ      #1,R0
    00000EAE 8901                   BT          L5076
    00000EB0 A372                   BRA         L4066
    00000EB2 0009                   NOP
    00000EB4              L5076:                            
          EDIT.c   718                  {
          EDIT.c   719                    if(WriteFile(sRoot,sFolder,sFile,sText,sConfig->iNLMode)==1)
    00000EB4 52A4                   MOV.L       @(16,R10),R2
    00000EB6 67C3                   MOV         R12,R7
    00000EB8 D320                   MOV.L       L5075+28,R3; _WriteFile
    00000EBA 2F26                   MOV.L       R2,@-R15
    00000EBC 56FC                   MOV.L       @(48,R15),R6
    00000EBE 55FD                   MOV.L       @(52,R15),R5
    00000EC0 430B                   JSR         @R3
    00000EC2 54FE                   MOV.L       @(56,R15),R4
    00000EC4 8801                   CMP/EQ      #1,R0
    00000EC6 8F0A                   BF/S        L4126
    00000EC8 7F04                   ADD         #4,R15
          EDIT.c   720                    {
          EDIT.c   721                      MenuFunctionKey(KEY_CTRL_EXIT);
    00000ECA 9429                   MOV.W       L5075,R4   ; H'7532
    00000ECC D31C                   MOV.L       L5075+32,R3; _MenuFunctionKey
    00000ECE 430B                   JSR         @R3
    00000ED0 0009                   NOP
          EDIT.c   722                      iRefresh=2;
    00000ED2 E202                   MOV         #2,R2
    00000ED4 1F25                   MOV.L       R2,@(20,R15)
          EDIT.c   723                      iSaved=1;
          EDIT.c   724                      iNewFile=0;
    00000ED6 E048                   MOV         #72,R0
    00000ED8 1FB9                   MOV.L       R11,@(36,R15)
    00000EDA A35D                   BRA         L4066
    00000EDC 0FE6                   MOV.L       R14,@(R0,R15)
    00000EDE              L4126:                            
          EDIT.c   725                    }
          EDIT.c   726                    else
          EDIT.c   727                      PopupMessage(1,"File write error!",NULL,NULL,NULL,NULL);
    00000EDE E200                   MOV         #0,R2
    00000EE0 D518                   MOV.L       L5075+36,R5; L615
    00000EE2 6723                   MOV         R2,R7
    00000EE4 D310                   MOV.L       L5075+8,R3 ; _PopupMessage
    00000EE6 6623                   MOV         R2,R6
    00000EE8 2FE6                   MOV.L       R14,@-R15
    00000EEA 2F26                   MOV.L       R2,@-R15
    00000EEC 430B                   JSR         @R3
    00000EEE E401                   MOV         #1,R4
    00000EF0 A352                   BRA         L4066




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EF2 7F08                   ADD         #8,R15
    00000EF4              L4122:                            
          EDIT.c   728                  }
          EDIT.c   729                }
          EDIT.c   730                else
          EDIT.c   731                  PopupMessage(1,"Already saved!",NULL,NULL,NULL,NULL);
    00000EF4 2FE6                   MOV.L       R14,@-R15
    00000EF6 E300                   MOV         #0,R3
    00000EF8 D513                   MOV.L       L5075+40,R5; L616
    00000EFA 6733                   MOV         R3,R7
    00000EFC D20A                   MOV.L       L5075+8,R2 ; _PopupMessage
    00000EFE 6633                   MOV         R3,R6
    00000F00 2F36                   MOV.L       R3,@-R15
    00000F02 420B                   JSR         @R2
    00000F04 E401                   MOV         #1,R4
    00000F06 A347                   BRA         L4066
    00000F08 7F08                   ADD         #8,R15
    00000F0A              L4121:                            
          EDIT.c   732              }
          EDIT.c   733              else
          EDIT.c   734                PopupMessage(1,"Binary files can","not be modified.",NULL,NULL,NULL);
    00000F0A E200                   MOV         #0,R2
    00000F0C D60F                   MOV.L       L5075+44,R6; L618
    00000F0E 6723                   MOV         R2,R7
    00000F10 D50F                   MOV.L       L5075+48,R5; L617
    00000F12 2F26                   MOV.L       R2,@-R15
    00000F14 2F26                   MOV.L       R2,@-R15
    00000F16 D304                   MOV.L       L5075+8,R3 ; _PopupMessage
    00000F18 430B                   JSR         @R3
    00000F1A E401                   MOV         #1,R4
          EDIT.c   735              break;
    00000F1C A33C                   BRA         L4066
    00000F1E 7F08                   ADD         #8,R15
    00000F20              L5075:                            
    00000F20 7532                   .DATA.W     H'7532
    00000F22 0000                   .DATA.W     0
    00000F24 <00000000>             .DATA.L     L607
    00000F28 <00000000>             .DATA.L     _PopupMessage
    00000F2C <00000000>             .DATA.L     _FileExist
    00000F30 <00000000>             .DATA.L     L612
    00000F34 <00000000>             .DATA.L     L611
    00000F38 <00000000>             .DATA.L     _PopupContinueYesNo
    00000F3C <00000000>             .DATA.L     _WriteFile
    00000F40 <00000000>             .DATA.L     _MenuFunctionKey
    00000F44 <00000000>             .DATA.L     L615
    00000F48 <00000000>             .DATA.L     L616
    00000F4C <00000000>             .DATA.L     L618
    00000F50 <00000000>             .DATA.L     L617
    00000F54              L2624:                           ; case label 
          EDIT.c   736            
          EDIT.c   737            //Save as
          EDIT.c   738            case -NODEFILESVAS: 
          EDIT.c   739              if(GetFolder(sRootAux,sFolderAux,sConfig))
    00000F54 957D                   MOV.W       L5077,R5   ; H'008C
    00000F56 66A3                   MOV         R10,R6
    00000F58 947C                   MOV.W       L5077+2,R4 ; H'009C
    00000F5A 35FC                   ADD         R15,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F5C D340                   MOV.L       L5077+14,R3; _GetFolder
    00000F5E 430B                   JSR         @R3
    00000F60 34FC                   ADD         R15,R4
    00000F62 2008                   TST         R0,R0
    00000F64 8B01                   BF          L5078
    00000F66 A145                   BRA         L1592
    00000F68 0009                   NOP
    00000F6A              L5078:                            
          EDIT.c   740              {
          EDIT.c   741                strcpy(sFileAux,sFile);
    00000F6A 60F3                   MOV         R15,R0
    00000F6C D33D                   MOV.L       L5077+18,R3; __slow_strcpy
    00000F6E 51FB                   MOV.L       @(44,R15),R1
    00000F70 430B                   JSR         @R3
    00000F72 707C                   ADD         #124,R0
          EDIT.c   742                if(GetFileName(sFileAux,FMAXLEN(sRootAux)))
    00000F74 D53C                   MOV.L       L5077+22,R5; L620
    00000F76 946D                   MOV.W       L5077+2,R4 ; H'009C
    00000F78 D33C                   MOV.L       L5077+26,R3; __quick_strcmp1
    00000F7A 430B                   JSR         @R3
    00000F7C 34FC                   ADD         R15,R4
    00000F7E 2008                   TST         R0,R0
    00000F80 8B01                   BF          L4132
    00000F82 A001                   BRA         L4133
    00000F84 E508                   MOV         #8,R5
    00000F86              L4132:                            
    00000F86 E50C                   MOV         #12,R5
    00000F88              L4133:                            
    00000F88 D239                   MOV.L       L5077+30,R2; _GetFileName
    00000F8A 64F3                   MOV         R15,R4
    00000F8C 420B                   JSR         @R2
    00000F8E 747C                   ADD         #124,R4
    00000F90 2008                   TST         R0,R0
    00000F92 8B01                   BF          L5079
    00000F94 A12E                   BRA         L1592
    00000F96 0009                   NOP
    00000F98              L5079:                            
          EDIT.c   743                {
          EDIT.c   744                  if(FileExist(sRootAux,sFolderAux,sFileAux)==1)
    00000F98 955B                   MOV.W       L5077,R5   ; H'008C
    00000F9A 66F3                   MOV         R15,R6
    00000F9C 945A                   MOV.W       L5077+2,R4 ; H'009C
    00000F9E 35FC                   ADD         R15,R5
    00000FA0 D234                   MOV.L       L5077+34,R2; _FileExist
    00000FA2 767C                   ADD         #124,R6
    00000FA4 420B                   JSR         @R2
    00000FA6 34FC                   ADD         R15,R4
    00000FA8 8801                   CMP/EQ      #1,R0
    00000FAA 8B08                   BF          L4134
          EDIT.c   745                    iAnswer=PopupContinueYesNo("File exists.","Overwrite?",NULL);
    00000FAC D532                   MOV.L       L5077+38,R5; L622
    00000FAE D433                   MOV.L       L5077+42,R4; L611
    00000FB0 D233                   MOV.L       L5077+46,R2; _PopupContinueYesNo
    00000FB2 420B                   JSR         @R2
    00000FB4 E600                   MOV         #0,R6
    00000FB6 61F3                   MOV         R15,R1
    00000FB8 7140                   ADD         #64,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FBA A002                   BRA         L4135
    00000FBC 2102                   MOV.L       R0,@R1
    00000FBE              L4134:                            
          EDIT.c   746                  else
          EDIT.c   747                    iAnswer=1;
    00000FBE E040                   MOV         #64,R0
    00000FC0 0FB6                   MOV.L       R11,@(R0,R15)
    00000FC2              L4135:                            
          EDIT.c   748                  if(iAnswer==1)
    00000FC2 E040                   MOV         #64,R0
    00000FC4 00FE                   MOV.L       @(R0,R15),R0
    00000FC6 8801                   CMP/EQ      #1,R0
    00000FC8 8901                   BT          L5080
    00000FCA A113                   BRA         L1592
    00000FCC 0009                   NOP
    00000FCE              L5080:                            
          EDIT.c   749                  {
          EDIT.c   750                    if(WriteFile(sRootAux,sFolderAux,sFileAux,sText,sConfig->iNLMode)==1)
    00000FCE 67C3                   MOV         R12,R7
    00000FD0 9641                   MOV.W       L5077+4,R6 ; H'0080
    00000FD2 52A4                   MOV.L       @(16,R10),R2
    00000FD4 9540                   MOV.W       L5077+6,R5 ; H'0090
    00000FD6 2F26                   MOV.L       R2,@-R15
    00000FD8 943F                   MOV.W       L5077+8,R4 ; H'00A0
    00000FDA 36FC                   ADD         R15,R6
    00000FDC D329                   MOV.L       L5077+50,R3; _WriteFile
    00000FDE 35FC                   ADD         R15,R5
    00000FE0 430B                   JSR         @R3
    00000FE2 34FC                   ADD         R15,R4
    00000FE4 8801                   CMP/EQ      #1,R0
    00000FE6 8F17                   BF/S        L4137
    00000FE8 7F04                   ADD         #4,R15
          EDIT.c   751                    {
          EDIT.c   752                      strcpy(sRoot,sRootAux);
    00000FEA 9133                   MOV.W       L5077+2,R1 ; H'009C
    00000FEC D31D                   MOV.L       L5077+18,R3; __slow_strcpy
    00000FEE 31FC                   ADD         R15,R1
    00000FF0 430B                   JSR         @R3
    00000FF2 50FD                   MOV.L       @(52,R15),R0
          EDIT.c   753                      strcpy(sFolder,sFolderAux);
    00000FF4 912D                   MOV.W       L5077,R1   ; H'008C
    00000FF6 31FC                   ADD         R15,R1
    00000FF8 D21A                   MOV.L       L5077+18,R2; __slow_strcpy
    00000FFA 420B                   JSR         @R2
    00000FFC 50FC                   MOV.L       @(48,R15),R0
          EDIT.c   754                      strcpy(sFile,sFileAux);
    00000FFE 61F3                   MOV         R15,R1
    00001000 D318                   MOV.L       L5077+18,R3; __slow_strcpy
    00001002 717C                   ADD         #124,R1
    00001004 430B                   JSR         @R3
    00001006 50FB                   MOV.L       @(44,R15),R0
          EDIT.c   755                      MenuFunctionKey(KEY_CTRL_EXIT);
    00001008 9428                   MOV.W       L5077+10,R4; H'7532
    0000100A D31F                   MOV.L       L5077+54,R3; _MenuFunctionKey
    0000100C 430B                   JSR         @R3
    0000100E 0009                   NOP
          EDIT.c   756                      iSaved=1;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001010 1FB9                   MOV.L       R11,@(36,R15)
          EDIT.c   757                      iNewFile=0;
    00001012 E048                   MOV         #72,R0
    00001014 A0EE                   BRA         L1592
    00001016 0FE6                   MOV.L       R14,@(R0,R15)
    00001018              L4137:                            
          EDIT.c   758                    }
          EDIT.c   759                    else
          EDIT.c   760                      PopupMessage(1,"File write error!",NULL,NULL,NULL,NULL);
    00001018 2FE6                   MOV.L       R14,@-R15
    0000101A E200                   MOV         #0,R2
    0000101C D51B                   MOV.L       L5077+58,R5; L615
    0000101E 6723                   MOV         R2,R7
    00001020 D31B                   MOV.L       L5077+62,R3; _PopupMessage
    00001022 6623                   MOV         R2,R6
    00001024 2F26                   MOV.L       R2,@-R15
    00001026 430B                   JSR         @R3
    00001028 E401                   MOV         #1,R4
    0000102A A0E3                   BRA         L1592
    0000102C 7F08                   ADD         #8,R15
    0000102E              L2627:                           ; case label 
          EDIT.c   761                  }
          EDIT.c   762                }
          EDIT.c   763              }
          EDIT.c   764              iRefresh=2;
          EDIT.c   765              break;
          EDIT.c   766           
          EDIT.c   767            //Set auto file
          EDIT.c   768            case -NODEFILEAUTO: 
          EDIT.c   769              if(iNewFile==1 || iSaved==0)
    0000102E E048                   MOV         #72,R0
    00001030 00FE                   MOV.L       @(R0,R15),R0
    00001032 8801                   CMP/EQ      #1,R0
    00001034 8902                   BT          L4140
    00001036 52F9                   MOV.L       @(36,R15),R2
    00001038 2228                   TST         R2,R2
    0000103A 8B2D                   BF          L4139
    0000103C              L4140:                            
          EDIT.c   770              {
          EDIT.c   771                PopupMessage(1,"Save file first!",NULL,NULL,NULL,NULL);
    0000103C 2FE6                   MOV.L       R14,@-R15
    0000103E E300                   MOV         #0,R3
    00001040 D514                   MOV.L       L5077+66,R5; L626
    00001042 6733                   MOV         R3,R7
    00001044 D212                   MOV.L       L5077+62,R2; _PopupMessage
    00001046 6633                   MOV         R3,R6
    00001048 2F36                   MOV.L       R3,@-R15
    0000104A 420B                   JSR         @R2
    0000104C E401                   MOV         #1,R4
    0000104E A2A3                   BRA         L4066
    00001050 7F08                   ADD         #8,R15
    00001052              L5077:                            
    00001052 008C                   .DATA.W     H'008C
    00001054 009C                   .DATA.W     H'009C
    00001056 0080                   .DATA.W     H'0080
    00001058 0090                   .DATA.W     H'0090
    0000105A 00A0                   .DATA.W     H'00A0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000105C 7532                   .DATA.W     H'7532
    0000105E 0000                   .DATA.W     0
    00001060 <00000000>             .DATA.L     _GetFolder
    00001064 <00000000>             .DATA.L     __slow_strcpy
    00001068 <00000000>             .DATA.L     L620
    0000106C <00000000>             .DATA.L     __quick_strcmp1
    00001070 <00000000>             .DATA.L     _GetFileName
    00001074 <00000000>             .DATA.L     _FileExist
    00001078 <00000000>             .DATA.L     L622
    0000107C <00000000>             .DATA.L     L611
    00001080 <00000000>             .DATA.L     _PopupContinueYesNo
    00001084 <00000000>             .DATA.L     _WriteFile
    00001088 <00000000>             .DATA.L     _MenuFunctionKey
    0000108C <00000000>             .DATA.L     L615
    00001090 <00000000>             .DATA.L     _PopupMessage
    00001094 <00000000>             .DATA.L     L626
    00001098              L4139:                            
          EDIT.c   772              }
          EDIT.c   773              else
          EDIT.c   774              {
          EDIT.c   775                sprintf(sConfig->sAutoRoot,sRoot);
    00001098 52FD                   MOV.L       @(52,R15),R2
    0000109A 64A3                   MOV         R10,R4
    0000109C D328                   MOV.L       L5081+4,R3 ; _sprintf
    0000109E 2F26                   MOV.L       R2,@-R15
    000010A0 430B                   JSR         @R3
    000010A2 7430                   ADD         #48,R4
          EDIT.c   776                sprintf(sConfig->sAutoFile,sFile);
    000010A4 52FC                   MOV.L       @(48,R15),R2
    000010A6 64A3                   MOV         R10,R4
    000010A8 D325                   MOV.L       L5081+4,R3 ; _sprintf
    000010AA 2F26                   MOV.L       R2,@-R15
    000010AC 430B                   JSR         @R3
    000010AE 7435                   ADD         #53,R4
          EDIT.c   777                sprintf(sConfig->sAutoFolder,sFolder);
    000010B0 52FE                   MOV.L       @(56,R15),R2
    000010B2 64A3                   MOV         R10,R4
    000010B4 D322                   MOV.L       L5081+4,R3 ; _sprintf
    000010B6 2F26                   MOV.L       R2,@-R15
    000010B8 430B                   JSR         @R3
    000010BA 7442                   ADD         #66,R4
          EDIT.c   778                sConfig->iAutoOpen=1;
    000010BC 1ABB                   MOV.L       R11,@(44,R10)
          EDIT.c   779                ConfigExport(sConfig);
    000010BE D221                   MOV.L       L5081+8,R2 ; _ConfigExport
    000010C0 420B                   JSR         @R2
    000010C2 64A3                   MOV         R10,R4
          EDIT.c   780                PopupMessage(1,"Current file will",
          EDIT.c   781                               "be opened next   ",
          EDIT.c   782                               "time the editor  ",
          EDIT.c   783                               "is started.      ", 
          EDIT.c   784                               NULL);
    000010C4 D220                   MOV.L       L5081+12,R2; L631
    000010C6 E300                   MOV         #0,R3
    000010C8 D720                   MOV.L       L5081+16,R7; L630
    000010CA 2F36                   MOV.L       R3,@-R15
    000010CC 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010CE D620                   MOV.L       L5081+20,R6; L629
    000010D0 D520                   MOV.L       L5081+24,R5; L628
    000010D2 D121                   MOV.L       L5081+28,R1; _PopupMessage
    000010D4 410B                   JSR         @R1
    000010D6 E401                   MOV         #1,R4
          EDIT.c   785                MenuFunctionKey(KEY_CTRL_EXIT);
    000010D8 9430                   MOV.W       L5081,R4   ; H'7532
    000010DA D320                   MOV.L       L5081+32,R3; _MenuFunctionKey
    000010DC 430B                   JSR         @R3
    000010DE 7F14                   ADD         #20,R15
          EDIT.c   786              }
          EDIT.c   787              break;
    000010E0 A25A                   BRA         L4066
    000010E2 0009                   NOP
    000010E4              L2633:                           ; case label 
          EDIT.c   788            
          EDIT.c   789            //Attend exit key (must be outside of switch)
          EDIT.c   790            case KEY_CTRL_EXIT:
          EDIT.c   791              if(MenuGetBar()==MENUBARMAIN)
    000010E4 D31E                   MOV.L       L5081+36,R3; _MenuGetBar
    000010E6 430B                   JSR         @R3
    000010E8 0009                   NOP
    000010EA 8801                   CMP/EQ      #1,R0
    000010EC 8B21                   BF          L4142
          EDIT.c   792              { 
          EDIT.c   793                if(iSaved==0)
    000010EE 53F9                   MOV.L       @(36,R15),R3
    000010F0 2338                   TST         R3,R3
    000010F2 8B0D                   BF          L4143
          EDIT.c   794                {
          EDIT.c   795                  if(sText[0]==ENDMARK)
    000010F4 60C0                   MOV.B       @R12,R0
    000010F6 880C                   CMP/EQ      #12,R0
    000010F8 8B02                   BF          L4144
          EDIT.c   796                    iAnswer=1;
    000010FA E040                   MOV         #64,R0
    000010FC A008                   BRA         L4143
    000010FE 0FB6                   MOV.L       R11,@(R0,R15)
    00001100              L4144:                            
          EDIT.c   797                  else
          EDIT.c   798                    iAnswer=PopupContinueYesNo("File not saved.","Ignore changes?",NULL);
    00001100 D518                   MOV.L       L5081+40,R5; L635
    00001102 D419                   MOV.L       L5081+44,R4; L634
    00001104 D219                   MOV.L       L5081+48,R2; _PopupContinueYesNo
    00001106 420B                   JSR         @R2
    00001108 E600                   MOV         #0,R6
    0000110A 61F3                   MOV         R15,R1
    0000110C 7140                   ADD         #64,R1
    0000110E 2102                   MOV.L       R0,@R1
    00001110              L4143:                            
          EDIT.c   799                }
          EDIT.c   800                if(iSaved==1 || (iSaved==0 && iAnswer==1)) iExit=1;
    00001110 50F9                   MOV.L       @(36,R15),R0
    00001112 8801                   CMP/EQ      #1,R0
    00001114 890A                   BT          L4147
    00001116 52F9                   MOV.L       @(36,R15),R2
    00001118 2228                   TST         R2,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000111A 8901                   BT          L5082
    0000111C A23C                   BRA         L4066
    0000111E 0009                   NOP
    00001120              L5082:                            
    00001120 E040                   MOV         #64,R0
    00001122 00FE                   MOV.L       @(R0,R15),R0
    00001124 8801                   CMP/EQ      #1,R0
    00001126 8901                   BT          L5083
    00001128 A236                   BRA         L4066
    0000112A 0009                   NOP
    0000112C              L5083:                            
    0000112C              L4147:                            
    0000112C E060                   MOV         #96,R0
    0000112E A233                   BRA         L4066
    00001130 0FB6                   MOV.L       R11,@(R0,R15)
    00001132              L4142:                            
          EDIT.c   801              }
          EDIT.c   802              else 
          EDIT.c   803                MenuFunctionKey(iKey);
    00001132 D30A                   MOV.L       L5081+32,R3; _MenuFunctionKey
    00001134 430B                   JSR         @R3
    00001136 54F6                   MOV.L       @(24,R15),R4
          EDIT.c   804              break;
    00001138 A22E                   BRA         L4066
    0000113A 0009                   NOP
    0000113C              L5081:                            
    0000113C 7532                   .DATA.W     H'7532
    0000113E 0000                   .DATA.W     0
    00001140 <00000000>             .DATA.L     _sprintf
    00001144 <00000000>             .DATA.L     _ConfigExport
    00001148 <00000000>             .DATA.L     L631
    0000114C <00000000>             .DATA.L     L630
    00001150 <00000000>             .DATA.L     L629
    00001154 <00000000>             .DATA.L     L628
    00001158 <00000000>             .DATA.L     _PopupMessage
    0000115C <00000000>             .DATA.L     _MenuFunctionKey
    00001160 <00000000>             .DATA.L     _MenuGetBar
    00001164 <00000000>             .DATA.L     L635
    00001168 <00000000>             .DATA.L     L634
    0000116C <00000000>             .DATA.L     _PopupContinueYesNo
    00001170              L2636:                           ; case label 
          EDIT.c   805              
          EDIT.c   806            //Set up
          EDIT.c   807            case -NODEHELPOPTN:
          EDIT.c   808            case KEY_CTRL_SETUP:
    00001170              L2637:                           ; case label 
          EDIT.c   809              iAFont=sConfig->iFont;
    00001170 53A9                   MOV.L       @(36,R10),R3
    00001172 1F38                   MOV.L       R3,@(32,R15)
          EDIT.c   810              iAWWrap=sConfig->iWordWrap;
    00001174 52A5                   MOV.L       @(20,R10),R2
    00001176 1F26                   MOV.L       R2,@(24,R15)
          EDIT.c   811              Configuration(sConfig);
    00001178 D34E                   MOV.L       L5084+4,R3 ; _Configuration
    0000117A 430B                   JSR         @R3
    0000117C 64A3                   MOV         R10,R4
          EDIT.c   812              if(iAFont!=sConfig->iFont)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000117E 52A9                   MOV.L       @(36,R10),R2
    00001180 53F8                   MOV.L       @(32,R15),R3
    00001182 3320                   CMP/EQ      R2,R3
    00001184 891A                   BT          L4149
          EDIT.c   813              {
          EDIT.c   814                SetEditorFont(sConfig->iFont,&iCntx);
    00001186 65F3                   MOV         R15,R5
    00001188 750C                   ADD         #12,R5
    0000118A B457                   BSR         _SetEditorFont
    0000118C 54A9                   MOV.L       @(36,R10),R4
          EDIT.c   815                SetFontContext(iCntx);
    0000118E D34A                   MOV.L       L5084+8,R3 ; _SetFontContext
    00001190 430B                   JSR         @R3
    00001192 54F3                   MOV.L       @(12,R15),R4
          EDIT.c   816                iTopLine=0; iColumn=0; iCx=0; iCy=1;
    00001194 2FE2                   MOV.L       R14,@R15
          EDIT.c   817                CalcLines(sText,iLines,&iLNum,iTopLine,iCntx,sConfig);
    00001196 E700                   MOV         #0,R7
    00001198 1FE7                   MOV.L       R14,@(28,R15)
    0000119A 65D3                   MOV         R13,R5
    0000119C 1FE2                   MOV.L       R14,@(8,R15)
    0000119E 1FB1                   MOV.L       R11,@(4,R15)
    000011A0 2FA6                   MOV.L       R10,@-R15
    000011A2 53F4                   MOV.L       @(16,R15),R3
    000011A4 2F36                   MOV.L       R3,@-R15
    000011A6 66F3                   MOV         R15,R6
    000011A8 7618                   ADD         #24,R6
    000011AA B6FE                   BSR         _CalcLines
    000011AC 64C3                   MOV         R12,R4
    000011AE 7F08                   ADD         #8,R15
          EDIT.c   818                iClipMode=0;
    000011B0 1FEA                   MOV.L       R14,@(40,R15)
          EDIT.c   819                iStart=0;
    000011B2 68E3                   MOV         R14,R8
          EDIT.c   820                iEnd=0;
    000011B4 69E3                   MOV         R14,R9
          EDIT.c   821                iAEnd=-1;
    000011B6 E3FF                   MOV         #-1,R3
    000011B8 E068                   MOV         #104,R0
    000011BA 0F36                   MOV.L       R3,@(R0,R15)
    000011BC              L4149:                            
          EDIT.c   822              }
          EDIT.c   823              if(iAWWrap!=sConfig->iWordWrap)
    000011BC 52A5                   MOV.L       @(20,R10),R2
    000011BE 51F6                   MOV.L       @(24,R15),R1
    000011C0 3120                   CMP/EQ      R2,R1
    000011C2 8913                   BT          L1591
          EDIT.c   824              {
          EDIT.c   825                iTopLine=0; iColumn=0; iCx=0; iCy=1;
    000011C4 2FE2                   MOV.L       R14,@R15
          EDIT.c   826                CalcLines(sText,iLines,&iLNum,iTopLine,iCntx,sConfig);
    000011C6 E700                   MOV         #0,R7
    000011C8 1FE7                   MOV.L       R14,@(28,R15)
    000011CA 65D3                   MOV         R13,R5
    000011CC 1FE2                   MOV.L       R14,@(8,R15)
    000011CE 1FB1                   MOV.L       R11,@(4,R15)
    000011D0 2FA6                   MOV.L       R10,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011D2 53F4                   MOV.L       @(16,R15),R3
    000011D4 2F36                   MOV.L       R3,@-R15
    000011D6 66F3                   MOV         R15,R6
    000011D8 7618                   ADD         #24,R6
    000011DA B6E6                   BSR         _CalcLines
    000011DC 64C3                   MOV         R12,R4
    000011DE 7F08                   ADD         #8,R15
          EDIT.c   827                iClipMode=0;
    000011E0 1FEA                   MOV.L       R14,@(40,R15)
          EDIT.c   828                iStart=0;
    000011E2 68E3                   MOV         R14,R8
          EDIT.c   829                iEnd=0;
    000011E4 69E3                   MOV         R14,R9
          EDIT.c   830                iAEnd=-1;
    000011E6 E3FF                   MOV         #-1,R3
    000011E8 E068                   MOV         #104,R0
    000011EA 0F36                   MOV.L       R3,@(R0,R15)
    000011EC              L1591:
          EDIT.c   831              }
          EDIT.c   832              MenuFunctionKey(KEY_CTRL_EXIT);
    000011EC 9460                   MOV.W       L5084,R4   ; H'7532
    000011EE D333                   MOV.L       L5084+12,R3; _MenuFunctionKey
    000011F0 430B                   JSR         @R3
    000011F2 0009                   NOP
    000011F4              L1592:
          EDIT.c   833              iRefresh=2;
    000011F4 E202                   MOV         #2,R2
          EDIT.c   834              break;
    000011F6 A1CF                   BRA         L4066
    000011F8 1F25                   MOV.L       R2,@(20,R15)
    000011FA              L2638:                           ; case label 
          EDIT.c   835            
          EDIT.c   836            //Cursor x++
          EDIT.c   837            case KEY_CTRL_RIGHT: 
          EDIT.c   838              MoveCursor(CURSORRIGHT,1,&iCx,&iCy,&iTopLine,&iColumn,
          EDIT.c   839              &iRefresh,iLNum,iLines,sText,iCntx);
    000011FA E501                   MOV         #1,R5
    000011FC 51F3                   MOV.L       @(12,R15),R1
    000011FE 2F16                   MOV.L       R1,@-R15
    00001200 2FC6                   MOV.L       R12,@-R15
    00001202 2FD6                   MOV.L       R13,@-R15
    00001204 53F7                   MOV.L       @(28,R15),R3
    00001206 2F36                   MOV.L       R3,@-R15
    00001208 62F3                   MOV         R15,R2
    0000120A 7224                   ADD         #36,R2
    0000120C 2F26                   MOV.L       R2,@-R15
    0000120E 63F3                   MOV         R15,R3
    00001210 7330                   ADD         #48,R3
    00001212 2F36                   MOV.L       R3,@-R15
    00001214 62F3                   MOV         R15,R2
    00001216 7218                   ADD         #24,R2
    00001218 2F26                   MOV.L       R2,@-R15
    0000121A 67F3                   MOV         R15,R7
    0000121C 7720                   ADD         #32,R7
    0000121E 66F3                   MOV         R15,R6
    00001220 7624                   ADD         #36,R6
          EDIT.c   840              break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001222 A041                   BRA         L4910
    00001224 E405                   MOV         #5,R4
    00001226              L2639:                           ; case label 
          EDIT.c   841              
          EDIT.c   842            //Cursor x--
          EDIT.c   843            case KEY_CTRL_LEFT: 
          EDIT.c   844              MoveCursor(CURSORLEFT,1,&iCx,&iCy,&iTopLine,&iColumn,
          EDIT.c   845              &iRefresh,iLNum,iLines,sText,iCntx);
    00001226 E501                   MOV         #1,R5
    00001228 53F3                   MOV.L       @(12,R15),R3
    0000122A 2F36                   MOV.L       R3,@-R15
    0000122C 2FC6                   MOV.L       R12,@-R15
    0000122E 2FD6                   MOV.L       R13,@-R15
    00001230 53F7                   MOV.L       @(28,R15),R3
    00001232 2F36                   MOV.L       R3,@-R15
    00001234 62F3                   MOV         R15,R2
    00001236 7224                   ADD         #36,R2
    00001238 2F26                   MOV.L       R2,@-R15
    0000123A 63F3                   MOV         R15,R3
    0000123C 7330                   ADD         #48,R3
    0000123E 2F36                   MOV.L       R3,@-R15
    00001240 62F3                   MOV         R15,R2
    00001242 7218                   ADD         #24,R2
    00001244 2F26                   MOV.L       R2,@-R15
    00001246 67F3                   MOV         R15,R7
    00001248 7720                   ADD         #32,R7
    0000124A 66F3                   MOV         R15,R6
    0000124C 7624                   ADD         #36,R6
          EDIT.c   846              break;
    0000124E A02B                   BRA         L4910
    00001250 E406                   MOV         #6,R4
    00001252              L2640:                           ; case label 
          EDIT.c   847              
          EDIT.c   848            //Cursor y++
          EDIT.c   849            case KEY_CTRL_DOWN:  
          EDIT.c   850              MoveCursor(CURSORDOWN,1,&iCx,&iCy,&iTopLine,&iColumn,
          EDIT.c   851              &iRefresh,iLNum,iLines,sText,iCntx);
    00001252 E501                   MOV         #1,R5
    00001254 53F3                   MOV.L       @(12,R15),R3
    00001256 2F36                   MOV.L       R3,@-R15
    00001258 2FC6                   MOV.L       R12,@-R15
    0000125A 2FD6                   MOV.L       R13,@-R15
    0000125C 53F7                   MOV.L       @(28,R15),R3
    0000125E 2F36                   MOV.L       R3,@-R15
    00001260 62F3                   MOV         R15,R2
    00001262 7224                   ADD         #36,R2
    00001264 2F26                   MOV.L       R2,@-R15
    00001266 63F3                   MOV         R15,R3
    00001268 7330                   ADD         #48,R3
    0000126A 2F36                   MOV.L       R3,@-R15
    0000126C 62F3                   MOV         R15,R2
    0000126E 7218                   ADD         #24,R2
    00001270 2F26                   MOV.L       R2,@-R15
    00001272 67F3                   MOV         R15,R7
    00001274 7720                   ADD         #32,R7
    00001276 66F3                   MOV         R15,R6
    00001278 7624                   ADD         #36,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   852              break;
    0000127A A015                   BRA         L4910
    0000127C E407                   MOV         #7,R4
    0000127E              L2641:                           ; case label 
          EDIT.c   853              
          EDIT.c   854            //Cursor y--
          EDIT.c   855            case KEY_CTRL_UP:    
          EDIT.c   856              MoveCursor(CURSORUP,1,&iCx,&iCy,&iTopLine,&iColumn,
          EDIT.c   857              &iRefresh,iLNum,iLines,sText,iCntx);
    0000127E E501                   MOV         #1,R5
    00001280 53F3                   MOV.L       @(12,R15),R3
    00001282 E408                   MOV         #8,R4
    00001284 2F36                   MOV.L       R3,@-R15
    00001286 2FC6                   MOV.L       R12,@-R15
    00001288 2FD6                   MOV.L       R13,@-R15
    0000128A 53F7                   MOV.L       @(28,R15),R3
    0000128C 2F36                   MOV.L       R3,@-R15
    0000128E 62F3                   MOV         R15,R2
    00001290 7224                   ADD         #36,R2
    00001292 2F26                   MOV.L       R2,@-R15
    00001294 63F3                   MOV         R15,R3
    00001296 7330                   ADD         #48,R3
    00001298 2F36                   MOV.L       R3,@-R15
    0000129A 62F3                   MOV         R15,R2
    0000129C 7218                   ADD         #24,R2
    0000129E 2F26                   MOV.L       R2,@-R15
    000012A0 67F3                   MOV         R15,R7
    000012A2 7720                   ADD         #32,R7
    000012A4 66F3                   MOV         R15,R6
    000012A6 7624                   ADD         #36,R6
          EDIT.c   858              break;
    000012A8              L4910:                            
    000012A8 B450                   BSR         _MoveCursor
    000012AA 0009                   NOP
    000012AC A174                   BRA         L4066
    000012AE 7F1C                   ADD         #28,R15
    000012B0              L5084:                            
    000012B0 7532                   .DATA.W     H'7532
    000012B2 0000                   .DATA.W     0
    000012B4 <00000000>             .DATA.L     _Configuration
    000012B8 <00000000>             .DATA.L     _SetFontContext
    000012BC <00000000>             .DATA.L     _MenuFunctionKey
    000012C0              L2642:                           ; case label 
          EDIT.c   859              
          EDIT.c   860            //Delete fowards
          EDIT.c   861            case KEY_CTRL_AC: 
          EDIT.c   862              
          EDIT.c   863              //Do not delete in clip mode
          EDIT.c   864              if(iClipMode==1) break;
    000012C0 50FA                   MOV.L       @(40,R15),R0
    000012C2 8801                   CMP/EQ      #1,R0
    000012C4 8B01                   BF          L5085
    000012C6 A167                   BRA         L4066
    000012C8 0009                   NOP
    000012CA              L5085:                            
          EDIT.c   865              
          EDIT.c   866              //Mark cursor position




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   867              MoveCursor(CURSORMARK,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    000012CA E501                   MOV         #1,R5
    000012CC 53F3                   MOV.L       @(12,R15),R3
    000012CE 2F36                   MOV.L       R3,@-R15
    000012D0 2FC6                   MOV.L       R12,@-R15
    000012D2 2FD6                   MOV.L       R13,@-R15
    000012D4 53F7                   MOV.L       @(28,R15),R3
    000012D6 2F36                   MOV.L       R3,@-R15
    000012D8 62F3                   MOV         R15,R2
    000012DA 7224                   ADD         #36,R2
    000012DC 2F26                   MOV.L       R2,@-R15
    000012DE 63F3                   MOV         R15,R3
    000012E0 7330                   ADD         #48,R3
    000012E2 2F36                   MOV.L       R3,@-R15
    000012E4 62F3                   MOV         R15,R2
    000012E6 7218                   ADD         #24,R2
    000012E8 2F26                   MOV.L       R2,@-R15
    000012EA 67F3                   MOV         R15,R7
    000012EC 7720                   ADD         #32,R7
    000012EE 66F3                   MOV         R15,R6
    000012F0 7624                   ADD         #36,R6
    000012F2 B42B                   BSR         _MoveCursor
    000012F4 E40B                   MOV         #11,R4
    000012F6 7F1C                   ADD         #28,R15
          EDIT.c   868              
          EDIT.c   869              //Delete character from text
          EDIT.c   870              iLen=strlen(sText);
    000012F8 D25D                   MOV.L       L5086,R2   ; _strlen
    000012FA 420B                   JSR         @R2
    000012FC 64C3                   MOV         R12,R4
    000012FE 6603                   MOV         R0,R6
          EDIT.c   871              iPtr=iLines[iTopLine+iCy-1]+iCx;
    00001300 63F2                   MOV.L       @R15,R3
          EDIT.c   872              if(iPtr<iLen-1)
    00001302 6163                   MOV         R6,R1
    00001304 50F1                   MOV.L       @(4,R15),R0
    00001306 71FF                   ADD         #-1,R1
    00001308 52F2                   MOV.L       @(8,R15),R2
    0000130A 303C                   ADD         R3,R0
    0000130C 70FF                   ADD         #-1,R0
    0000130E 4008                   SHLL2       R0
    00001310 04DE                   MOV.L       @(R0,R13),R4
    00001312 342C                   ADD         R2,R4
    00001314 3413                   CMP/GE      R1,R4
    00001316 8913                   BT          L4152
          EDIT.c   873              {
          EDIT.c   874                for(i=iPtr;i<iLen;i++) sText[i]=sText[i+1];
    00001318 6543                   MOV         R4,R5
    0000131A 3563                   CMP/GE      R6,R5
    0000131C 8D06                   BT/S        L4153
    0000131E 34CC                   ADD         R12,R4
    00001320              L4154:                            
    00001320 8441                   MOV.B       @(1,R4),R0
    00001322 7501                   ADD         #1,R5
    00001324 2400                   MOV.B       R0,@R4
    00001326 3563                   CMP/GE      R6,R5
    00001328 8FFA                   BF/S        L4154




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000132A 7401                   ADD         #1,R4
    0000132C              L4153:                            
          EDIT.c   875                CalcLines(sText,iLines,&iLNum,iTopLine,iCntx,sConfig);
    0000132C 2FA6                   MOV.L       R10,@-R15
    0000132E 65D3                   MOV         R13,R5
    00001330 52F4                   MOV.L       @(16,R15),R2
    00001332 2F26                   MOV.L       R2,@-R15
    00001334 57F2                   MOV.L       @(8,R15),R7
    00001336 66F3                   MOV         R15,R6
    00001338 7618                   ADD         #24,R6
    0000133A B636                   BSR         _CalcLines
    0000133C 64C3                   MOV         R12,R4
    0000133E 7F08                   ADD         #8,R15
    00001340              L4152:                            
          EDIT.c   876              }
          EDIT.c   877              MoveCursor(CURSORFIND,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00001340 52F3                   MOV.L       @(12,R15),R2
    00001342 E501                   MOV         #1,R5
    00001344 2F26                   MOV.L       R2,@-R15
    00001346 2FC6                   MOV.L       R12,@-R15
    00001348 2FD6                   MOV.L       R13,@-R15
    0000134A 53F7                   MOV.L       @(28,R15),R3
    0000134C 2F36                   MOV.L       R3,@-R15
    0000134E 62F3                   MOV         R15,R2
    00001350 7224                   ADD         #36,R2
    00001352 2F26                   MOV.L       R2,@-R15
    00001354 63F3                   MOV         R15,R3
    00001356 7330                   ADD         #48,R3
    00001358 2F36                   MOV.L       R3,@-R15
    0000135A 62F3                   MOV         R15,R2
    0000135C 7218                   ADD         #24,R2
    0000135E 2F26                   MOV.L       R2,@-R15
    00001360 67F3                   MOV         R15,R7
    00001362 7720                   ADD         #32,R7
    00001364 66F3                   MOV         R15,R6
    00001366 7624                   ADD         #36,R6
    00001368 B3F0                   BSR         _MoveCursor
    0000136A E40C                   MOV         #12,R4
    0000136C 7F1C                   ADD         #28,R15
          EDIT.c   878              iColumn=iCx;
    0000136E 52F2                   MOV.L       @(8,R15),R2
    00001370 A07B                   BRA         L1596
    00001372 1F27                   MOV.L       R2,@(28,R15)
    00001374              L2643:                           ; case label 
          EDIT.c   879              iRefresh=1;
          EDIT.c   880              iSaved=0;
          EDIT.c   881              break;
          EDIT.c   882            
          EDIT.c   883            //Delete backwards
          EDIT.c   884            case KEY_CTRL_DEL: 
          EDIT.c   885              
          EDIT.c   886              //Do not delete in clip mode
          EDIT.c   887              if(iClipMode==1) break;
    00001374 50FA                   MOV.L       @(40,R15),R0
    00001376 8801                   CMP/EQ      #1,R0
    00001378 8B01                   BF          L5087
    0000137A A10D                   BRA         L4066




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000137C 0009                   NOP
    0000137E              L5087:                            
          EDIT.c   888              
          EDIT.c   889              //Check cursor at the beginning of the text
          EDIT.c   890              if(iLines[iTopLine+iCy-1]+iCx==0) break;
    0000137E 63F2                   MOV.L       @R15,R3
    00001380 50F1                   MOV.L       @(4,R15),R0
    00001382 303C                   ADD         R3,R0
    00001384 51F2                   MOV.L       @(8,R15),R1
    00001386 70FF                   ADD         #-1,R0
    00001388 4008                   SHLL2       R0
    0000138A 02DE                   MOV.L       @(R0,R13),R2
    0000138C 321C                   ADD         R1,R2
    0000138E 2228                   TST         R2,R2
    00001390 8B01                   BF          L5088
    00001392 A101                   BRA         L4066
    00001394 0009                   NOP
    00001396              L5088:                            
          EDIT.c   891              
          EDIT.c   892              //Move cursor backwards
          EDIT.c   893              MoveCursor(CURSORLEFT,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00001396 E501                   MOV         #1,R5
    00001398 53F3                   MOV.L       @(12,R15),R3
    0000139A 2F36                   MOV.L       R3,@-R15
    0000139C 2FC6                   MOV.L       R12,@-R15
    0000139E 2FD6                   MOV.L       R13,@-R15
    000013A0 53F7                   MOV.L       @(28,R15),R3
    000013A2 2F36                   MOV.L       R3,@-R15
    000013A4 62F3                   MOV         R15,R2
    000013A6 7224                   ADD         #36,R2
    000013A8 2F26                   MOV.L       R2,@-R15
    000013AA 63F3                   MOV         R15,R3
    000013AC 7330                   ADD         #48,R3
    000013AE 2F36                   MOV.L       R3,@-R15
    000013B0 62F3                   MOV         R15,R2
    000013B2 7218                   ADD         #24,R2
    000013B4 2F26                   MOV.L       R2,@-R15
    000013B6 67F3                   MOV         R15,R7
    000013B8 7720                   ADD         #32,R7
    000013BA 66F3                   MOV         R15,R6
    000013BC 7624                   ADD         #36,R6
    000013BE B3C5                   BSR         _MoveCursor
    000013C0 E406                   MOV         #6,R4
          EDIT.c   894              MoveCursor(CURSORMARK,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    000013C2 E501                   MOV         #1,R5
    000013C4 52FA                   MOV.L       @(40,R15),R2
    000013C6 2F26                   MOV.L       R2,@-R15
    000013C8 2FC6                   MOV.L       R12,@-R15
    000013CA 2FD6                   MOV.L       R13,@-R15
    000013CC 53FE                   MOV.L       @(56,R15),R3
    000013CE 2F36                   MOV.L       R3,@-R15
    000013D0 62F3                   MOV         R15,R2
    000013D2 7240                   ADD         #64,R2
    000013D4 2F26                   MOV.L       R2,@-R15
    000013D6 63F3                   MOV         R15,R3
    000013D8 734C                   ADD         #76,R3
    000013DA 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013DC 62F3                   MOV         R15,R2
    000013DE 7234                   ADD         #52,R2
    000013E0 2F26                   MOV.L       R2,@-R15
    000013E2 67F3                   MOV         R15,R7
    000013E4 773C                   ADD         #60,R7
    000013E6 66F3                   MOV         R15,R6
    000013E8 7640                   ADD         #64,R6
    000013EA B3AF                   BSR         _MoveCursor
    000013EC E40B                   MOV         #11,R4
    000013EE 7F38                   ADD         #56,R15
          EDIT.c   895              
          EDIT.c   896              //Delete character from text
          EDIT.c   897              iLen=strlen(sText);
    000013F0 D21F                   MOV.L       L5086,R2   ; _strlen
    000013F2 420B                   JSR         @R2
    000013F4 64C3                   MOV         R12,R4
    000013F6 6603                   MOV         R0,R6
          EDIT.c   898              iPtr=iLines[iTopLine+iCy-1]+iCx;
    000013F8 63F2                   MOV.L       @R15,R3
          EDIT.c   899              if(iPtr<iLen-1)
    000013FA 6163                   MOV         R6,R1
    000013FC 50F1                   MOV.L       @(4,R15),R0
    000013FE 71FF                   ADD         #-1,R1
    00001400 52F2                   MOV.L       @(8,R15),R2
    00001402 303C                   ADD         R3,R0
    00001404 70FF                   ADD         #-1,R0
    00001406 4008                   SHLL2       R0
    00001408 04DE                   MOV.L       @(R0,R13),R4
    0000140A 342C                   ADD         R2,R4
    0000140C 3413                   CMP/GE      R1,R4
    0000140E 8913                   BT          L4157
          EDIT.c   900              {
          EDIT.c   901                for(i=iPtr;i<iLen;i++) sText[i]=sText[i+1];
    00001410 6543                   MOV         R4,R5
    00001412 3563                   CMP/GE      R6,R5
    00001414 8D06                   BT/S        L4158
    00001416 34CC                   ADD         R12,R4
    00001418              L4159:                            
    00001418 8441                   MOV.B       @(1,R4),R0
    0000141A 7501                   ADD         #1,R5
    0000141C 2400                   MOV.B       R0,@R4
    0000141E 3563                   CMP/GE      R6,R5
    00001420 8FFA                   BF/S        L4159
    00001422 7401                   ADD         #1,R4
    00001424              L4158:                            
          EDIT.c   902                CalcLines(sText,iLines,&iLNum,iTopLine,iCntx,sConfig);
    00001424 2FA6                   MOV.L       R10,@-R15
    00001426 65D3                   MOV         R13,R5
    00001428 52F4                   MOV.L       @(16,R15),R2
    0000142A 2F26                   MOV.L       R2,@-R15
    0000142C 57F2                   MOV.L       @(8,R15),R7
    0000142E 66F3                   MOV         R15,R6
    00001430 7618                   ADD         #24,R6
    00001432 B5BA                   BSR         _CalcLines
    00001434 64C3                   MOV         R12,R4
    00001436 7F08                   ADD         #8,R15
    00001438              L4157:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   903              }
          EDIT.c   904              iColumn=iCx;
    00001438 52F2                   MOV.L       @(8,R15),R2
          EDIT.c   905              MoveCursor(CURSORFIND,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    0000143A E501                   MOV         #1,R5
    0000143C 1F27                   MOV.L       R2,@(28,R15)
    0000143E 53F3                   MOV.L       @(12,R15),R3
    00001440 2F36                   MOV.L       R3,@-R15
    00001442 2FC6                   MOV.L       R12,@-R15
    00001444 2FD6                   MOV.L       R13,@-R15
    00001446 53F7                   MOV.L       @(28,R15),R3
    00001448 2F36                   MOV.L       R3,@-R15
    0000144A 62F3                   MOV         R15,R2
    0000144C 7224                   ADD         #36,R2
    0000144E 2F26                   MOV.L       R2,@-R15
    00001450 63F3                   MOV         R15,R3
    00001452 7330                   ADD         #48,R3
    00001454 2F36                   MOV.L       R3,@-R15
    00001456 62F3                   MOV         R15,R2
    00001458 7218                   ADD         #24,R2
    0000145A 2F26                   MOV.L       R2,@-R15
    0000145C 67F3                   MOV         R15,R7
    0000145E 7720                   ADD         #32,R7
    00001460 66F3                   MOV         R15,R6
    00001462 7624                   ADD         #36,R6
    00001464 B372                   BSR         _MoveCursor
    00001466 E40C                   MOV         #12,R4
    00001468 7F1C                   ADD         #28,R15
    0000146A              L1596:
          EDIT.c   906              iRefresh=1;
    0000146A 1FB5                   MOV.L       R11,@(20,R15)
          EDIT.c   907              iSaved=0;
          EDIT.c   908              break;
    0000146C A094                   BRA         L4066
    0000146E 1FE9                   MOV.L       R14,@(36,R15)
    00001470              L5086:                            
    00001470 <00000000>             .DATA.L     _strlen
    00001474              L2644:                           ; default label 
          EDIT.c   909            
          EDIT.c   910            //Print rest of characters
          EDIT.c   911            default: 
          EDIT.c   912              
          EDIT.c   913              //Do not insert characters in clip mode
          EDIT.c   914              if(iClipMode==1) break;
    00001474 50FA                   MOV.L       @(40,R15),R0
    00001476 8801                   CMP/EQ      #1,R0
    00001478 8B01                   BF          L5089
    0000147A A08D                   BRA         L4066
    0000147C 0009                   NOP
    0000147E              L5089:                            
          EDIT.c   915              
          EDIT.c   916              //Translate key into character
          EDIT.c   917              cChr=Key2Char(iKey);
    0000147E D351                   MOV.L       L5090+4,R3 ; _Key2Char
    00001480 430B                   JSR         @R3
    00001482 54F6                   MOV.L       @(24,R15),R4
          EDIT.c   918              




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   919              //Use bound character when VARS key is used
          EDIT.c   920              if(iKey==KEY_CTRL_VARS || iKey==KEY_CTRL_PRGM){
    00001484 949C                   MOV.W       L5090,R4   ; H'7540
    00001486 61F3                   MOV         R15,R1
    00001488 7120                   ADD         #32,R1
    0000148A 2100                   MOV.B       R0,@R1
    0000148C 53F6                   MOV.L       @(24,R15),R3
    0000148E 3340                   CMP/EQ      R4,R3
    00001490 8903                   BT          L4162
    00001492 9196                   MOV.W       L5090+2,R1 ; H'754C
    00001494 52F6                   MOV.L       @(24,R15),R2
    00001496 3210                   CMP/EQ      R1,R2
    00001498 8B04                   BF          L4161
    0000149A              L4162:                            
          EDIT.c   921                cChr=BindCharHandle(sConfig);
    0000149A B131                   BSR         _BindCharHandle
    0000149C 64A3                   MOV         R10,R4
    0000149E 61F3                   MOV         R15,R1
    000014A0 7120                   ADD         #32,R1
    000014A2 2100                   MOV.B       R0,@R1
    000014A4              L4161:                            
          EDIT.c   922              }
          EDIT.c   923              
          EDIT.c   924              //Insert character into text
          EDIT.c   925              iLen=strlen(sText);
    000014A4 D348                   MOV.L       L5090+8,R3 ; _strlen
    000014A6 430B                   JSR         @R3
    000014A8 64C3                   MOV         R12,R4
    000014AA 1F06                   MOV.L       R0,@(24,R15)
          EDIT.c   926              if(cChr!=0 && iLen<_iTextSize)
    000014AC E020                   MOV         #32,R0
    000014AE 03FC                   MOV.B       @(R0,R15),R3
    000014B0 2338                   TST         R3,R3
    000014B2 8971                   BT          L4066
    000014B4 D345                   MOV.L       L5090+12,R3; __iTextSize
    000014B6 6132                   MOV.L       @R3,R1
    000014B8 52F6                   MOV.L       @(24,R15),R2
    000014BA 3213                   CMP/GE      R1,R2
    000014BC 896C                   BT          L4066
          EDIT.c   927              {
          EDIT.c   928                MoveCursor(CURSORMARK,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    000014BE E501                   MOV         #1,R5
    000014C0 53F3                   MOV.L       @(12,R15),R3
    000014C2 2F36                   MOV.L       R3,@-R15
    000014C4 2FC6                   MOV.L       R12,@-R15
    000014C6 2FD6                   MOV.L       R13,@-R15
    000014C8 53F7                   MOV.L       @(28,R15),R3
    000014CA 2F36                   MOV.L       R3,@-R15
    000014CC 62F3                   MOV         R15,R2
    000014CE 7224                   ADD         #36,R2
    000014D0 2F26                   MOV.L       R2,@-R15
    000014D2 63F3                   MOV         R15,R3
    000014D4 7330                   ADD         #48,R3
    000014D6 2F36                   MOV.L       R3,@-R15
    000014D8 62F3                   MOV         R15,R2
    000014DA 7218                   ADD         #24,R2
    000014DC 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014DE 67F3                   MOV         R15,R7
    000014E0 7720                   ADD         #32,R7
    000014E2 66F3                   MOV         R15,R6
    000014E4 7624                   ADD         #36,R6
    000014E6 B331                   BSR         _MoveCursor
    000014E8 E40B                   MOV         #11,R4
    000014EA 7F1C                   ADD         #28,R15
          EDIT.c   929                iPtr=iLines[iTopLine+iCy-1]+iCx;
    000014EC 63F2                   MOV.L       @R15,R3
    000014EE 50F1                   MOV.L       @(4,R15),R0
    000014F0 52F2                   MOV.L       @(8,R15),R2
    000014F2 303C                   ADD         R3,R0
          EDIT.c   930                for(i=iLen+1;i>iPtr;i--) sText[i]=sText[i-1];
    000014F4 54F6                   MOV.L       @(24,R15),R4
    000014F6 70FF                   ADD         #-1,R0
    000014F8 4008                   SHLL2       R0
    000014FA 7401                   ADD         #1,R4
    000014FC 06DE                   MOV.L       @(R0,R13),R6
    000014FE 6543                   MOV         R4,R5
    00001500 362C                   ADD         R2,R6
    00001502 75FF                   ADD         #-1,R5
    00001504 35CC                   ADD         R12,R5
    00001506 6743                   MOV         R4,R7
    00001508 37CC                   ADD         R12,R7
    0000150A 3467                   CMP/GT      R6,R4
    0000150C 8F06                   BF/S        L4164
    0000150E 7701                   ADD         #1,R7
    00001510              L4165:                            
    00001510 6350                   MOV.B       @R5,R3
    00001512 74FF                   ADD         #-1,R4
    00001514 2734                   MOV.B       R3,@-R7
    00001516 3467                   CMP/GT      R6,R4
    00001518 8DFA                   BT/S        L4165
    0000151A 75FF                   ADD         #-1,R5
    0000151C              L4164:                            
          EDIT.c   931                sText[iPtr]=cChr;
    0000151C 6063                   MOV         R6,R0
    0000151E 63F3                   MOV         R15,R3
    00001520 7320                   ADD         #32,R3
          EDIT.c   932                CalcLines(sText,iLines,&iLNum,iTopLine,iCntx,sConfig);
    00001522 65D3                   MOV         R13,R5
    00001524 6330                   MOV.B       @R3,R3
    00001526 0C34                   MOV.B       R3,@(R0,R12)
    00001528 2FA6                   MOV.L       R10,@-R15
    0000152A 52F4                   MOV.L       @(16,R15),R2
    0000152C 2F26                   MOV.L       R2,@-R15
    0000152E 66F3                   MOV         R15,R6
    00001530 57F2                   MOV.L       @(8,R15),R7
    00001532 7618                   ADD         #24,R6
    00001534 B539                   BSR         _CalcLines
    00001536 64C3                   MOV         R12,R4
          EDIT.c   933                MoveCursor(CURSORFIND,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00001538 52F5                   MOV.L       @(20,R15),R2
    0000153A E501                   MOV         #1,R5
    0000153C 2F26                   MOV.L       R2,@-R15
    0000153E 2FC6                   MOV.L       R12,@-R15
    00001540 2FD6                   MOV.L       R13,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001542 53F9                   MOV.L       @(36,R15),R3
    00001544 2F36                   MOV.L       R3,@-R15
    00001546 62F3                   MOV         R15,R2
    00001548 722C                   ADD         #44,R2
    0000154A 2F26                   MOV.L       R2,@-R15
    0000154C 63F3                   MOV         R15,R3
    0000154E 7338                   ADD         #56,R3
    00001550 2F36                   MOV.L       R3,@-R15
    00001552 62F3                   MOV         R15,R2
    00001554 7220                   ADD         #32,R2
    00001556 2F26                   MOV.L       R2,@-R15
    00001558 67F3                   MOV         R15,R7
    0000155A 7728                   ADD         #40,R7
    0000155C 66F3                   MOV         R15,R6
    0000155E 762C                   ADD         #44,R6
    00001560 B2F4                   BSR         _MoveCursor
    00001562 E40C                   MOV         #12,R4
          EDIT.c   934                MoveCursor(CURSORRIGHT,1,&iCx,&iCy,&iTopLine,&iColumn,&iRefresh,iLNum,iLines,sText,iCntx);
    00001564 52FC                   MOV.L       @(48,R15),R2
    00001566 E040                   MOV         #64,R0
    00001568 2F26                   MOV.L       R2,@-R15
    0000156A E501                   MOV         #1,R5
    0000156C 2FC6                   MOV.L       R12,@-R15
    0000156E 2FD6                   MOV.L       R13,@-R15
    00001570 03FE                   MOV.L       @(R0,R15),R3
    00001572 2F36                   MOV.L       R3,@-R15
    00001574 62F3                   MOV         R15,R2
    00001576 7248                   ADD         #72,R2
    00001578 2F26                   MOV.L       R2,@-R15
    0000157A 63F3                   MOV         R15,R3
    0000157C 7354                   ADD         #84,R3
    0000157E 2F36                   MOV.L       R3,@-R15
    00001580 62F3                   MOV         R15,R2
    00001582 723C                   ADD         #60,R2
    00001584 2F26                   MOV.L       R2,@-R15
    00001586 67F3                   MOV         R15,R7
    00001588 7744                   ADD         #68,R7
    0000158A 66F3                   MOV         R15,R6
    0000158C 7648                   ADD         #72,R6
    0000158E              L4911:                            
    0000158E B2DD                   BSR         _MoveCursor
    00001590 E405                   MOV         #5,R4
    00001592 7F40                   ADD         #64,R15
          EDIT.c   935                iSaved=0;
    00001594 1FE9                   MOV.L       R14,@(36,R15)
    00001596              L1585:
          EDIT.c   936                iRefresh=1;
    00001596 1FB5                   MOV.L       R11,@(20,R15)
          EDIT.c   937              }
          EDIT.c   938              break;
    00001598              L4066:                            
          EDIT.c   939          }     
          EDIT.c   940    
          EDIT.c   941          //Calculate clip ending
          EDIT.c   942          if(iClipMode==1)
    00001598 50FA                   MOV.L       @(40,R15),R0
    0000159A 8801                   CMP/EQ      #1,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000159C 8B0C                   BF          L4166
          EDIT.c   943          {
          EDIT.c   944            iEnd=iLines[iTopLine+iCy-1]+iCx;
    0000159E 63F2                   MOV.L       @R15,R3
    000015A0 50F1                   MOV.L       @(4,R15),R0
    000015A2 303C                   ADD         R3,R0
    000015A4 52F2                   MOV.L       @(8,R15),R2
    000015A6 70FF                   ADD         #-1,R0
    000015A8 4008                   SHLL2       R0
    000015AA 09DE                   MOV.L       @(R0,R13),R9
    000015AC 392C                   ADD         R2,R9
          EDIT.c   945            if(iEnd!=iAEnd) iRefresh=1;
    000015AE E068                   MOV         #104,R0
    000015B0 01FE                   MOV.L       @(R0,R15),R1
    000015B2 3910                   CMP/EQ      R1,R9
    000015B4 8900                   BT          L4166
    000015B6 1FB5                   MOV.L       R11,@(20,R15)
    000015B8              L4166:                            
          EDIT.c   946          }
          EDIT.c   947          
          EDIT.c   948          //Soft refresh (only text)
          EDIT.c   949          if(iRefresh==1)
    000015B8 50F5                   MOV.L       @(20,R15),R0
    000015BA 8801                   CMP/EQ      #1,R0
    000015BC A008                   BRA         L4914
    000015BE 0009                   NOP
    000015C0              L5090:                            
    000015C0 7540                   .DATA.W     H'7540
    000015C2 754C                   .DATA.W     H'754C
    000015C4 <00000000>             .DATA.L     _Key2Char
    000015C8 <00000000>             .DATA.L     _strlen
    000015CC <00000000>             .DATA.L     __iTextSize
    000015D0              L4914:                            
    000015D0 8B0B                   BF          L4168
          EDIT.c   950          {
          EDIT.c   951            DumpTextLines(sText,iLines,iLNum,iTopLine,iStart,iEnd,iCntx);
    000015D2 65D3                   MOV         R13,R5
    000015D4 52F3                   MOV.L       @(12,R15),R2
    000015D6 2F26                   MOV.L       R2,@-R15
    000015D8 2F96                   MOV.L       R9,@-R15
    000015DA 2F86                   MOV.L       R8,@-R15
    000015DC 57F3                   MOV.L       @(12,R15),R7
    000015DE 56F7                   MOV.L       @(28,R15),R6
    000015E0 B58C                   BSR         _DumpTextLines
    000015E2 64C3                   MOV         R12,R4
          EDIT.c   952            Bdisp_PutDisp_DD();
    000015E4 D23E                   MOV.L       L5091+4,R2 ; _Bdisp_PutDisp_DD
    000015E6 420B                   JSR         @R2
    000015E8 7F0C                   ADD         #12,R15
    000015EA              L4168:                            
          EDIT.c   953          }
          EDIT.c   954          
          EDIT.c   955          //Hard refresh (all)
          EDIT.c   956          if(iRefresh==2)
    000015EA 50F5                   MOV.L       @(20,R15),R0
    000015EC 8802                   CMP/EQ      #2,R0
    000015EE 8B20                   BF          L4169




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c   957          {
          EDIT.c   958            Bdisp_AllClr_DDVRAM();
    000015F0 D23C                   MOV.L       L5091+8,R2 ; _Bdisp_AllClr_DDVRAM
    000015F2 420B                   JSR         @R2
    000015F4 0009                   NOP
          EDIT.c   959            MenuSetBar(MENUBARMAIN);
    000015F6 D33C                   MOV.L       L5091+12,R3; _MenuSetBar
    000015F8 430B                   JSR         @R3
    000015FA E401                   MOV         #1,R4
          EDIT.c   960            PrintFileName(sRoot,sFile,iBinary,iSaved);
    000015FC 57F9                   MOV.L       @(36,R15),R7
    000015FE 56FE                   MOV.L       @(56,R15),R6
    00001600 55FB                   MOV.L       @(44,R15),R5
    00001602 B609                   BSR         _PrintFileName
    00001604 54FD                   MOV.L       @(52,R15),R4
          EDIT.c   961            PrintInfoBar(sFolder,iTopLine+iCy,iLNum,sConfig);
    00001606 67A3                   MOV         R10,R7
    00001608 56F4                   MOV.L       @(16,R15),R6
    0000160A 63F2                   MOV.L       @R15,R3
    0000160C 55F1                   MOV.L       @(4,R15),R5
    0000160E 353C                   ADD         R3,R5
    00001610 B6D5                   BSR         _PrintInfoBar
    00001612 54FC                   MOV.L       @(48,R15),R4
          EDIT.c   962            PrintKeyboardStatus();
    00001614 D335                   MOV.L       L5091+16,R3; _PrintKeyboardStatus
    00001616 430B                   JSR         @R3
    00001618 0009                   NOP
          EDIT.c   963            DumpTextLines(sText,iLines,iLNum,iTopLine,iStart,iEnd,iCntx);
    0000161A 65D3                   MOV         R13,R5
    0000161C 52F3                   MOV.L       @(12,R15),R2
    0000161E 2F26                   MOV.L       R2,@-R15
    00001620 2F96                   MOV.L       R9,@-R15
    00001622 2F86                   MOV.L       R8,@-R15
    00001624 57F3                   MOV.L       @(12,R15),R7
    00001626 56F7                   MOV.L       @(28,R15),R6
    00001628 B568                   BSR         _DumpTextLines
    0000162A 64C3                   MOV         R12,R4
          EDIT.c   964            Bdisp_PutDisp_DD();
    0000162C D22C                   MOV.L       L5091+4,R2 ; _Bdisp_PutDisp_DD
    0000162E 420B                   JSR         @R2
    00001630 7F0C                   ADD         #12,R15
    00001632              L4169:                            
          EDIT.c   965          }
          EDIT.c   966    
          EDIT.c   967          //Update cursor position
          EDIT.c   968          if(iACx!=iCx || iACy!=iCy || iRefresh!=0)
    00001632 E044                   MOV         #68,R0
    00001634 53F2                   MOV.L       @(8,R15),R3
    00001636 02FE                   MOV.L       @(R0,R15),R2
    00001638 3230                   CMP/EQ      R3,R2
    0000163A 8B07                   BF          L4171
    0000163C 52F1                   MOV.L       @(4,R15),R2
    0000163E E050                   MOV         #80,R0
    00001640 01FE                   MOV.L       @(R0,R15),R1
    00001642 3120                   CMP/EQ      R2,R1
    00001644 8B02                   BF          L4171
    00001646 51F5                   MOV.L       @(20,R15),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001648 2118                   TST         R1,R1
    0000164A 8921                   BT          L4170
    0000164C              L4171:                            
          EDIT.c   969          {
          EDIT.c   970            SetFontContext(iCntx);
    0000164C D328                   MOV.L       L5091+20,R3; _SetFontContext
    0000164E 430B                   JSR         @R3
    00001650 54F3                   MOV.L       @(12,R15),R4
          EDIT.c   971            if(iClipMode==0 || (iClipMode==1 && iACx==0) )
    00001652 52FA                   MOV.L       @(40,R15),R2
    00001654 2228                   TST         R2,R2
    00001656 8906                   BT          L4173
    00001658 50FA                   MOV.L       @(40,R15),R0
    0000165A 8801                   CMP/EQ      #1,R0
    0000165C 8B0B                   BF          L4172
    0000165E E044                   MOV         #68,R0
    00001660 02FE                   MOV.L       @(R0,R15),R2
    00001662 2228                   TST         R2,R2
    00001664 8B07                   BF          L4172
    00001666              L4173:                            
          EDIT.c   972              SetCursor(iACx,iACy,0,0);
    00001666 E700                   MOV         #0,R7
    00001668 D322                   MOV.L       L5091+24,R3; _SetCursor
    0000166A E050                   MOV         #80,R0
    0000166C 05FE                   MOV.L       @(R0,R15),R5
    0000166E 6673                   MOV         R7,R6
    00001670 E044                   MOV         #68,R0
    00001672 430B                   JSR         @R3
    00001674 04FE                   MOV.L       @(R0,R15),R4
    00001676              L4172:                            
          EDIT.c   973            SetCursor(iCx,iCy,1,iClipMode);
    00001676 E601                   MOV         #1,R6
    00001678 55F1                   MOV.L       @(4,R15),R5
    0000167A 57FA                   MOV.L       @(40,R15),R7
    0000167C D31D                   MOV.L       L5091+24,R3; _SetCursor
    0000167E 430B                   JSR         @R3
    00001680 54F2                   MOV.L       @(8,R15),R4
          EDIT.c   974            PrintInfoBar(sFolder,iTopLine+iCy,iLNum,sConfig);
    00001682 67A3                   MOV         R10,R7
    00001684 56F4                   MOV.L       @(16,R15),R6
    00001686 63F2                   MOV.L       @R15,R3
    00001688 55F1                   MOV.L       @(4,R15),R5
    0000168A 353C                   ADD         R3,R5
    0000168C B697                   BSR         _PrintInfoBar
    0000168E 54FC                   MOV.L       @(48,R15),R4
    00001690              L4170:                            
          EDIT.c   975          }
          EDIT.c   976          
          EDIT.c   977          //File name info
          EDIT.c   978          if(iASaved!=iSaved)
    00001690 53F9                   MOV.L       @(36,R15),R3
    00001692 E05C                   MOV         #92,R0
    00001694 02FE                   MOV.L       @(R0,R15),R2
    00001696 3230                   CMP/EQ      R3,R2
    00001698 890A                   BT          L4174
          EDIT.c   979          {
          EDIT.c   980            PrintFileName(sRoot,sFile,iBinary,iSaved);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000169A 6733                   MOV         R3,R7
    0000169C 56FE                   MOV.L       @(56,R15),R6
    0000169E 55FB                   MOV.L       @(44,R15),R5
    000016A0 B5BA                   BSR         _PrintFileName
    000016A2 54FD                   MOV.L       @(52,R15),R4
          EDIT.c   981            PrintInfoBar(sFolder,iStart+iCy,iLNum,sConfig);
    000016A4 56F4                   MOV.L       @(16,R15),R6
    000016A6 67A3                   MOV         R10,R7
    000016A8 55F1                   MOV.L       @(4,R15),R5
    000016AA 358C                   ADD         R8,R5
    000016AC B687                   BSR         _PrintInfoBar
    000016AE 54FC                   MOV.L       @(48,R15),R4
    000016B0              L4174:                            
          EDIT.c   982          }
          EDIT.c   983          
          EDIT.c   984          //Clear refresh flag
          EDIT.c   985          iRefresh=0;
    000016B0 1FE5                   MOV.L       R14,@(20,R15)
          EDIT.c   986          
          EDIT.c   987        }while(iExit==0);
    000016B2 E060                   MOV         #96,R0
    000016B4 03FE                   MOV.L       @(R0,R15),R3
    000016B6 2338                   TST         R3,R3
    000016B8 8B02                   BF          L5092
    000016BA D30F                   MOV.L       L5091+28,R3; L4063
    000016BC 432B                   JMP         @R3
    000016BE 0009                   NOP
    000016C0              L5092:                            
          EDIT.c   988        
          EDIT.c   989        //Restore keyboard status
          EDIT.c   990        KeyboardStatusHideRestore();
    000016C0 D30E                   MOV.L       L5091+32,R3; _KeyboardStatusHideRestore
    000016C2 430B                   JSR         @R3
    000016C4 0009                   NOP
          EDIT.c   991        
          EDIT.c   992    }
    000016C6              L4062:                            
    000016C6 9109                   MOV.W       L5091,R1   ; H'20A4
    000016C8 3F1C                   ADD         R1,R15
    000016CA 4F26                   LDS.L       @R15+,PR
    000016CC 68F6                   MOV.L       @R15+,R8
    000016CE 69F6                   MOV.L       @R15+,R9
    000016D0 6AF6                   MOV.L       @R15+,R10
    000016D2 6BF6                   MOV.L       @R15+,R11
    000016D4 6CF6                   MOV.L       @R15+,R12
    000016D6 6DF6                   MOV.L       @R15+,R13
    000016D8 000B                   RTS
    000016DA 6EF6                   MOV.L       @R15+,R14
    000016DC              L5091:                            
    000016DC 20A4                   .DATA.W     H'20A4
    000016DE 0000                   .DATA.W     0
    000016E0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000016E4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000016E8 <00000000>             .DATA.L     _MenuSetBar
    000016EC <00000000>             .DATA.L     _PrintKeyboardStatus
    000016F0 <00000000>             .DATA.L     _SetFontContext
    000016F4 <00000000>             .DATA.L     _SetCursor




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000016F8 <00000000>             .DATA.L     L4063
    000016FC <00000000>             .DATA.L     _KeyboardStatusHideRestore
          EDIT.c   993    
          EDIT.c   994    // ----------------------------------------------------------------
          EDIT.c   995    // Bound character handling
          EDIT.c   996    char BindCharHandle(struct Config *sConfig)
    00001700              _BindCharHandle:                 ; function: BindCharHandle
                                                           ; frame size=76
    00001700 2FE6                   MOV.L       R14,@-R15
    00001702 EE00                   MOV         #0,R14
    00001704 2FD6                   MOV.L       R13,@-R15
    00001706 6D43                   MOV         R4,R13
    00001708 2FC6                   MOV.L       R12,@-R15
    0000170A 64D3                   MOV         R13,R4
    0000170C 2FB6                   MOV.L       R11,@-R15
    0000170E 2FA6                   MOV.L       R10,@-R15
    00001710 2F96                   MOV.L       R9,@-R15
    00001712 2F86                   MOV.L       R8,@-R15
    00001714 4F22                   STS.L       PR,@-R15
    00001716 7FE8                   ADD         #-24,R15
    00001718 9C61                   MOV.W       L5093,R12  ; H'00A0
          EDIT.c   997    {
          EDIT.c   998      //Constants
          EDIT.c   999      #define NEXTBUTTONCODE (int)255
          EDIT.c  1000      
          EDIT.c  1001      //Variables
          EDIT.c  1002      int i;
          EDIT.c  1003      int iExit;
          EDIT.c  1004      int iNode;
          EDIT.c  1005      int iFound;
          EDIT.c  1006      int iBindKey;
          EDIT.c  1007      int iBindStart;
          EDIT.c  1008      int iBindCount;
          EDIT.c  1009      int iBindChars;
          EDIT.c  1010      char cChr;
          EDIT.c  1011      char sText[5];
          EDIT.c  1012      
          EDIT.c  1013      //Count number of bound chars & exity if there is not any
          EDIT.c  1014      iBindChars=0;
    0000171A 2FE2                   MOV.L       R14,@R15
          EDIT.c  1015      for(i=0;i<MAXCHARMAP;i++){
    0000171C A007                   BRA         L4175
    0000171E 7460                   ADD         #96,R4
    00001720              L4176:                            
          EDIT.c  1016        if(sConfig->sCharMap[i].iKey!=-1){
    00001720 6042                   MOV.L       @R4,R0
    00001722 88FF                   CMP/EQ      #-1,R0
    00001724 8D03                   BT/S        L4177
    00001726 7408                   ADD         #8,R4
          EDIT.c  1017          iBindChars++;
    00001728 63F2                   MOV.L       @R15,R3
    0000172A 7301                   ADD         #1,R3
    0000172C 2F32                   MOV.L       R3,@R15
    0000172E              L4177:                            
    0000172E              L4175:                            
    0000172E 63D3                   MOV         R13,R3
    00001730 7360                   ADD         #96,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001732 33CC                   ADD         R12,R3
    00001734 3432                   CMP/HS      R3,R4
    00001736 8BF3                   BF          L4176
          EDIT.c  1018        }
          EDIT.c  1019      }
          EDIT.c  1020      if(iBindChars==0){
    00001738 63F2                   MOV.L       @R15,R3
    0000173A 2338                   TST         R3,R3
    0000173C 8B01                   BF          L4178
          EDIT.c  1021        return(0);
    0000173E A0D9                   BRA         L4179
    00001740 E000                   MOV         #0,R0
    00001742              L4178:                            
          EDIT.c  1022      }
          EDIT.c  1023        
          EDIT.c  1024      //Initializationd
          EDIT.c  1025      MenuStoreBar();
    00001742 D328                   MOV.L       L5093+6,R3 ; _MenuStoreBar
    00001744 430B                   JSR         @R3
    00001746 0009                   NOP
          EDIT.c  1026      iBindStart=0;
    00001748 1FE1                   MOV.L       R14,@(4,R15)
          EDIT.c  1027      
          EDIT.c  1028      //Loop start
          EDIT.c  1029      iExit=0;
    0000174A 1FE3                   MOV.L       R14,@(12,R15)
          EDIT.c  1030      do{
    0000174C              L4180:                            
          EDIT.c  1031      
          EDIT.c  1032        //Initialize menu bar
          EDIT.c  1033        for(i=0;i<=5;i++) MenuDisableNode(MENUBARBIND,i);
    0000174C A005                   BRA         L4181
    0000174E 6BE3                   MOV         R14,R11
    00001750              L4182:                            
    00001750 D925                   MOV.L       L5093+10,R9; _MenuDisableNode
    00001752 65B3                   MOV         R11,R5
    00001754 490B                   JSR         @R9
    00001756 E41F                   MOV         #31,R4
    00001758 7B01                   ADD         #1,R11
    0000175A              L4181:                            
    0000175A E205                   MOV         #5,R2
    0000175C 3B27                   CMP/GT      R2,R11
    0000175E 8BF7                   BF          L4182
          EDIT.c  1034        
          EDIT.c  1035        //Setup menu bar
          EDIT.c  1036        iNode=0;
          EDIT.c  1037        iBindCount=0;
    00001760 1FE2                   MOV.L       R14,@(8,R15)
    00001762 69D3                   MOV         R13,R9
    00001764 6BE3                   MOV         R14,R11
    00001766 68B3                   MOV         R11,R8
          EDIT.c  1038        for(i=0;i<MAXCHARMAP;i++){
    00001768 A04F                   BRA         L4183
    0000176A 7960                   ADD         #96,R9
    0000176C              L4184:                            
          EDIT.c  1039          if(sConfig->sCharMap[i].iKey!=-1){
    0000176C 6092                   MOV.L       @R9,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000176E 88FF                   CMP/EQ      #-1,R0
    00001770 8949                   BT          L4185
          EDIT.c  1040            if(iBindCount>=iBindStart){
    00001772 53F1                   MOV.L       @(4,R15),R3
    00001774 52F2                   MOV.L       @(8,R15),R2
    00001776 3233                   CMP/GE      R3,R2
    00001778 8B42                   BF          L4186
          EDIT.c  1041              if(iNode<5 || iBindChars<=6){
    0000177A E205                   MOV         #5,R2
    0000177C 3B23                   CMP/GE      R2,R11
    0000177E 8B03                   BF          L4188
    00001780 61F2                   MOV.L       @R15,R1
    00001782 E006                   MOV         #6,R0
    00001784 3107                   CMP/GT      R0,R1
    00001786 891C                   BT          L4187
    00001788              L4188:                            
          EDIT.c  1042                sprintf(sText,"  %c ",sConfig->sCharMap[i].cAscii);
    00001788 D318                   MOV.L       L5093+14,R3; L668
    0000178A 62D3                   MOV         R13,R2
    0000178C 7260                   ADD         #96,R2
    0000178E 328C                   ADD         R8,R2
    00001790 8424                   MOV.B       @(4,R2),R0
    00001792 2F06                   MOV.L       R0,@-R15
    00001794 2F36                   MOV.L       R3,@-R15
    00001796 64F3                   MOV         R15,R4
    00001798 D215                   MOV.L       L5093+18,R2; _sprintf
    0000179A 420B                   JSR         @R2
    0000179C 7418                   ADD         #24,R4
          EDIT.c  1043                MenuSetNode(MENUBARBIND,iNode,sText,(int)sConfig->sCharMap[i].cAscii,-1,0,NULL);
    0000179E E3FF                   MOV         #-1,R3
    000017A0 D214                   MOV.L       L5093+22,R2; _MenuSetNode
    000017A2 67D3                   MOV         R13,R7
    000017A4 2FE6                   MOV.L       R14,@-R15
    000017A6 65B3                   MOV         R11,R5
    000017A8 2FE6                   MOV.L       R14,@-R15
    000017AA 7760                   ADD         #96,R7
    000017AC 2F36                   MOV.L       R3,@-R15
    000017AE 378C                   ADD         R8,R7
    000017B0 8474                   MOV.B       @(4,R7),R0
    000017B2 66F3                   MOV         R15,R6
    000017B4 6703                   MOV         R0,R7
    000017B6 7624                   ADD         #36,R6
    000017B8 420B                   JSR         @R2
    000017BA E41F                   MOV         #31,R4
    000017BC 7F14                   ADD         #20,R15
          EDIT.c  1044                iNode++;
    000017BE A01F                   BRA         L4186
    000017C0 7B01                   ADD         #1,R11
    000017C2              L4187:                            
          EDIT.c  1045              }  
          EDIT.c  1046              else{
          EDIT.c  1047                MenuSetNode(MENUBARBIND,iNode,"    ",NEXTBUTTONCODE,-1,0,NextButton);
    000017C2 E2FF                   MOV         #-1,R2
    000017C4 970C                   MOV.W       L5093+2,R7 ; H'00FF
    000017C6 65B3                   MOV         R11,R5
    000017C8 D30A                   MOV.L       L5093+22,R3; _MenuSetNode
    000017CA D80B                   MOV.L       L5093+26,R8; _NextButton




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000017CC D90B                   MOV.L       L5093+30,R9; L670
    000017CE 2F86                   MOV.L       R8,@-R15
    000017D0 2FE6                   MOV.L       R14,@-R15
    000017D2 6693                   MOV         R9,R6
    000017D4 2F26                   MOV.L       R2,@-R15
    000017D6 430B                   JSR         @R3
    000017D8 E41F                   MOV         #31,R4
          EDIT.c  1048                break;
    000017DA A01B                   BRA         L4190
    000017DC 7F0C                   ADD         #12,R15
    000017DE              L5093:                            
    000017DE 00A0                   .DATA.W     H'00A0
    000017E0 00FF                   .DATA.W     H'00FF
    000017E2 0000                   .DATA.W     0
    000017E4 <00000000>             .DATA.L     _MenuStoreBar
    000017E8 <00000000>             .DATA.L     _MenuDisableNode
    000017EC <00000000>             .DATA.L     L668
    000017F0 <00000000>             .DATA.L     _sprintf
    000017F4 <00000000>             .DATA.L     _MenuSetNode
    000017F8 <00000000>             .DATA.L     _NextButton
    000017FC <00000000>             .DATA.L     L670
    00001800              L4186:                            
          EDIT.c  1049              }
          EDIT.c  1050            }  
          EDIT.c  1051            iBindCount++;
    00001800 53F2                   MOV.L       @(8,R15),R3
    00001802 7301                   ADD         #1,R3
    00001804 1F32                   MOV.L       R3,@(8,R15)
    00001806              L4185:                            
    00001806 7808                   ADD         #8,R8
    00001808 7908                   ADD         #8,R9
    0000180A              L4183:                            
    0000180A 63D3                   MOV         R13,R3
    0000180C 7360                   ADD         #96,R3
    0000180E 33CC                   ADD         R12,R3
    00001810 3932                   CMP/HS      R3,R9
    00001812 8BAB                   BF          L4184
    00001814              L4190:                            
          EDIT.c  1052          }
          EDIT.c  1053        }
          EDIT.c  1054        MenuSetBar(MENUBARBIND);    
    00001814 DB29                   MOV.L       L5094+20,R11; _MenuSetBar
    00001816 4B0B                   JSR         @R11
    00001818 E41F                   MOV         #31,R4
          EDIT.c  1055      
          EDIT.c  1056        //Get keystroke
          EDIT.c  1057        iBindKey=KeyNormalCase(GetKeyb());
    0000181A D929                   MOV.L       L5094+24,R9; _GetKeyb
    0000181C DB29                   MOV.L       L5094+28,R11; _KeyNormalCase
    0000181E 490B                   JSR         @R9
    00001820 0009                   NOP
    00001822 4B0B                   JSR         @R11
    00001824 6403                   MOV         R0,R4
    00001826 6903                   MOV         R0,R9
          EDIT.c  1058      
          EDIT.c  1059        //Decide on key
          EDIT.c  1060        switch(iBindKey){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001828 913E                   MOV.W       L5094,R1   ; H'7539
    0000182A 3010                   CMP/EQ      R1,R0
    0000182C 8D17                   BT/S        L2647
    0000182E EB01                   MOV         #1,R11
    00001830 913B                   MOV.W       L5094+2,R1 ; H'753A
    00001832 3010                   CMP/EQ      R1,R0
    00001834 8913                   BT          L2648
    00001836 9139                   MOV.W       L5094+4,R1 ; H'753B
    00001838 3010                   CMP/EQ      R1,R0
    0000183A 8910                   BT          L2649
    0000183C 9137                   MOV.W       L5094+6,R1 ; H'753C
    0000183E 3010                   CMP/EQ      R1,R0
    00001840 890D                   BT          L2650
    00001842 9135                   MOV.W       L5094+8,R1 ; H'753D
    00001844 3010                   CMP/EQ      R1,R0
    00001846 890A                   BT          L2651
    00001848 9133                   MOV.W       L5094+10,R1; H'753E
    0000184A 3010                   CMP/EQ      R1,R0
    0000184C 8907                   BT          L2652
    0000184E 9131                   MOV.W       L5094+12,R1; H'7532
    00001850 3010                   CMP/EQ      R1,R0
    00001852 8911                   BT          L2653
    00001854 912F                   MOV.W       L5094+14,R1; H'7540
    00001856 3010                   CMP/EQ      R1,R0
    00001858 8917                   BT          L2654
    0000185A A018                   BRA         L2655
    0000185C 0009                   NOP
    0000185E              L2647:                           ; case label 
          EDIT.c  1061        
          EDIT.c  1062          //Function keys
          EDIT.c  1063          case KEY_CTRL_F1:
          EDIT.c  1064          case KEY_CTRL_F2:
    0000185E              L2648:                           ; case label 
          EDIT.c  1065          case KEY_CTRL_F3:
    0000185E              L2649:                           ; case label 
          EDIT.c  1066          case KEY_CTRL_F4:
    0000185E              L2650:                           ; case label 
          EDIT.c  1067          case KEY_CTRL_F5:
    0000185E              L2651:                           ; case label 
          EDIT.c  1068          case KEY_CTRL_F6:
    0000185E              L2652:                           ; case label 
          EDIT.c  1069            iBindKey=MenuFunctionKey(iBindKey);
    0000185E D81A                   MOV.L       L5094+32,R8; _MenuFunctionKey
    00001860 480B                   JSR         @R8
    00001862 6493                   MOV         R9,R4
          EDIT.c  1070            if(iBindKey==NEXTBUTTONCODE){
    00001864 9328                   MOV.W       L5094+16,R3; H'00FF
    00001866 6403                   MOV         R0,R4
    00001868 3430                   CMP/EQ      R3,R4
    0000186A 8B03                   BF          L4192
          EDIT.c  1071              iBindStart+=5;
    0000186C 51F1                   MOV.L       @(4,R15),R1
    0000186E 7105                   ADD         #5,R1
    00001870 A037                   BRA         L4191
    00001872 1F11                   MOV.L       R1,@(4,R15)
    00001874              L4192:                            
    00001874 A034                   BRA         L1602




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1072            }
          EDIT.c  1073            else{
          EDIT.c  1074              cChr=(char)iBindKey;  
    00001876 6A43                   MOV         R4,R10
    00001878              L2653:                           ; case label 
          EDIT.c  1075              iExit=1;
          EDIT.c  1076            }
          EDIT.c  1077            break;
          EDIT.c  1078          
          EDIT.c  1079          //Exit key
          EDIT.c  1080          case KEY_CTRL_EXIT:
          EDIT.c  1081            if(iBindStart==0){
    00001878 52F1                   MOV.L       @(4,R15),R2
    0000187A 2228                   TST         R2,R2
    0000187C 8B01                   BF          L4194
    0000187E A02F                   BRA         L1602
          EDIT.c  1082              cChr=0;
    00001880 6AE3                   MOV         R14,R10
    00001882              L4194:                            
          EDIT.c  1083              iExit=1;
          EDIT.c  1084            }
          EDIT.c  1085            else{
          EDIT.c  1086              iBindStart-=5;
    00001882 52F1                   MOV.L       @(4,R15),R2
    00001884 72FB                   ADD         #-5,R2
          EDIT.c  1087            }
          EDIT.c  1088            break;
    00001886 A02C                   BRA         L4191
    00001888 1F21                   MOV.L       R2,@(4,R15)
    0000188A              L2654:                           ; case label 
    0000188A A029                   BRA         L1602
          EDIT.c  1089          
          EDIT.c  1090          //Vars key
          EDIT.c  1091          case KEY_CTRL_VARS:
          EDIT.c  1092            cChr=0;
    0000188C 6AE3                   MOV         R14,R10
    0000188E              L2655:                           ; default label 
          EDIT.c  1093            iExit=1;
          EDIT.c  1094            break;
          EDIT.c  1095          
          EDIT.c  1096          //Rest of cases
          EDIT.c  1097          default:  
          EDIT.c  1098            
          EDIT.c  1099            //Find character for bound key
          EDIT.c  1100            iFound=0;
    0000188E 66E3                   MOV         R14,R6
    00001890 67D3                   MOV         R13,R7
    00001892 7760                   ADD         #96,R7
    00001894 6573                   MOV         R7,R5
          EDIT.c  1101            for(i=0;i<MAXCHARMAP;i++){
    00001896 A01B                   BRA         L4196
    00001898 6473                   MOV         R7,R4
    0000189A              L4197:                            
          EDIT.c  1102              if(sConfig->sCharMap[i].iKey==iBindKey){
    0000189A 6342                   MOV.L       @R4,R3
    0000189C 3390                   CMP/EQ      R9,R3
    0000189E 8B15                   BF          L4198




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1103                iFound=1;
          EDIT.c  1104                cChr=sConfig->sCharMap[i].cAscii;
    000018A0 8454                   MOV.B       @(4,R5),R0
    000018A2 66B3                   MOV         R11,R6
          EDIT.c  1105                break;
    000018A4 A019                   BRA         L4199
    000018A6 6A03                   MOV         R0,R10
    000018A8              L5094:                            
    000018A8 7539                   .DATA.W     H'7539
    000018AA 753A                   .DATA.W     H'753A
    000018AC 753B                   .DATA.W     H'753B
    000018AE 753C                   .DATA.W     H'753C
    000018B0 753D                   .DATA.W     H'753D
    000018B2 753E                   .DATA.W     H'753E
    000018B4 7532                   .DATA.W     H'7532
    000018B6 7540                   .DATA.W     H'7540
    000018B8 00FF                   .DATA.W     H'00FF
    000018BA 0000                   .DATA.W     0
    000018BC <00000000>             .DATA.L     _MenuSetBar
    000018C0 <00000000>             .DATA.L     _GetKeyb
    000018C4 <00000000>             .DATA.L     _KeyNormalCase
    000018C8 <00000000>             .DATA.L     _MenuFunctionKey
    000018CC              L4198:                            
    000018CC 7508                   ADD         #8,R5
    000018CE 7408                   ADD         #8,R4
    000018D0              L4196:                            
    000018D0 62D3                   MOV         R13,R2
    000018D2 7260                   ADD         #96,R2
    000018D4 32CC                   ADD         R12,R2
    000018D6 3422                   CMP/HS      R2,R4
    000018D8 8BDF                   BF          L4197
    000018DA              L4199:                            
          EDIT.c  1106              }
          EDIT.c  1107            }
          EDIT.c  1108            if(iFound==0){
    000018DA 2668                   TST         R6,R6
    000018DC 8B00                   BF          L1602
          EDIT.c  1109              cChr=0;
    000018DE 6AE3                   MOV         R14,R10
    000018E0              L1602:
          EDIT.c  1110            }
          EDIT.c  1111            iExit=1;
    000018E0 1FB3                   MOV.L       R11,@(12,R15)
          EDIT.c  1112            break;
    000018E2              L4191:                            
          EDIT.c  1113        
          EDIT.c  1114        }
          EDIT.c  1115      
          EDIT.c  1116      }while(!iExit);    
    000018E2 52F3                   MOV.L       @(12,R15),R2
    000018E4 2228                   TST         R2,R2
    000018E6 8B01                   BF          L5095
    000018E8 AF30                   BRA         L4180
    000018EA 0009                   NOP
    000018EC              L5095:                            
          EDIT.c  1117      
          EDIT.c  1118      //Restore menu bar




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1119      MenuRestoreBar();    
    000018EC D371                   MOV.L       L5096,R3   ; _MenuRestoreBar
    000018EE 430B                   JSR         @R3
    000018F0 0009                   NOP
          EDIT.c  1120                 
          EDIT.c  1121      //Return char
          EDIT.c  1122      return(cChr);
    000018F2 60A3                   MOV         R10,R0
          EDIT.c  1123      
          EDIT.c  1124    }
    000018F4              L4179:                            
    000018F4 7F18                   ADD         #24,R15
    000018F6 4F26                   LDS.L       @R15+,PR
    000018F8 68F6                   MOV.L       @R15+,R8
    000018FA 69F6                   MOV.L       @R15+,R9
    000018FC 6AF6                   MOV.L       @R15+,R10
    000018FE 6BF6                   MOV.L       @R15+,R11
    00001900 6CF6                   MOV.L       @R15+,R12
    00001902 6DF6                   MOV.L       @R15+,R13
    00001904 000B                   RTS
    00001906 6EF6                   MOV.L       @R15+,R14
          EDIT.c  1125    
          EDIT.c  1126    // ----------------------------------------------------------------
          EDIT.c  1127    // About Popup
          EDIT.c  1128    void AboutPopup(void)
    00001908              _AboutPopup:                     ; function: AboutPopup
                                                           ; frame size=12
    00001908 4F22                   STS.L       PR,@-R15
          EDIT.c  1129    {
          EDIT.c  1130      PopupMessage(1," Text editor for ",
          EDIT.c  1131                     "  casio fx-9860G ",
          EDIT.c  1132                     "   series v1.6   ",
          EDIT.c  1133                     "Diego Marin, 2012", 
          EDIT.c  1134                     "dmarin75@yahoo.es");
    0000190A D36B                   MOV.L       L5096+4,R3 ; L684
    0000190C D26B                   MOV.L       L5096+8,R2 ; L683
    0000190E 2F36                   MOV.L       R3,@-R15
    00001910 2F26                   MOV.L       R2,@-R15
    00001912 D76B                   MOV.L       L5096+12,R7; L682
    00001914 D66B                   MOV.L       L5096+16,R6; L681
    00001916 D56C                   MOV.L       L5096+20,R5; L680
    00001918 D16C                   MOV.L       L5096+24,R1; _PopupMessage
    0000191A 410B                   JSR         @R1
    0000191C E401                   MOV         #1,R4
          EDIT.c  1135    }                 
    0000191E 7F08                   ADD         #8,R15
    00001920 4F26                   LDS.L       @R15+,PR
    00001922 000B                   RTS
    00001924 0009                   NOP
          EDIT.c  1136    
          EDIT.c  1137    // ----------------------------------------------------------------
          EDIT.c  1138    // Quit handler
          EDIT.c  1139    void QuitHandler(void)
    00001926              _QuitHandler:                    ; function: QuitHandler
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __slow_strcmp1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001926 2FE6                   MOV.L       R14,@-R15
    00001928 2FD6                   MOV.L       R13,@-R15
    0000192A 2FC6                   MOV.L       R12,@-R15
    0000192C 2FB6                   MOV.L       R11,@-R15
    0000192E 2FA6                   MOV.L       R10,@-R15
    00001930 2F96                   MOV.L       R9,@-R15
    00001932 2F86                   MOV.L       R8,@-R15
    00001934 4F22                   STS.L       PR,@-R15
          EDIT.c  1140    {
          EDIT.c  1141      //Variables
          EDIT.c  1142      int iAnswer;
          EDIT.c  1143      int iExit;
          EDIT.c  1144      
          EDIT.c  1145      //Menu bar
          EDIT.c  1146      MenuSetBar(MENUBARNULL);
    00001936 D366                   MOV.L       L5096+28,R3; _MenuSetBar
    00001938 430B                   JSR         @R3
    0000193A E400                   MOV         #0,R4
          EDIT.c  1147      
          EDIT.c  1148      //Save file before exit
          EDIT.c  1149      if(_iBinary==0 && _iSaved==0 && _sText[0]!=ENDMARK && _iAppMode==EDITOR)
    0000193C D365                   MOV.L       L5096+32,R3; __iBinary
    0000193E 6232                   MOV.L       @R3,R2
    00001940 2228                   TST         R2,R2
    00001942 8B65                   BF          L4201
    00001944 D164                   MOV.L       L5096+36,R1; __iSaved
    00001946 6212                   MOV.L       @R1,R2
    00001948 2228                   TST         R2,R2
    0000194A 8B61                   BF          L4201
    0000194C D263                   MOV.L       L5096+40,R2; __sText
    0000194E 6022                   MOV.L       @R2,R0
    00001950 6000                   MOV.B       @R0,R0
    00001952 880C                   CMP/EQ      #12,R0
    00001954 895C                   BT          L4201
    00001956 D362                   MOV.L       L5096+44,R3; __iAppMode
    00001958 6032                   MOV.L       @R3,R0
    0000195A 8801                   CMP/EQ      #1,R0
    0000195C 8B58                   BF          L4201
          EDIT.c  1150      {
          EDIT.c  1151        Bdisp_AllClr_DDVRAM();
    0000195E D161                   MOV.L       L5096+48,R1; _Bdisp_AllClr_DDVRAM
    00001960 410B                   JSR         @R1
    00001962 0009                   NOP
          EDIT.c  1152        iAnswer=PopupContinueYesNo("Save file","before leaving?",NULL);
    00001964 D560                   MOV.L       L5096+52,R5; L690
    00001966 D461                   MOV.L       L5096+56,R4; L689
    00001968 D361                   MOV.L       L5096+60,R3; _PopupContinueYesNo
    0000196A 430B                   JSR         @R3
    0000196C E600                   MOV         #0,R6
          EDIT.c  1153        if(iAnswer==1)
    0000196E 8801                   CMP/EQ      #1,R0
    00001970 8F4E                   BF/S        L4201
    00001972 6403                   MOV         R0,R4
    00001974 D85F                   MOV.L       L5096+64,R8; L620
    00001976 EB01                   MOV         #1,R11
    00001978 DC60                   MOV.L       L5096+72,R12; __sFile
          EDIT.c  1154        {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1155          iExit=0;
    0000197A E900                   MOV         #0,R9
    0000197C DA5E                   MOV.L       L5096+68,R10; __iNewFile
    0000197E DD60                   MOV.L       L5096+76,R13; __sFolder
    00001980 DE60                   MOV.L       L5096+80,R14; __sRoot
          EDIT.c  1156          do
    00001982              L4203:                            
          EDIT.c  1157          {
          EDIT.c  1158            iAnswer=1;
          EDIT.c  1159            if(_iNewFile==1)
    00001982 60A2                   MOV.L       @R10,R0
    00001984 8801                   CMP/EQ      #1,R0
    00001986 8B26                   BF          L4204
    00001988              L4206:                            
          EDIT.c  1160            {
          EDIT.c  1161              iAnswer=0;
          EDIT.c  1162              do
          EDIT.c  1163              {
          EDIT.c  1164                while(GetFolder(_sRoot,_sFolder,&_sConfig)==0);
    00001988 D65F                   MOV.L       L5096+84,R6; __sConfig
    0000198A 65D3                   MOV         R13,R5
    0000198C D35F                   MOV.L       L5096+88,R3; _GetFolder
    0000198E 430B                   JSR         @R3
    00001990 64E3                   MOV         R14,R4
    00001992 2008                   TST         R0,R0
    00001994 89F8                   BT          L4206
    00001996              L4208:                            
          EDIT.c  1165                while(GetFileName(_sFile,FMAXLEN(_sRoot))==0);
    00001996 6583                   MOV         R8,R5
    00001998 D25D                   MOV.L       L5096+92,R2; __slow_strcmp1
    0000199A 420B                   JSR         @R2
    0000199C 64E3                   MOV         R14,R4
    0000199E 2008                   TST         R0,R0
    000019A0 8F02                   BF/S        L4210
    000019A2 64C3                   MOV         R12,R4
    000019A4 A001                   BRA         L4211
    000019A6 E508                   MOV         #8,R5
    000019A8              L4210:                            
    000019A8 E50C                   MOV         #12,R5
    000019AA              L4211:                            
    000019AA D35A                   MOV.L       L5096+96,R3; _GetFileName
    000019AC 430B                   JSR         @R3
    000019AE 0009                   NOP
    000019B0 2008                   TST         R0,R0
    000019B2 89F0                   BT          L4208
          EDIT.c  1166                if(FileExist(_sRoot,_sFolder,_sFile)==1)
    000019B4 D358                   MOV.L       L5096+100,R3; _FileExist
    000019B6 66C3                   MOV         R12,R6
    000019B8 65D3                   MOV         R13,R5
    000019BA 430B                   JSR         @R3
    000019BC 64E3                   MOV         R14,R4
    000019BE 8801                   CMP/EQ      #1,R0
    000019C0 8B06                   BF          L4212
          EDIT.c  1167                  iAnswer=PopupContinueYesNo("File exists.","Overwrite?",NULL);
    000019C2 D556                   MOV.L       L5096+104,R5; L622
    000019C4 D456                   MOV.L       L5096+108,R4; L611
    000019C6 D34A                   MOV.L       L5096+60,R3; _PopupContinueYesNo




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000019C8 430B                   JSR         @R3
    000019CA E600                   MOV         #0,R6
    000019CC A001                   BRA         L4213
    000019CE 6403                   MOV         R0,R4
    000019D0              L4212:                            
          EDIT.c  1168                else
          EDIT.c  1169                  iAnswer=1;
    000019D0 64B3                   MOV         R11,R4
    000019D2              L4213:                            
          EDIT.c  1170              }while(iAnswer==0);
    000019D2 2448                   TST         R4,R4
    000019D4 89D8                   BT          L4206
    000019D6              L4204:                            
          EDIT.c  1171            }
          EDIT.c  1172            if(WriteFile(_sRoot,_sFolder,_sFile,_sText,_sConfig.iNLMode)!=1)
    000019D6 66C3                   MOV         R12,R6
    000019D8 D352                   MOV.L       L5096+112,R3; H'00000010+__sConfig
    000019DA 65D3                   MOV         R13,R5
    000019DC D13F                   MOV.L       L5096+40,R1; __sText
    000019DE 6232                   MOV.L       @R3,R2
    000019E0 2F26                   MOV.L       R2,@-R15
    000019E2 6712                   MOV.L       @R1,R7
    000019E4 D250                   MOV.L       L5096+116,R2; _WriteFile
    000019E6 420B                   JSR         @R2
    000019E8 64E3                   MOV         R14,R4
    000019EA 8801                   CMP/EQ      #1,R0
    000019EC 8D0D                   BT/S        L4214
    000019EE 7F04                   ADD         #4,R15
          EDIT.c  1173            {
          EDIT.c  1174              PopupMessage(1,"File write error.","Try again!",NULL,NULL,NULL);
    000019F0 D64E                   MOV.L       L5096+120,R6; L697
    000019F2 E200                   MOV         #0,R2
    000019F4 D54E                   MOV.L       L5096+124,R5; L696
    000019F6 6723                   MOV         R2,R7
    000019F8 D334                   MOV.L       L5096+24,R3; _PopupMessage
    000019FA 2F26                   MOV.L       R2,@-R15
    000019FC 2F26                   MOV.L       R2,@-R15
    000019FE 430B                   JSR         @R3
    00001A00 E401                   MOV         #1,R4
    00001A02 7F08                   ADD         #8,R15
          EDIT.c  1175              _iNewFile=1;
    00001A04 E201                   MOV         #1,R2
    00001A06 A001                   BRA         L4215
    00001A08 2A22                   MOV.L       R2,@R10
    00001A0A              L4214:                            
          EDIT.c  1176            }
          EDIT.c  1177            else
          EDIT.c  1178              iExit=1;
    00001A0A 69B3                   MOV         R11,R9
    00001A0C              L4215:                            
          EDIT.c  1179          }while(iExit==0);
    00001A0C 2998                   TST         R9,R9
    00001A0E 89B8                   BT          L4203
    00001A10              L4201:                            
          EDIT.c  1180        }
          EDIT.c  1181      }
          EDIT.c  1182    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1183      //Free memory buffers
          EDIT.c  1184      free((void *)_sText);
    00001A10 DE48                   MOV.L       L5096+128,R14; _free
    00001A12 D332                   MOV.L       L5096+40,R3; __sText
    00001A14 4E0B                   JSR         @R14
    00001A16 6432                   MOV.L       @R3,R4
          EDIT.c  1185      free((void *)_sClip);
    00001A18 D247                   MOV.L       L5096+132,R2; __sClip
    00001A1A 4E0B                   JSR         @R14
    00001A1C 6422                   MOV.L       @R2,R4
          EDIT.c  1186      free((struct Direc *)_sFiles);
    00001A1E D347                   MOV.L       L5096+136,R3; __sFiles
    00001A20 4E0B                   JSR         @R14
    00001A22 6432                   MOV.L       @R3,R4
          EDIT.c  1187      free((struct Direc *)_sFolders);
    00001A24 D246                   MOV.L       L5096+140,R2; __sFolders
    00001A26 4E0B                   JSR         @R14
    00001A28 6422                   MOV.L       @R2,R4
          EDIT.c  1188    }
    00001A2A 4F26                   LDS.L       @R15+,PR
    00001A2C 68F6                   MOV.L       @R15+,R8
    00001A2E 69F6                   MOV.L       @R15+,R9
    00001A30 6AF6                   MOV.L       @R15+,R10
    00001A32 6BF6                   MOV.L       @R15+,R11
    00001A34 6CF6                   MOV.L       @R15+,R12
    00001A36 6DF6                   MOV.L       @R15+,R13
    00001A38 000B                   RTS
    00001A3A 6EF6                   MOV.L       @R15+,R14
          EDIT.c  1189    
          EDIT.c  1190    // ----------------------------------------------------------------
          EDIT.c  1191    // Editor font
          EDIT.c  1192    void SetEditorFont(int iFont, int *iCntx)
    00001A3C              _SetEditorFont:                  ; function: SetEditorFont
                                                           ; frame size=12
    00001A3C 2FE6                   MOV.L       R14,@-R15
          EDIT.c  1193    {  
          EDIT.c  1194      //Set editor font
          EDIT.c  1195      switch(iFont)
    00001A3E 6043                   MOV         R4,R0
    00001A40 2FD6                   MOV.L       R13,@-R15
    00001A42 8800                   CMP/EQ      #0,R0
    00001A44 DE3F                   MOV.L       L5096+144,R14; _Bkey_Set_RepeatTime
    00001A46 4F22                   STS.L       PR,@-R15
    00001A48 8D08                   BT/S        L2665
    00001A4A 6D53                   MOV         R5,R13
    00001A4C 8801                   CMP/EQ      #1,R0
    00001A4E 890A                   BT          L2666
    00001A50 8802                   CMP/EQ      #2,R0
    00001A52 890D                   BT          L2667
    00001A54 8803                   CMP/EQ      #3,R0
    00001A56 8910                   BT          L2668
    00001A58 A014                   BRA         L4216
    00001A5A 0009                   NOP
    00001A5C              L2665:                           ; case label 
          EDIT.c  1196      {
          EDIT.c  1197        case FONTS: Bkey_Set_RepeatTime(6,3);
    00001A5C E503                   MOV         #3,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A5E 4E0B                   JSR         @R14
    00001A60 E406                   MOV         #6,R4
          EDIT.c  1198                    *iCntx=CONTXEDITS;
          EDIT.c  1199                    break;
    00001A62 A00E                   BRA         L4917
    00001A64 E301                   MOV         #1,R3
    00001A66              L2666:                           ; case label 
          EDIT.c  1200        case FONTT: Bkey_Set_RepeatTime(6,3);
    00001A66 E503                   MOV         #3,R5
    00001A68 4E0B                   JSR         @R14
    00001A6A E406                   MOV         #6,R4
          EDIT.c  1201                    *iCntx=CONTXEDITT;
          EDIT.c  1202                    break;
    00001A6C A009                   BRA         L4917
    00001A6E E302                   MOV         #2,R3
    00001A70              L2667:                           ; case label 
          EDIT.c  1203        case FONTM: Bkey_Set_RepeatTime(6,3);
    00001A70 E503                   MOV         #3,R5
    00001A72 4E0B                   JSR         @R14
    00001A74 E406                   MOV         #6,R4
          EDIT.c  1204                    *iCntx=CONTXEDITM;
          EDIT.c  1205                    break;
    00001A76 A004                   BRA         L4917
    00001A78 E303                   MOV         #3,R3
    00001A7A              L2668:                           ; case label 
          EDIT.c  1206        case FONTL: Bkey_Set_RepeatTime(6,1);
    00001A7A E501                   MOV         #1,R5
    00001A7C 4E0B                   JSR         @R14
    00001A7E E406                   MOV         #6,R4
          EDIT.c  1207                    *iCntx=CONTXEDITL;
    00001A80 E304                   MOV         #4,R3
          EDIT.c  1208                    break;
    00001A82              L4917:                            
    00001A82 2D32                   MOV.L       R3,@R13
    00001A84              L4216:                            
          EDIT.c  1209      }
          EDIT.c  1210    
          EDIT.c  1211    }
    00001A84 4F26                   LDS.L       @R15+,PR
    00001A86 6DF6                   MOV.L       @R15+,R13
    00001A88 000B                   RTS
    00001A8A 6EF6                   MOV.L       @R15+,R14
          EDIT.c  1212    
          EDIT.c  1213    // ----------------------------------------------------------------
          EDIT.c  1214    // Detect SD Card 
          EDIT.c  1215    int SDCardPresent(void)
    00001A8C              _SDCardPresent:                  ; function: SDCardPresent
                                                           ; frame size=8
    00001A8C 4F22                   STS.L       PR,@-R15
    00001A8E 7FFC                   ADD         #-4,R15
          EDIT.c  1216    {
          EDIT.c  1217      int iBytes;
          EDIT.c  1218      if(Bfile_GetMediaFree(DEVICE_SD_CARD,&iBytes)!=0)
    00001A90 D32D                   MOV.L       L5096+148,R3; _Bfile_GetMediaFree
    00001A92 65F3                   MOV         R15,R5
    00001A94 430B                   JSR         @R3
    00001A96 E402                   MOV         #2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A98 2008                   TST         R0,R0
    00001A9A 8B02                   BF          L1603
          EDIT.c  1219        return(0);
          EDIT.c  1220      else if(iBytes==0)
    00001A9C 63F2                   MOV.L       @R15,R3
    00001A9E 2338                   TST         R3,R3
    00001AA0 8B03                   BF          L4220
    00001AA2              L1603:
          EDIT.c  1221        return(0);
    00001AA2 7F04                   ADD         #4,R15
    00001AA4 4F26                   LDS.L       @R15+,PR
    00001AA6 000B                   RTS
    00001AA8 E000                   MOV         #0,R0
    00001AAA              L4220:                            
          EDIT.c  1222      else
          EDIT.c  1223        return(1);
    00001AAA E001                   MOV         #1,R0
          EDIT.c  1224    }    
    00001AAC              L4218:                            
    00001AAC 7F04                   ADD         #4,R15
    00001AAE 4F26                   LDS.L       @R15+,PR
    00001AB0 000B                   RTS
    00001AB2 0009                   NOP
    00001AB4              L5096:                            
    00001AB4 <00000000>             .DATA.L     _MenuRestoreBar
    00001AB8 <00000000>             .DATA.L     L684
    00001ABC <00000000>             .DATA.L     L683
    00001AC0 <00000000>             .DATA.L     L682
    00001AC4 <00000000>             .DATA.L     L681
    00001AC8 <00000000>             .DATA.L     L680
    00001ACC <00000000>             .DATA.L     _PopupMessage
    00001AD0 <00000000>             .DATA.L     _MenuSetBar
    00001AD4 <00000000>             .DATA.L     __iBinary
    00001AD8 <00000000>             .DATA.L     __iSaved
    00001ADC <00000000>             .DATA.L     __sText
    00001AE0 <00000000>             .DATA.L     __iAppMode
    00001AE4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001AE8 <00000000>             .DATA.L     L690
    00001AEC <00000000>             .DATA.L     L689
    00001AF0 <00000000>             .DATA.L     _PopupContinueYesNo
    00001AF4 <00000000>             .DATA.L     L620
    00001AF8 <00000000>             .DATA.L     __iNewFile
    00001AFC <00000000>             .DATA.L     __sFile
    00001B00 <00000000>             .DATA.L     __sFolder
    00001B04 <00000000>             .DATA.L     __sRoot
    00001B08 <00000000>             .DATA.L     __sConfig
    00001B0C <00000000>             .DATA.L     _GetFolder
    00001B10 <00000000>             .DATA.L     __slow_strcmp1
    00001B14 <00000000>             .DATA.L     _GetFileName
    00001B18 <00000000>             .DATA.L     _FileExist
    00001B1C <00000000>             .DATA.L     L622
    00001B20 <00000000>             .DATA.L     L611
    00001B24 <00000010>             .DATA.L     H'00000010+__sConfig
    00001B28 <00000000>             .DATA.L     _WriteFile
    00001B2C <00000000>             .DATA.L     L697
    00001B30 <00000000>             .DATA.L     L696
    00001B34 <00000000>             .DATA.L     _free




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B38 <00000000>             .DATA.L     __sClip
    00001B3C <00000000>             .DATA.L     __sFiles
    00001B40 <00000000>             .DATA.L     __sFolders
    00001B44 <00000000>             .DATA.L     _Bkey_Set_RepeatTime
    00001B48 <00000000>             .DATA.L     _Bfile_GetMediaFree
          EDIT.c  1225    
          EDIT.c  1226    // ----------------------------------------------------------------
          EDIT.c  1227    // Cursor movement
          EDIT.c  1228    void MoveCursor(int iCmd,int iTimes, int *iCx0, int *iCy0, 
    00001B4C              _MoveCursor:                     ; function: MoveCursor
                                                           ; frame size=72
    00001B4C 2FE6                   MOV.L       R14,@-R15
    00001B4E E050                   MOV         #80,R0
          EDIT.c  1229                    int *iTopLine0,int *iColumn0,int *iRefresh0, 
          EDIT.c  1230                    int iLNum, int *iLines,char *sText,int iCntx)
          EDIT.c  1231    {
          EDIT.c  1232      //Static variables
          EDIT.c  1233      static int iMark; //Saved pointer position
          EDIT.c  1234      
          EDIT.c  1235      //Variables
          EDIT.c  1236      int k;          //Times
          EDIT.c  1237      int i,j;        //Counters
          EDIT.c  1238      int iCx;        //Cursor position
          EDIT.c  1239      int iCy;        //Cursor position
          EDIT.c  1240      int iColumn;    //Column for cursor movements
          EDIT.c  1241      int iTopLine;   //Text top line
          EDIT.c  1242      int iRefresh;   //Refresh screen
          EDIT.c  1243      int iLen;       //Text length
          EDIT.c  1244      int iPtr;       //Pointer
          EDIT.c  1245    
          EDIT.c  1246      //Set font context
          EDIT.c  1247      SetFontContext(iCntx);
    00001B50 D31C                   MOV.L       L5097+2,R3 ; _SetFontContext
    00001B52 2FD6                   MOV.L       R13,@-R15
    00001B54 2FC6                   MOV.L       R12,@-R15
    00001B56 2FB6                   MOV.L       R11,@-R15
    00001B58 2FA6                   MOV.L       R10,@-R15
    00001B5A EA00                   MOV         #0,R10
    00001B5C 2F96                   MOV.L       R9,@-R15
    00001B5E 2F86                   MOV.L       R8,@-R15
    00001B60 4F22                   STS.L       PR,@-R15
    00001B62 7FDC                   ADD         #-36,R15
    00001B64 1F47                   MOV.L       R4,@(28,R15)
    00001B66 1F56                   MOV.L       R5,@(24,R15)
    00001B68 1F63                   MOV.L       R6,@(12,R15)
    00001B6A 1F74                   MOV.L       R7,@(16,R15)
    00001B6C 08FE                   MOV.L       @(R0,R15),R8
    00001B6E E05C                   MOV         #92,R0
    00001B70 430B                   JSR         @R3
    00001B72 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  1248      
          EDIT.c  1249      //Init variables
          EDIT.c  1250      iCx=*iCx0;
    00001B74 5CF3                   MOV.L       @(12,R15),R12
          EDIT.c  1251      iCy=*iCy0;
          EDIT.c  1252      iColumn=*iColumn0;
    00001B76 E048                   MOV         #72,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B78 5DF4                   MOV.L       @(16,R15),R13
    00001B7A 6CC2                   MOV.L       @R12,R12
    00001B7C 6DD2                   MOV.L       @R13,R13
    00001B7E 03FE                   MOV.L       @(R0,R15),R3
    00001B80 6232                   MOV.L       @R3,R2
          EDIT.c  1253      iTopLine=*iTopLine0;
    00001B82 E044                   MOV         #68,R0
    00001B84 2F22                   MOV.L       R2,@R15
    00001B86 0EFE                   MOV.L       @(R0,R15),R14
    00001B88 6EE2                   MOV.L       @R14,R14
          EDIT.c  1254      iRefresh=*iRefresh0;
    00001B8A E04C                   MOV         #76,R0
    00001B8C 03FE                   MOV.L       @(R0,R15),R3
    00001B8E 6232                   MOV.L       @R3,R2
    00001B90 1F28                   MOV.L       R2,@(32,R15)
    00001B92 6383                   MOV         R8,R3
          EDIT.c  1255      
          EDIT.c  1256      //Loop
          EDIT.c  1257      k=0;
    00001B94 1FA5                   MOV.L       R10,@(20,R15)
    00001B96 73FF                   ADD         #-1,R3
    00001B98 6B33                   MOV         R3,R11
    00001B9A 1FB2                   MOV.L       R11,@(8,R15)
          EDIT.c  1258      do
    00001B9C              L4222:                            
    00001B9C D90A                   MOV.L       L5097+6,R9 ; _GetScrCAy
    00001B9E EB01                   MOV         #1,R11
    00001BA0 60D3                   MOV         R13,R0
    00001BA2 30EC                   ADD         R14,R0
    00001BA4 70FF                   ADD         #-1,R0
    00001BA6 1F01                   MOV.L       R0,@(4,R15)
    00001BA8 50F7                   MOV.L       @(28,R15),R0
    00001BAA 70FF                   ADD         #-1,R0
    00001BAC E10C                   MOV         #12,R1
    00001BAE 3012                   CMP/HS      R1,R0
    00001BB0 8B01                   BF          L5098
    00001BB2 A1D9                   BRA         L4223
    00001BB4 0009                   NOP
    00001BB6              L5098:                            
    00001BB6 4000                   SHLL        R0
    00001BB8 6103                   MOV         R0,R1
    00001BBA C704                   MOVA        L5100,R0
    00001BBC 001D                   MOV.W       @(R0,R1),R0
    00001BBE 0023                   BRAF        R0
    00001BC0 0009                   NOP
    00001BC2              L5099:                            
    00001BC2              L5097:                            
    00001BC2 0000                   .DATA.W     0
    00001BC4 <00000000>             .DATA.L     _SetFontContext
    00001BC8 <00000000>             .DATA.L     _GetScrCAy
    00001BCC              L5100:
    00001BCC 0022                   .DATA.W     L2670-L5099
    00001BCE 002C                   .DATA.W     L2671-L5099
    00001BD0 00B0                   .DATA.W     L2673-L5099
    00001BD2 0078                   .DATA.W     L2672-L5099
    00001BD4 0134                   .DATA.W     L2676-L5099
    00001BD6 01BA                   .DATA.W     L2677-L5099




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001BD8 02DC                   .DATA.W     L2680-L5099
    00001BDA 0348                   .DATA.W     L2681-L5099
    00001BDC 0102                   .DATA.W     L2674-L5099
    00001BDE 0106                   .DATA.W     L2675-L5099
    00001BE0 0200                   .DATA.W     L2678-L5099
    00001BE2 0212                   .DATA.W     L2679-L5099
          EDIT.c  1259      {
          EDIT.c  1260      
          EDIT.c  1261        //Switch on command
          EDIT.c  1262        switch(iCmd)
          EDIT.c  1263        {
          EDIT.c  1264          //Go to top
          EDIT.c  1265          case CURSORTOP: 
    00001BE4              L2670:                           ; case label 
          EDIT.c  1266            iTopLine=0; iColumn=0; iCx=0; iCy=1;
    00001BE4 2FA2                   MOV.L       R10,@R15
    00001BE6 6EA3                   MOV         R10,R14
    00001BE8 6CE3                   MOV         R14,R12
    00001BEA A1A8                   BRA         L1615
    00001BEC 6DB3                   MOV         R11,R13
    00001BEE              L2671:                           ; case label 
          EDIT.c  1267            iRefresh=1;
          EDIT.c  1268            break;
          EDIT.c  1269                    
          EDIT.c  1270          //Go to bottom
          EDIT.c  1271          case CURSORBOTTOM: 
          EDIT.c  1272            if(iLNum>GetScrCAy()-2)
    00001BEE 490B                   JSR         @R9
    00001BF0 0009                   NOP
    00001BF2 70FE                   ADD         #-2,R0
    00001BF4 3807                   CMP/GT      R0,R8
    00001BF6 8B13                   BF          L4224
          EDIT.c  1273            {
          EDIT.c  1274              iTopLine=iLNum-(GetScrCAy()-2);
    00001BF8 490B                   JSR         @R9
    00001BFA 0009                   NOP
    00001BFC 6E83                   MOV         R8,R14
    00001BFE 3E08                   SUB         R0,R14
    00001C00 7E02                   ADD         #2,R14
          EDIT.c  1275              iLen=LineLength(iLNum-1,sText,iLines,iLNum);
    00001C02 6783                   MOV         R8,R7
    00001C04 E054                   MOV         #84,R0
    00001C06 06FE                   MOV.L       @(R0,R15),R6
    00001C08 E058                   MOV         #88,R0
    00001C0A 05FE                   MOV.L       @(R0,R15),R5
    00001C0C B257                   BSR         _LineLength
    00001C0E 54F2                   MOV.L       @(8,R15),R4
    00001C10 6403                   MOV         R0,R4
          EDIT.c  1276              iCx=iLen-1;
    00001C12 6C03                   MOV         R0,R12
    00001C14 7CFF                   ADD         #-1,R12
          EDIT.c  1277              iColumn=iCx;
          EDIT.c  1278              iCy=GetScrCAy()-2;
    00001C16 490B                   JSR         @R9
    00001C18 2FC2                   MOV.L       R12,@R15
    00001C1A 6D03                   MOV         R0,R13
    00001C1C A18F                   BRA         L1615




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C1E 7DFE                   ADD         #-2,R13
    00001C20              L4224:                            
          EDIT.c  1279              iRefresh=1;
          EDIT.c  1280            }
          EDIT.c  1281            else
          EDIT.c  1282            {
          EDIT.c  1283              iLen=LineLength(iLNum-1,sText,iLines,iLNum);
    00001C20 6783                   MOV         R8,R7
    00001C22 E054                   MOV         #84,R0
    00001C24 06FE                   MOV.L       @(R0,R15),R6
    00001C26 E058                   MOV         #88,R0
    00001C28 05FE                   MOV.L       @(R0,R15),R5
    00001C2A B248                   BSR         _LineLength
    00001C2C 54F2                   MOV.L       @(8,R15),R4
    00001C2E 6403                   MOV         R0,R4
          EDIT.c  1284              iCx=iLen-1;
    00001C30 6C03                   MOV         R0,R12
    00001C32 7CFF                   ADD         #-1,R12
          EDIT.c  1285              iColumn=iCx;
    00001C34 2FC2                   MOV.L       R12,@R15
    00001C36 A182                   BRA         L1615
          EDIT.c  1286              iCy=iLNum;
    00001C38 6D83                   MOV         R8,R13
    00001C3A              L2672:                           ; case label 
          EDIT.c  1287              iRefresh=1;
          EDIT.c  1288            }
          EDIT.c  1289            break;
          EDIT.c  1290                      
          EDIT.c  1291          //Page up
          EDIT.c  1292          case CURSORPAGEUP: 
          EDIT.c  1293            iTopLine=iTopLine-(GetScrCAy()-2);
    00001C3A 490B                   JSR         @R9
    00001C3C 0009                   NOP
    00001C3E 62E3                   MOV         R14,R2
    00001C40 3208                   SUB         R0,R2
    00001C42 6E23                   MOV         R2,R14
    00001C44 7E02                   ADD         #2,R14
          EDIT.c  1294            if(iTopLine<0)
    00001C46 4E11                   CMP/PZ      R14
    00001C48 8D01                   BT/S        L4226
          EDIT.c  1295              iTopLine=0;
          EDIT.c  1296            iLen=LineLength(iTopLine+iCy-1,sText,iLines,iLNum);
    00001C4A 6783                   MOV         R8,R7
    00001C4C 6EA3                   MOV         R10,R14
    00001C4E              L4226:                            
    00001C4E E054                   MOV         #84,R0
    00001C50 06FE                   MOV.L       @(R0,R15),R6
    00001C52 64D3                   MOV         R13,R4
    00001C54 E058                   MOV         #88,R0
    00001C56 34EC                   ADD         R14,R4
    00001C58 05FE                   MOV.L       @(R0,R15),R5
    00001C5A B230                   BSR         _LineLength
    00001C5C 74FF                   ADD         #-1,R4
    00001C5E 6403                   MOV         R0,R4
          EDIT.c  1297            if(iColumn>iLen-1) iCx=iLen-1; 
    00001C60 63F2                   MOV.L       @R15,R3
    00001C62 6203                   MOV         R0,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   89


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C64 72FF                   ADD         #-1,R2
    00001C66 3327                   CMP/GT      R2,R3
    00001C68 8B01                   BF          L5101
    00001C6A A164                   BRA         L4922
    00001C6C 0009                   NOP
    00001C6E              L5101:                            
    00001C6E A166                   BRA         L1615
          EDIT.c  1298            else iCx=iColumn;
    00001C70 6CF2                   MOV.L       @R15,R12
    00001C72              L2673:                           ; case label 
          EDIT.c  1299            iRefresh=1;
          EDIT.c  1300            break;
          EDIT.c  1301    
          EDIT.c  1302          //Page down
          EDIT.c  1303          case CURSORPAGEDOWN: 
          EDIT.c  1304            if(iLNum>GetScrCAy()-2)
    00001C72 490B                   JSR         @R9
    00001C74 0009                   NOP
    00001C76 70FE                   ADD         #-2,R0
    00001C78 3807                   CMP/GT      R0,R8
    00001C7A 8901                   BT          L5102
    00001C7C A174                   BRA         L4223
    00001C7E 0009                   NOP
    00001C80              L5102:                            
          EDIT.c  1305            {
          EDIT.c  1306              iTopLine=iTopLine+(GetScrCAy()-2);
    00001C80 490B                   JSR         @R9
    00001C82 0009                   NOP
    00001C84 30EC                   ADD         R14,R0
    00001C86 6E03                   MOV         R0,R14
          EDIT.c  1307              if(iTopLine+GetScrCAy()-2>iLNum)
    00001C88 490B                   JSR         @R9
    00001C8A 7EFE                   ADD         #-2,R14
    00001C8C 30EC                   ADD         R14,R0
    00001C8E 70FE                   ADD         #-2,R0
    00001C90 3087                   CMP/GT      R8,R0
    00001C92 8B04                   BF          L4230
          EDIT.c  1308              iTopLine=iLNum-(GetScrCAy()-2);
    00001C94 490B                   JSR         @R9
    00001C96 0009                   NOP
    00001C98 6E83                   MOV         R8,R14
    00001C9A 3E08                   SUB         R0,R14
    00001C9C 7E02                   ADD         #2,R14
    00001C9E              L4230:                            
          EDIT.c  1309              iLen=LineLength(iTopLine+iCy-1,sText,iLines,iLNum);
    00001C9E 6783                   MOV         R8,R7
    00001CA0 E054                   MOV         #84,R0
    00001CA2 64D3                   MOV         R13,R4
    00001CA4 06FE                   MOV.L       @(R0,R15),R6
    00001CA6 34EC                   ADD         R14,R4
    00001CA8 E058                   MOV         #88,R0
    00001CAA 05FE                   MOV.L       @(R0,R15),R5
    00001CAC B207                   BSR         _LineLength
    00001CAE 74FF                   ADD         #-1,R4
          EDIT.c  1310              if(iColumn>iLen-1) iCx=iLen-1;
    00001CB0 63F2                   MOV.L       @R15,R3
    00001CB2 6403                   MOV         R0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   90


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001CB4 6203                   MOV         R0,R2
    00001CB6 72FF                   ADD         #-1,R2
    00001CB8 3327                   CMP/GT      R2,R3
    00001CBA 8B01                   BF          L5103
    00001CBC A13B                   BRA         L4922
    00001CBE 0009                   NOP
    00001CC0              L5103:                            
    00001CC0 A13D                   BRA         L1615
          EDIT.c  1311              else iCx=iColumn;
    00001CC2 6CF2                   MOV.L       @R15,R12
    00001CC4              L2674:                           ; case label 
    00001CC4              L4921:                            
    00001CC4 A0E9                   BRA         L1609
          EDIT.c  1312              iRefresh=1;
          EDIT.c  1313            }
          EDIT.c  1314            break;
          EDIT.c  1315                  
          EDIT.c  1316          //Cursor home
          EDIT.c  1317          case CURSORHOME: 
          EDIT.c  1318            iCx=0; 
    00001CC6 6CA3                   MOV         R10,R12
    00001CC8              L2675:                           ; case label 
          EDIT.c  1319            iColumn=iCx;
          EDIT.c  1320            break;
          EDIT.c  1321                
          EDIT.c  1322          //Cursor end
          EDIT.c  1323          case CURSOREND: 
          EDIT.c  1324            if(iTopLine+iCy-1==iLNum-1)
    00001CC8 53F2                   MOV.L       @(8,R15),R3
    00001CCA 52F1                   MOV.L       @(4,R15),R2
    00001CCC 3230                   CMP/EQ      R3,R2
    00001CCE 8B08                   BF          L4233
          EDIT.c  1325              iCx=LineLength(iTopLine+iCy-1,sText,iLines,iLNum)-1;
    00001CD0 6783                   MOV         R8,R7
    00001CD2 E054                   MOV         #84,R0
    00001CD4 06FE                   MOV.L       @(R0,R15),R6
    00001CD6 E058                   MOV         #88,R0
    00001CD8 05FE                   MOV.L       @(R0,R15),R5
    00001CDA B1F0                   BSR         _LineLength
    00001CDC 54F1                   MOV.L       @(4,R15),R4
    00001CDE A008                   BRA         L4918
    00001CE0 6C03                   MOV         R0,R12
    00001CE2              L4233:                            
          EDIT.c  1326            else
          EDIT.c  1327              iCx=iLines[iTopLine+iCy-1+1]-iLines[iTopLine+iCy-1]-1; 
    00001CE2 E054                   MOV         #84,R0
    00001CE4 54F1                   MOV.L       @(4,R15),R4
    00001CE6 4408                   SHLL2       R4
    00001CE8 02FE                   MOV.L       @(R0,R15),R2
    00001CEA 342C                   ADD         R2,R4
    00001CEC 6142                   MOV.L       @R4,R1
    00001CEE 5C41                   MOV.L       @(4,R4),R12
    00001CF0 3C18                   SUB         R1,R12
    00001CF2              L4918:                            
    00001CF2 A0D2                   BRA         L1609
    00001CF4 7CFF                   ADD         #-1,R12
    00001CF6              L2676:                           ; case label 




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   91


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1328            iColumn=iCx;
          EDIT.c  1329            break;
          EDIT.c  1330                
          EDIT.c  1331          //Cursor x++
          EDIT.c  1332          case CURSORRIGHT: 
          EDIT.c  1333            iCx++;
    00001CF6 7C01                   ADD         #1,R12
          EDIT.c  1334            iPtr=iLines[iTopLine+iCy-1]+iCx;
    00001CF8 53F1                   MOV.L       @(4,R15),R3
    00001CFA E054                   MOV         #84,R0
          EDIT.c  1335            if(iPtr>=strlen(sText))
    00001CFC D23F                   MOV.L       L5104,R2   ; _strlen
    00001CFE 4308                   SHLL2       R3
    00001D00 00FE                   MOV.L       @(R0,R15),R0
    00001D02 033E                   MOV.L       @(R0,R3),R3
    00001D04 33CC                   ADD         R12,R3
    00001D06 E05C                   MOV         #92,R0
    00001D08 2F32                   MOV.L       R3,@R15
    00001D0A 2F36                   MOV.L       R3,@-R15
    00001D0C 420B                   JSR         @R2
    00001D0E 04FE                   MOV.L       @(R0,R15),R4
    00001D10 61F6                   MOV.L       @R15+,R1
    00001D12 3102                   CMP/HS      R0,R1
    00001D14 8B01                   BF          L4235
          EDIT.c  1336            {
          EDIT.c  1337              iCx--;
    00001D16 A0C0                   BRA         L1609
    00001D18 7CFF                   ADD         #-1,R12
    00001D1A              L4235:                            
          EDIT.c  1338            }
          EDIT.c  1339            else if(iCx>GetScrCAx()-1 || sText[iPtr-1]==NEWLINELF
          EDIT.c  1340            || iCx>=LineLength(iTopLine+iCy-1,sText,iLines,iLNum))
    00001D1A D339                   MOV.L       L5104+4,R3 ; _GetScrCAx
    00001D1C 430B                   JSR         @R3
    00001D1E 0009                   NOP
    00001D20 70FF                   ADD         #-1,R0
    00001D22 3C07                   CMP/GT      R0,R12
    00001D24 8911                   BT          L4238
    00001D26 61F3                   MOV         R15,R1
    00001D28 60F2                   MOV.L       @R15,R0
    00001D2A 7158                   ADD         #88,R1
    00001D2C 6312                   MOV.L       @R1,R3
    00001D2E 70FF                   ADD         #-1,R0
    00001D30 003C                   MOV.B       @(R0,R3),R0
    00001D32 880A                   CMP/EQ      #10,R0
    00001D34 8909                   BT          L4238
    00001D36 6783                   MOV         R8,R7
    00001D38 E054                   MOV         #84,R0
    00001D3A 6533                   MOV         R3,R5
    00001D3C 06FE                   MOV.L       @(R0,R15),R6
    00001D3E B1BE                   BSR         _LineLength
    00001D40 54F1                   MOV.L       @(4,R15),R4
    00001D42 3C03                   CMP/GE      R0,R12
    00001D44 8901                   BT          L5105
    00001D46 A0A8                   BRA         L1609
    00001D48 0009                   NOP
    00001D4A              L5105:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   92


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D4A              L4238:                            
          EDIT.c  1341            {
          EDIT.c  1342              iCx=0; 
    00001D4A 6CA3                   MOV         R10,R12
          EDIT.c  1343              iCy++;
          EDIT.c  1344              if(iCy>GetScrCAy()-2 || iTopLine+iCy-1>iLNum-1)
    00001D4C 490B                   JSR         @R9
    00001D4E 7D01                   ADD         #1,R13
    00001D50 70FE                   ADD         #-2,R0
    00001D52 3D07                   CMP/GT      R0,R13
    00001D54 8907                   BT          L4240
    00001D56 63D3                   MOV         R13,R3
    00001D58 52F2                   MOV.L       @(8,R15),R2
    00001D5A 33EC                   ADD         R14,R3
    00001D5C 73FF                   ADD         #-1,R3
    00001D5E 3327                   CMP/GT      R2,R3
    00001D60 8901                   BT          L5106
    00001D62 A09A                   BRA         L1609
    00001D64 0009                   NOP
    00001D66              L5106:                            
    00001D66              L4240:                            
          EDIT.c  1345              { 
          EDIT.c  1346                iCy--;
    00001D66 7DFF                   ADD         #-1,R13
          EDIT.c  1347                iTopLine++;
          EDIT.c  1348                if(iTopLine+GetScrCAy()-2>iLNum)
    00001D68 490B                   JSR         @R9
    00001D6A 7E01                   ADD         #1,R14
    00001D6C 30EC                   ADD         R14,R0
    00001D6E 70FE                   ADD         #-2,R0
    00001D70 3087                   CMP/GT      R8,R0
    00001D72 8B01                   BF          L4241
          EDIT.c  1349                  iTopLine--;
    00001D74 A091                   BRA         L1609
    00001D76 7EFF                   ADD         #-1,R14
    00001D78              L4241:                            
    00001D78 A08F                   BRA         L1609
          EDIT.c  1350                else
          EDIT.c  1351                  iRefresh=1;
    00001D7A 1FB8                   MOV.L       R11,@(32,R15)
    00001D7C              L2677:                           ; case label 
          EDIT.c  1352              }
          EDIT.c  1353            }
          EDIT.c  1354            iColumn=iCx;
          EDIT.c  1355            break;
          EDIT.c  1356                
          EDIT.c  1357          //Cursor x--
          EDIT.c  1358          case CURSORLEFT: 
          EDIT.c  1359            iCx--; 
    00001D7C 7CFF                   ADD         #-1,R12
          EDIT.c  1360            if(iCx<0)
    00001D7E 4C11                   CMP/PZ      R12
    00001D80 8B01                   BF          L5107
    00001D82 A08A                   BRA         L1609
    00001D84 0009                   NOP
    00001D86              L5107:                            
          EDIT.c  1361            {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   93


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1362              if(iCy==1 && iTopLine==0)
    00001D86 60D3                   MOV         R13,R0
    00001D88 8801                   CMP/EQ      #1,R0
    00001D8A 8B01                   BF          L4244
    00001D8C 2EE8                   TST         R14,R14
    00001D8E 8999                   BT          L4921
    00001D90              L4244:                            
          EDIT.c  1363                iCx=0;
          EDIT.c  1364              else
          EDIT.c  1365              {
          EDIT.c  1366                iCx=iLines[iTopLine+iCy-1]-iLines[iTopLine+iCy-2]-1;
    00001D90 64D3                   MOV         R13,R4
    00001D92 34EC                   ADD         R14,R4
    00001D94 6C43                   MOV         R4,R12
    00001D96 7CFF                   ADD         #-1,R12
    00001D98 4C08                   SHLL2       R12
    00001D9A E054                   MOV         #84,R0
    00001D9C 00FE                   MOV.L       @(R0,R15),R0
    00001D9E 6343                   MOV         R4,R3
    00001DA0 0CCE                   MOV.L       @(R0,R12),R12
          EDIT.c  1367                iCy--; 
    00001DA2 7DFF                   ADD         #-1,R13
    00001DA4 73FE                   ADD         #-2,R3
    00001DA6 4308                   SHLL2       R3
    00001DA8 023E                   MOV.L       @(R0,R3),R2
          EDIT.c  1368                if(iCy<1)
    00001DAA 3DB3                   CMP/GE      R11,R13
    00001DAC 3C28                   SUB         R2,R12
    00001DAE 8D74                   BT/S        L1609
    00001DB0 7CFF                   ADD         #-1,R12
          EDIT.c  1369                { 
          EDIT.c  1370                  iCy=1;
          EDIT.c  1371                  iTopLine--;
    00001DB2 7EFF                   ADD         #-1,R14
          EDIT.c  1372                  if(iTopLine<0)
    00001DB4 4E11                   CMP/PZ      R14
    00001DB6 8D02                   BT/S        L4247
    00001DB8 6DB3                   MOV         R11,R13
          EDIT.c  1373                    iTopLine=0;
    00001DBA A06E                   BRA         L1609
    00001DBC 6EA3                   MOV         R10,R14
    00001DBE              L4247:                            
    00001DBE A06C                   BRA         L1609
          EDIT.c  1374                  else
          EDIT.c  1375                    iRefresh=1;
    00001DC0 1FB8                   MOV.L       R11,@(32,R15)
    00001DC2              L2678:                           ; case label 
          EDIT.c  1376                }
          EDIT.c  1377              }
          EDIT.c  1378            }
          EDIT.c  1379            iColumn=iCx;
          EDIT.c  1380            break;
          EDIT.c  1381                
          EDIT.c  1382          //Cursor mark
          EDIT.c  1383          case CURSORMARK: 
          EDIT.c  1384            iMark=iLines[iTopLine+iCy-1]+iCx;
    00001DC2 E054                   MOV         #84,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   94


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001DC4 D20F                   MOV.L       L5104+8,R2 ; __$iMark$717
    00001DC6 53F1                   MOV.L       @(4,R15),R3
    00001DC8 00FE                   MOV.L       @(R0,R15),R0
    00001DCA 4308                   SHLL2       R3
    00001DCC 033E                   MOV.L       @(R0,R3),R3
    00001DCE 33CC                   ADD         R12,R3
          EDIT.c  1385            break;
    00001DD0 A0CA                   BRA         L4223
    00001DD2 2232                   MOV.L       R3,@R2
    00001DD4              L2679:                           ; case label 
          EDIT.c  1386          
          EDIT.c  1387          //Cursor find
          EDIT.c  1388          case CURSORFIND: 
          EDIT.c  1389            if(iMark>=strlen(sText)) iMark=strlen(sText)-1;
    00001DD4 D309                   MOV.L       L5104,R3   ; _strlen
    00001DD6 E058                   MOV         #88,R0
    00001DD8 430B                   JSR         @R3
    00001DDA 04FE                   MOV.L       @(R0,R15),R4
    00001DDC D309                   MOV.L       L5104+8,R3 ; __$iMark$717
    00001DDE 6232                   MOV.L       @R3,R2
    00001DE0 3202                   CMP/HS      R0,R2
    00001DE2 8B06                   BF          L4249
    00001DE4 D205                   MOV.L       L5104,R2   ; _strlen
    00001DE6 E058                   MOV         #88,R0
    00001DE8 420B                   JSR         @R2
    00001DEA 04FE                   MOV.L       @(R0,R15),R4
    00001DEC D305                   MOV.L       L5104+8,R3 ; __$iMark$717
    00001DEE 70FF                   ADD         #-1,R0
    00001DF0 2302                   MOV.L       R0,@R3
    00001DF2              L4249:                            
          EDIT.c  1390            for(i=-1;i<2;i++){
    00001DF2 E4FF                   MOV         #-1,R4
    00001DF4 A04D                   BRA         L4250
    00001DF6 1F41                   MOV.L       R4,@(4,R15)
    00001DF8              L4251:                            
          EDIT.c  1391            for(j=0;j<GetScrCAx();j++){
    00001DF8 A042                   BRA         L4252
    00001DFA 2FA2                   MOV.L       R10,@R15
    00001DFC              L5104:                            
    00001DFC <00000000>             .DATA.L     _strlen
    00001E00 <00000000>             .DATA.L     _GetScrCAx
    00001E04 <00000000>             .DATA.L     __$iMark$717
    00001E08              L4253:                            
          EDIT.c  1392              if(iLines[iTopLine+iCy-1+i]+j==iMark)
    00001E08 52F1                   MOV.L       @(4,R15),R2
    00001E0A E054                   MOV         #84,R0
    00001E0C 61F2                   MOV.L       @R15,R1
    00001E0E 32DC                   ADD         R13,R2
    00001E10 00FE                   MOV.L       @(R0,R15),R0
    00001E12 32EC                   ADD         R14,R2
    00001E14 72FF                   ADD         #-1,R2
    00001E16 4208                   SHLL2       R2
    00001E18 032E                   MOV.L       @(R0,R2),R3
    00001E1A 331C                   ADD         R1,R3
    00001E1C D078                   MOV.L       L5108+2,R0 ; __$iMark$717
    00001E1E 6202                   MOV.L       @R0,R2
    00001E20 3320                   CMP/EQ      R2,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   95


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E22 8B2A                   BF          L4254
          EDIT.c  1393              {
          EDIT.c  1394                if(i==-1)
    00001E24 50F1                   MOV.L       @(4,R15),R0
    00001E26 88FF                   CMP/EQ      #-1,R0
    00001E28 8B09                   BF          L4255
          EDIT.c  1395                {
          EDIT.c  1396                  iCx=j;
          EDIT.c  1397                  iCy--;
    00001E2A 7DFF                   ADD         #-1,R13
          EDIT.c  1398                  if(iCy<1)
    00001E2C 3DB3                   CMP/GE      R11,R13
    00001E2E 8D22                   BT/S        L4258
    00001E30 6C13                   MOV         R1,R12
          EDIT.c  1399                  {
          EDIT.c  1400                    iCy=1;
          EDIT.c  1401                    iTopLine--;
    00001E32 7EFF                   ADD         #-1,R14
          EDIT.c  1402                    if(iTopLine<0)
    00001E34 4E11                   CMP/PZ      R14
    00001E36 8D1E                   BT/S        L4258
    00001E38 6DB3                   MOV         R11,R13
          EDIT.c  1403                      iTopLine++;
    00001E3A A01C                   BRA         L4258
    00001E3C 7E01                   ADD         #1,R14
    00001E3E              L4255:                            
          EDIT.c  1404                  }
          EDIT.c  1405                }
          EDIT.c  1406                else if(i==0)
    00001E3E 53F1                   MOV.L       @(4,R15),R3
    00001E40 2338                   TST         R3,R3
    00001E42 8B01                   BF          L4259
          EDIT.c  1407                {
          EDIT.c  1408                  iCx=j;
    00001E44 A017                   BRA         L4258
    00001E46 6C13                   MOV         R1,R12
    00001E48              L4259:                            
          EDIT.c  1409                }
          EDIT.c  1410                else if(i==1)
    00001E48 50F1                   MOV.L       @(4,R15),R0
    00001E4A 8801                   CMP/EQ      #1,R0
    00001E4C 8B13                   BF          L4258
          EDIT.c  1411                {
          EDIT.c  1412                  iCx=j;
    00001E4E 6C13                   MOV         R1,R12
          EDIT.c  1413                  iCy++;
          EDIT.c  1414                  if(iCy>GetScrCAy()-2 || iTopLine+iCy-1>iLNum-1)
    00001E50 490B                   JSR         @R9
    00001E52 7D01                   ADD         #1,R13
    00001E54 70FE                   ADD         #-2,R0
    00001E56 3D07                   CMP/GT      R0,R13
    00001E58 8905                   BT          L4263
    00001E5A 63D3                   MOV         R13,R3
    00001E5C 52F2                   MOV.L       @(8,R15),R2
    00001E5E 33EC                   ADD         R14,R3
    00001E60 73FF                   ADD         #-1,R3
    00001E62 3327                   CMP/GT      R2,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   96


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E64 8B07                   BF          L4258
    00001E66              L4263:                            
          EDIT.c  1415                  { 
          EDIT.c  1416                    iCy--;
    00001E66 7DFF                   ADD         #-1,R13
          EDIT.c  1417                    iTopLine++;
          EDIT.c  1418                    if(iTopLine+GetScrCAy()-2>iLNum)
    00001E68 490B                   JSR         @R9
    00001E6A 7E01                   ADD         #1,R14
    00001E6C 30EC                   ADD         R14,R0
    00001E6E 70FE                   ADD         #-2,R0
    00001E70 3087                   CMP/GT      R8,R0
    00001E72 8B00                   BF          L4258
          EDIT.c  1419                      iTopLine--;
    00001E74 7EFF                   ADD         #-1,R14
    00001E76              L4258:                            
          EDIT.c  1420                  }
          EDIT.c  1421                }
          EDIT.c  1422                iRefresh=1;
          EDIT.c  1423                break;
    00001E76 A009                   BRA         L4265
    00001E78 1FB8                   MOV.L       R11,@(32,R15)
    00001E7A              L4254:                            
    00001E7A 62F2                   MOV.L       @R15,R2
    00001E7C 7201                   ADD         #1,R2
    00001E7E 2F22                   MOV.L       R2,@R15
    00001E80              L4252:                            
    00001E80 D360                   MOV.L       L5108+6,R3 ; _GetScrCAx
    00001E82 430B                   JSR         @R3
    00001E84 0009                   NOP
    00001E86 61F2                   MOV.L       @R15,R1
    00001E88 3103                   CMP/GE      R0,R1
    00001E8A 8BBD                   BF          L4253
    00001E8C              L4265:                            
    00001E8C 52F1                   MOV.L       @(4,R15),R2
    00001E8E 7201                   ADD         #1,R2
    00001E90 1F21                   MOV.L       R2,@(4,R15)
    00001E92              L4250:                            
    00001E92 E402                   MOV         #2,R4
    00001E94 53F1                   MOV.L       @(4,R15),R3
    00001E96 3343                   CMP/GE      R4,R3
    00001E98 8BAE                   BF          L4251
    00001E9A              L1609:
          EDIT.c  1424              }  
          EDIT.c  1425            }}
          EDIT.c  1426            iColumn=iCx;
          EDIT.c  1427            break;
    00001E9A A065                   BRA         L4223
    00001E9C 2FC2                   MOV.L       R12,@R15
    00001E9E              L2680:                           ; case label 
          EDIT.c  1428                
          EDIT.c  1429          //Cursor y++
          EDIT.c  1430          case CURSORDOWN:  
          EDIT.c  1431            iCy++; 
          EDIT.c  1432            if(iCy>GetScrCAy()-2  || iTopLine+iCy-1>iLNum-1)
    00001E9E 490B                   JSR         @R9
    00001EA0 7D01                   ADD         #1,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   97


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001EA2 70FE                   ADD         #-2,R0
    00001EA4 3D07                   CMP/GT      R0,R13
    00001EA6 8905                   BT          L4267
    00001EA8 52F2                   MOV.L       @(8,R15),R2
    00001EAA 63D3                   MOV         R13,R3
    00001EAC 33EC                   ADD         R14,R3
    00001EAE 73FF                   ADD         #-1,R3
    00001EB0 3327                   CMP/GT      R2,R3
    00001EB2 8B19                   BF          L4266
    00001EB4              L4267:                            
          EDIT.c  1433            { 
          EDIT.c  1434              iCy--;
    00001EB4 7DFF                   ADD         #-1,R13
          EDIT.c  1435              iTopLine++;
          EDIT.c  1436              if(iTopLine+GetScrCAy()-2>iLNum)
    00001EB6 490B                   JSR         @R9
    00001EB8 7E01                   ADD         #1,R14
    00001EBA 30EC                   ADD         R14,R0
    00001EBC 70FE                   ADD         #-2,R0
    00001EBE 3087                   CMP/GT      R8,R0
    00001EC0 8B01                   BF          L4268
          EDIT.c  1437                iTopLine--;
    00001EC2 A051                   BRA         L4223
    00001EC4 7EFF                   ADD         #-1,R14
    00001EC6              L4268:                            
          EDIT.c  1438              else
          EDIT.c  1439              {
          EDIT.c  1440                iLen=LineLength(iTopLine+iCy-1,sText,iLines,iLNum);
    00001EC6 6783                   MOV         R8,R7
    00001EC8 E054                   MOV         #84,R0
    00001ECA 64D3                   MOV         R13,R4
    00001ECC 06FE                   MOV.L       @(R0,R15),R6
    00001ECE 34EC                   ADD         R14,R4
    00001ED0 E058                   MOV         #88,R0
    00001ED2 05FE                   MOV.L       @(R0,R15),R5
    00001ED4 B0F3                   BSR         _LineLength
    00001ED6 74FF                   ADD         #-1,R4
          EDIT.c  1441                if(iColumn>iLen-1) iCx=iLen-1;
    00001ED8 63F2                   MOV.L       @R15,R3
    00001EDA 6403                   MOV         R0,R4
    00001EDC 6203                   MOV         R0,R2
    00001EDE 72FF                   ADD         #-1,R2
    00001EE0 3327                   CMP/GT      R2,R3
    00001EE2 8928                   BT          L4922
    00001EE4 A02B                   BRA         L1615
          EDIT.c  1442                else iCx=iColumn;
    00001EE6 6CF2                   MOV.L       @R15,R12
    00001EE8              L4266:                            
          EDIT.c  1443                iRefresh=1;
          EDIT.c  1444              }
          EDIT.c  1445            }
          EDIT.c  1446            else
          EDIT.c  1447            {
          EDIT.c  1448              iLen=LineLength(iTopLine+iCy-1,sText,iLines,iLNum);
    00001EE8 6783                   MOV         R8,R7
    00001EEA E054                   MOV         #84,R0
    00001EEC 06FE                   MOV.L       @(R0,R15),R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   98


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001EEE 64D3                   MOV         R13,R4
    00001EF0 E058                   MOV         #88,R0
    00001EF2 34EC                   ADD         R14,R4
    00001EF4 05FE                   MOV.L       @(R0,R15),R5
    00001EF6 B0E2                   BSR         _LineLength
    00001EF8 74FF                   ADD         #-1,R4
    00001EFA 6403                   MOV         R0,R4
          EDIT.c  1449              if(iColumn>iLen-1) iCx=iLen-1;
    00001EFC 63F2                   MOV.L       @R15,R3
    00001EFE 6203                   MOV         R0,R2
    00001F00 72FF                   ADD         #-1,R2
    00001F02 3327                   CMP/GT      R2,R3
    00001F04 892C                   BT          L1620
    00001F06 A02E                   BRA         L1621
    00001F08 0009                   NOP
    00001F0A              L2681:                           ; case label 
          EDIT.c  1450              else iCx=iColumn;
          EDIT.c  1451            }
          EDIT.c  1452            break;
          EDIT.c  1453                
          EDIT.c  1454          //Cursor y--
          EDIT.c  1455          case CURSORUP:    
          EDIT.c  1456            iCy--; 
    00001F0A 7DFF                   ADD         #-1,R13
          EDIT.c  1457            if(iCy<1)
    00001F0C 3DB3                   CMP/GE      R11,R13
    00001F0E 8918                   BT          L4275
          EDIT.c  1458            { 
          EDIT.c  1459              iCy=1;
          EDIT.c  1460              iTopLine--;
    00001F10 7EFF                   ADD         #-1,R14
          EDIT.c  1461              if(iTopLine<0)
    00001F12 4E11                   CMP/PZ      R14
    00001F14 8D02                   BT/S        L4276
    00001F16 6DB3                   MOV         R11,R13
          EDIT.c  1462                iTopLine=0;
    00001F18 A026                   BRA         L4223
    00001F1A 6EA3                   MOV         R10,R14
    00001F1C              L4276:                            
          EDIT.c  1463              else
          EDIT.c  1464              {
          EDIT.c  1465                iLen=LineLength(iTopLine+iCy-1,sText,iLines,iLNum);
    00001F1C 6783                   MOV         R8,R7
    00001F1E E054                   MOV         #84,R0
    00001F20 06FE                   MOV.L       @(R0,R15),R6
    00001F22 E058                   MOV         #88,R0
    00001F24 05FE                   MOV.L       @(R0,R15),R5
    00001F26 B0CA                   BSR         _LineLength
    00001F28 64E3                   MOV         R14,R4
    00001F2A 6403                   MOV         R0,R4
          EDIT.c  1466                if(iColumn>iLen-1) iCx=iLen-1; 
    00001F2C 63F2                   MOV.L       @R15,R3
    00001F2E 6203                   MOV         R0,R2
    00001F30 72FF                   ADD         #-1,R2
    00001F32 3327                   CMP/GT      R2,R3
    00001F34 8B02                   BF          L4278
    00001F36              L4922:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE   99


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001F36 6C43                   MOV         R4,R12
    00001F38 A001                   BRA         L1615
    00001F3A 7CFF                   ADD         #-1,R12
    00001F3C              L4278:                            
          EDIT.c  1467                else iCx=iColumn;
    00001F3C 6CF2                   MOV.L       @R15,R12
    00001F3E              L1615:
          EDIT.c  1468                iRefresh=1;
    00001F3E A013                   BRA         L4223
    00001F40 1FB8                   MOV.L       R11,@(32,R15)
    00001F42              L4275:                            
          EDIT.c  1469              }
          EDIT.c  1470            }
          EDIT.c  1471            else
          EDIT.c  1472            {
          EDIT.c  1473              iLen=LineLength(iTopLine+iCy-1,sText,iLines,iLNum);
    00001F42 6783                   MOV         R8,R7
    00001F44 E054                   MOV         #84,R0
    00001F46 64D3                   MOV         R13,R4
    00001F48 06FE                   MOV.L       @(R0,R15),R6
    00001F4A 34EC                   ADD         R14,R4
    00001F4C E058                   MOV         #88,R0
    00001F4E 05FE                   MOV.L       @(R0,R15),R5
    00001F50 B0B5                   BSR         _LineLength
    00001F52 74FF                   ADD         #-1,R4
          EDIT.c  1474              if(iColumn>iLen-1) iCx=iLen-1;
    00001F54 63F2                   MOV.L       @R15,R3
    00001F56 6403                   MOV         R0,R4
    00001F58 6203                   MOV         R0,R2
    00001F5A 72FF                   ADD         #-1,R2
    00001F5C 3327                   CMP/GT      R2,R3
    00001F5E 8B02                   BF          L1621
    00001F60              L1620:
    00001F60 6C43                   MOV         R4,R12
    00001F62 A001                   BRA         L4223
    00001F64 7CFF                   ADD         #-1,R12
    00001F66              L1621:
          EDIT.c  1475              else iCx=iColumn;
    00001F66 6CF2                   MOV.L       @R15,R12
          EDIT.c  1476            }
          EDIT.c  1477            break;
    00001F68              L4223:                            
          EDIT.c  1478          
          EDIT.c  1479        }
          EDIT.c  1480      
          EDIT.c  1481        //Increase counter
          EDIT.c  1482        k++;
    00001F68 52F5                   MOV.L       @(20,R15),R2
    00001F6A 7201                   ADD         #1,R2
    00001F6C 1F25                   MOV.L       R2,@(20,R15)
          EDIT.c  1483      
          EDIT.c  1484      }while(k<iTimes);
    00001F6E 53F6                   MOV.L       @(24,R15),R3
    00001F70 3233                   CMP/GE      R3,R2
    00001F72 8901                   BT          L5109
    00001F74 AE12                   BRA         L4222
    00001F76 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  100


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001F78              L5109:                            
          EDIT.c  1485      
          EDIT.c  1486      //Set result
          EDIT.c  1487      *iCx0=iCx;
    00001F78 52F3                   MOV.L       @(12,R15),R2
          EDIT.c  1488      *iCy0=iCy;
          EDIT.c  1489      *iColumn0=iColumn;
    00001F7A E048                   MOV         #72,R0
    00001F7C 22C2                   MOV.L       R12,@R2
    00001F7E 53F4                   MOV.L       @(16,R15),R3
    00001F80 23D2                   MOV.L       R13,@R3
    00001F82 03FE                   MOV.L       @(R0,R15),R3
    00001F84 62F2                   MOV.L       @R15,R2
          EDIT.c  1490      *iTopLine0=iTopLine;
    00001F86 E044                   MOV         #68,R0
    00001F88 2322                   MOV.L       R2,@R3
    00001F8A 03FE                   MOV.L       @(R0,R15),R3
    00001F8C 23E2                   MOV.L       R14,@R3
          EDIT.c  1491      *iRefresh0=iRefresh;
    00001F8E E04C                   MOV         #76,R0
    00001F90 52F8                   MOV.L       @(32,R15),R2
    00001F92 03FE                   MOV.L       @(R0,R15),R3
    00001F94 2322                   MOV.L       R2,@R3
          EDIT.c  1492    }
    00001F96 7F24                   ADD         #36,R15
    00001F98 4F26                   LDS.L       @R15+,PR
    00001F9A 68F6                   MOV.L       @R15+,R8
    00001F9C 69F6                   MOV.L       @R15+,R9
    00001F9E 6AF6                   MOV.L       @R15+,R10
    00001FA0 6BF6                   MOV.L       @R15+,R11
    00001FA2 6CF6                   MOV.L       @R15+,R12
    00001FA4 6DF6                   MOV.L       @R15+,R13
    00001FA6 000B                   RTS
    00001FA8 6EF6                   MOV.L       @R15+,R14
          EDIT.c  1493    
          EDIT.c  1494    // ----------------------------------------------------------------
          EDIT.c  1495    // Calculate text line positions
          EDIT.c  1496    void CalcLines(char *sText, int *iLines, int *iLNum, int iFrom,
    00001FAA              _CalcLines:                      ; function: CalcLines
                                                           ; frame size=48
    00001FAA 2FE6                   MOV.L       R14,@-R15
    00001FAC 2FD6                   MOV.L       R13,@-R15
    00001FAE 6E73                   MOV         R7,R14
          EDIT.c  1497                   int iCntx, struct Config *sConfig)
          EDIT.c  1498    {
          EDIT.c  1499      //Variables
          EDIT.c  1500      int i,j,k;
          EDIT.c  1501      int iLen;
          EDIT.c  1502      int iCount;
          EDIT.c  1503      int iStart;
          EDIT.c  1504      int iLPtr;
          EDIT.c  1505     
          EDIT.c  1506      //Set font context
          EDIT.c  1507      SetFontContext(iCntx);
    00001FB0 D315                   MOV.L       L5108+10,R3; _SetFontContext
    00001FB2 2FC6                   MOV.L       R12,@-R15
    00001FB4 2FB6                   MOV.L       R11,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  101


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001FB6 EB00                   MOV         #0,R11
    00001FB8 2FA6                   MOV.L       R10,@-R15
    00001FBA 2F96                   MOV.L       R9,@-R15
    00001FBC 2F86                   MOV.L       R8,@-R15
    00001FBE 4F22                   STS.L       PR,@-R15
    00001FC0 7FF0                   ADD         #-16,R15
    00001FC2 1F42                   MOV.L       R4,@(8,R15)
    00001FC4 2F52                   MOV.L       R5,@R15
    00001FC6 1F61                   MOV.L       R6,@(4,R15)
    00001FC8 430B                   JSR         @R3
    00001FCA 54FC                   MOV.L       @(48,R15),R4
          EDIT.c  1508     
          EDIT.c  1509      //Calculate text length
          EDIT.c  1510      iLen=strlen(sText);
    00001FCC D30F                   MOV.L       L5108+14,R3; _strlen
    00001FCE 430B                   JSR         @R3
    00001FD0 54F2                   MOV.L       @(8,R15),R4
          EDIT.c  1511     
          EDIT.c  1512      //Initialize array when text is empty
          EDIT.c  1513      if(iLen==0)
    00001FD2 2008                   TST         R0,R0
    00001FD4 8F06                   BF/S        L4283
    00001FD6 1F03                   MOV.L       R0,@(12,R15)
          EDIT.c  1514      {
          EDIT.c  1515        iLines[0]=0;
    00001FD8 62F2                   MOV.L       @R15,R2
    00001FDA 22B2                   MOV.L       R11,@R2
          EDIT.c  1516        *iLNum=1;
    00001FDC 53F1                   MOV.L       @(4,R15),R3
    00001FDE E201                   MOV         #1,R2
          EDIT.c  1517        return;
    00001FE0 A063                   BRA         L4284
    00001FE2 2322                   MOV.L       R2,@R3
    00001FE4              L4283:                            
          EDIT.c  1518      }
          EDIT.c  1519     
          EDIT.c  1520      //Calculate lines
          EDIT.c  1521      else
          EDIT.c  1522      {
          EDIT.c  1523       
          EDIT.c  1524        //Loop initializations
          EDIT.c  1525        if(iFrom==0) iStart=0;
    00001FE4 2EE8                   TST         R14,R14
    00001FE6 8B01                   BF          L4286
    00001FE8 A004                   BRA         L4287
    00001FEA 64B3                   MOV         R11,R4
    00001FEC              L4286:                            
          EDIT.c  1526        else iStart=iLines[iFrom];
    00001FEC 60F2                   MOV.L       @R15,R0
    00001FEE 64E3                   MOV         R14,R4
    00001FF0 4408                   SHLL2       R4
    00001FF2 044E                   MOV.L       @(R0,R4),R4
    00001FF4              L4287:                            
          EDIT.c  1527        iLPtr=iStart;
    00001FF4 6843                   MOV         R4,R8
          EDIT.c  1528        iCount=0;
    00001FF6 6CB3                   MOV         R11,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  102


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1529        j=iFrom;
    00001FF8 6AE3                   MOV         R14,R10
          EDIT.c  1530     
          EDIT.c  1531        //Calculate line positions
          EDIT.c  1532        for(i=iStart;i<iLen;i++)
    00001FFA A047                   BRA         L4288
    00001FFC 6E43                   MOV         R4,R14
    00001FFE              L5108:                            
    00001FFE 0000                   .DATA.W     0
    00002000 <00000000>             .DATA.L     __$iMark$717
    00002004 <00000000>             .DATA.L     _GetScrCAx
    00002008 <00000000>             .DATA.L     _SetFontContext
    0000200C <00000000>             .DATA.L     _strlen
    00002010              L4289:                            
    00002010 59F2                   MOV.L       @(8,R15),R9
    00002012 39EC                   ADD         R14,R9
    00002014 6090                   MOV.B       @R9,R0
    00002016 880A                   CMP/EQ      #10,R0
    00002018 892C                   BT          L1638
          EDIT.c  1533        {
          EDIT.c  1534          if(sText[i]==NEWLINELF)
          EDIT.c  1535          {
          EDIT.c  1536            iLines[j]=iLPtr;
          EDIT.c  1537            iLPtr=i+1;
          EDIT.c  1538            j++;
          EDIT.c  1539            iCount=0;
          EDIT.c  1540          }
          EDIT.c  1541          else
          EDIT.c  1542          {
          EDIT.c  1543            iCount++;
          EDIT.c  1544            if(iCount==GetScrCAx() && sConfig->iWordWrap==0)
    0000201A DD36                   MOV.L       L5110+2,R13; _GetScrCAx
    0000201C 4D0B                   JSR         @R13
    0000201E 7C01                   ADD         #1,R12
    00002020 3C00                   CMP/EQ      R0,R12
    00002022 8B03                   BF          L4292
    00002024 52FD                   MOV.L       @(52,R15),R2
    00002026 5325                   MOV.L       @(20,R2),R3
    00002028 2338                   TST         R3,R3
    0000202A 8923                   BT          L1638
    0000202C              L4292:                            
          EDIT.c  1545            {
          EDIT.c  1546              iLines[j]=iLPtr;
          EDIT.c  1547              iLPtr=i+1;
          EDIT.c  1548              j++;
          EDIT.c  1549              iCount=0;
          EDIT.c  1550            }
          EDIT.c  1551            else if(iCount==GetScrCAx() && sConfig->iWordWrap==1)
    0000202C 4D0B                   JSR         @R13
    0000202E 0009                   NOP
    00002030 3C00                   CMP/EQ      R0,R12
    00002032 8B27                   BF          L4291
    00002034 50FD                   MOV.L       @(52,R15),R0
    00002036 5005                   MOV.L       @(20,R0),R0
    00002038 8801                   CMP/EQ      #1,R0
    0000203A 8B23                   BF          L4291
          EDIT.c  1552            {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  103


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1553              if(sText[i]!=' ' && sText[i]!=9)
    0000203C 6090                   MOV.B       @R9,R0
    0000203E 8820                   CMP/EQ      #32,R0
    00002040 8D18                   BT/S        L1638
    00002042 6403                   MOV         R0,R4
    00002044 6043                   MOV         R4,R0
    00002046 8809                   CMP/EQ      #9,R0
    00002048 8914                   BT          L1638
          EDIT.c  1554              {
          EDIT.c  1555                for(k=0;k<GetScrCAx();k++) if(sText[i-k]==' ' || sText[i-k]==9) break;
    0000204A A009                   BRA         L4296
    0000204C 6CB3                   MOV         R11,R12
    0000204E              L4297:                            
    0000204E 50F2                   MOV.L       @(8,R15),R0
    00002050 009C                   MOV.B       @(R0,R9),R0
    00002052 8820                   CMP/EQ      #32,R0
    00002054 8D09                   BT/S        L4300
    00002056 6403                   MOV         R0,R4
    00002058 6043                   MOV         R4,R0
    0000205A 8809                   CMP/EQ      #9,R0
    0000205C 8905                   BT          L4300
    0000205E 7C01                   ADD         #1,R12
    00002060              L4296:                            
    00002060 69E3                   MOV         R14,R9
    00002062 4D0B                   JSR         @R13
    00002064 39C8                   SUB         R12,R9
    00002066 3C03                   CMP/GE      R0,R12
    00002068 8BF1                   BF          L4297
    0000206A              L4300:                            
          EDIT.c  1556                if(k<GetScrCAx())
    0000206A 4D0B                   JSR         @R13
    0000206C 0009                   NOP
    0000206E 3C03                   CMP/GE      R0,R12
    00002070 8900                   BT          L1638
          EDIT.c  1557                {
          EDIT.c  1558                  i=i-k;  
    00002072 6E93                   MOV         R9,R14
    00002074              L1638:
          EDIT.c  1559                }
          EDIT.c  1560              }
          EDIT.c  1561              iLines[j]=iLPtr;
    00002074 60F2                   MOV.L       @R15,R0
          EDIT.c  1562              iLPtr=i+1;
          EDIT.c  1563              j++;
          EDIT.c  1564              iCount=0;
    00002076 6CB3                   MOV         R11,R12
    00002078 62A3                   MOV         R10,R2
    0000207A 4208                   SHLL2       R2
    0000207C 0286                   MOV.L       R8,@(R0,R2)
    0000207E 7A01                   ADD         #1,R10
    00002080 68E3                   MOV         R14,R8
    00002082 7801                   ADD         #1,R8
    00002084              L4291:                            
          EDIT.c  1565            }
          EDIT.c  1566          }
          EDIT.c  1567          if(j>=MAXLINE-1) break;
    00002084 9435                   MOV.W       L5110,R4   ; H'07FF




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  104


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002086 3A43                   CMP/GE      R4,R10
    00002088 8903                   BT          L4303
    0000208A 7E01                   ADD         #1,R14
    0000208C              L4288:                            
    0000208C 53F3                   MOV.L       @(12,R15),R3
    0000208E 3E33                   CMP/GE      R3,R14
    00002090 8BBE                   BF          L4289
    00002092              L4303:                            
          EDIT.c  1568        }
          EDIT.c  1569       
          EDIT.c  1570        //Finish loop
          EDIT.c  1571        if(iCount==0)
    00002092 2CC8                   TST         R12,R12
    00002094 8B02                   BF          L4304
          EDIT.c  1572          *iLNum=j;
    00002096 52F1                   MOV.L       @(4,R15),R2
    00002098 A007                   BRA         L4284
    0000209A 22A2                   MOV.L       R10,@R2
    0000209C              L4304:                            
          EDIT.c  1573        else
          EDIT.c  1574        {
          EDIT.c  1575          iLines[j]=iLPtr;
    0000209C 60F2                   MOV.L       @R15,R0
    0000209E 62A3                   MOV         R10,R2
    000020A0 4208                   SHLL2       R2
          EDIT.c  1576          *iLNum=j+1;
    000020A2 7A01                   ADD         #1,R10
    000020A4 0286                   MOV.L       R8,@(R0,R2)
    000020A6 53F1                   MOV.L       @(4,R15),R3
    000020A8 23A2                   MOV.L       R10,@R3
          EDIT.c  1577        }
          EDIT.c  1578       
          EDIT.c  1579      }
          EDIT.c  1580    
          EDIT.c  1581    }
    000020AA              L4284:                            
    000020AA 7F10                   ADD         #16,R15
    000020AC 4F26                   LDS.L       @R15+,PR
    000020AE 68F6                   MOV.L       @R15+,R8
    000020B0 69F6                   MOV.L       @R15+,R9
    000020B2 6AF6                   MOV.L       @R15+,R10
    000020B4 6BF6                   MOV.L       @R15+,R11
    000020B6 6CF6                   MOV.L       @R15+,R12
    000020B8 6DF6                   MOV.L       @R15+,R13
    000020BA 000B                   RTS
    000020BC 6EF6                   MOV.L       @R15+,R14
          EDIT.c  1582    
          EDIT.c  1583    // ----------------------------------------------------------------
          EDIT.c  1584    // Text line length
          EDIT.c  1585    int LineLength(int iLine, char *sText, int *iLines, int iLNum)
    000020BE              _LineLength:                     ; function: LineLength
                                                           ; frame size=12
    000020BE 77FF                   ADD         #-1,R7
    000020C0 2FE6                   MOV.L       R14,@-R15
    000020C2 3470                   CMP/EQ      R7,R4
    000020C4 4F22                   STS.L       PR,@-R15
    000020C6 6E43                   MOV         R4,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  105


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000020C8 7FFC                   ADD         #-4,R15
    000020CA 4E08                   SHLL2       R14
    000020CC 2F52                   MOV.L       R5,@R15
    000020CE 8F09                   BF/S        L4306
    000020D0 3E6C                   ADD         R6,R14
          EDIT.c  1586    {
          EDIT.c  1587        if(iLine==iLNum-1)
          EDIT.c  1588        return(strlen(sText)-iLines[iLine]);
    000020D2 D309                   MOV.L       L5110+6,R3 ; _strlen
    000020D4 430B                   JSR         @R3
    000020D6 64F2                   MOV.L       @R15,R4
    000020D8 62E2                   MOV.L       @R14,R2
    000020DA 7F04                   ADD         #4,R15
    000020DC 4F26                   LDS.L       @R15+,PR
    000020DE 3028                   SUB         R2,R0
    000020E0 000B                   RTS
    000020E2 6EF6                   MOV.L       @R15+,R14
    000020E4              L4306:                            
          EDIT.c  1589      else
          EDIT.c  1590        return(iLines[iLine+1]-iLines[iLine]);
    000020E4 63E2                   MOV.L       @R14,R3
    000020E6 50E1                   MOV.L       @(4,R14),R0
    000020E8 3038                   SUB         R3,R0
          EDIT.c  1591    }
    000020EA              L4307:                            
    000020EA 7F04                   ADD         #4,R15
    000020EC 4F26                   LDS.L       @R15+,PR
    000020EE 000B                   RTS
    000020F0 6EF6                   MOV.L       @R15+,R14
    000020F2              L5110:                            
    000020F2 07FF                   .DATA.W     H'07FF
    000020F4 <00000000>             .DATA.L     _GetScrCAx
    000020F8 <00000000>             .DATA.L     _strlen
          EDIT.c  1592    
          EDIT.c  1593    // ----------------------------------------------------------------
          EDIT.c  1594    // Dump text lines
          EDIT.c  1595    void DumpTextLines(char *sText, int *iLines, int iLNum, 
    000020FC              _DumpTextLines:                  ; function: DumpTextLines
                                                           ; frame size=68
    000020FC 2FE6                   MOV.L       R14,@-R15
    000020FE E044                   MOV         #68,R0
          EDIT.c  1596                       int iTopLine,int iStart, int iEnd,int iCntx)
          EDIT.c  1597    {
          EDIT.c  1598       //Variables
          EDIT.c  1599       int i,j;
          EDIT.c  1600       int iLine;
          EDIT.c  1601       int iPtr;
          EDIT.c  1602       int iLen;
          EDIT.c  1603       char sStr[2];
          EDIT.c  1604       
          EDIT.c  1605       //Set font context
          EDIT.c  1606       SetFontContext(iCntx);
    00002100 D386                   MOV.L       L5111+6,R3 ; _SetFontContext
    00002102 2FD6                   MOV.L       R13,@-R15
    00002104 2FC6                   MOV.L       R12,@-R15
    00002106 2FB6                   MOV.L       R11,@-R15
    00002108 2FA6                   MOV.L       R10,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  106


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000210A EA00                   MOV         #0,R10
    0000210C 2F96                   MOV.L       R9,@-R15
    0000210E 2F86                   MOV.L       R8,@-R15
    00002110 4F22                   STS.L       PR,@-R15
    00002112 7FDC                   ADD         #-36,R15
    00002114 D880                   MOV.L       L5111+2,R8 ; _SetColorCntx
    00002116 1F42                   MOV.L       R4,@(8,R15)
    00002118 1F54                   MOV.L       R5,@(16,R15)
    0000211A 1F63                   MOV.L       R6,@(12,R15)
    0000211C 1F76                   MOV.L       R7,@(24,R15)
    0000211E 0CFE                   MOV.L       @(R0,R15),R12
    00002120 E048                   MOV         #72,R0
    00002122 0BFE                   MOV.L       @(R0,R15),R11
    00002124 E04C                   MOV         #76,R0
    00002126 430B                   JSR         @R3
    00002128 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  1607       
          EDIT.c  1608       //Print loop
          EDIT.c  1609       for(j=1;j<=GetScrCAy()-2;j++){
    0000212A E901                   MOV         #1,R9
    0000212C 62F3                   MOV         R15,R2
    0000212E 7220                   ADD         #32,R2
    00002130 1F21                   MOV.L       R2,@(4,R15)
    00002132 63F3                   MOV         R15,R3
    00002134 7321                   ADD         #33,R3
    00002136 2F32                   MOV.L       R3,@R15
    00002138 51F3                   MOV.L       @(12,R15),R1
    0000213A 71FF                   ADD         #-1,R1
    0000213C A05A                   BRA         L4309
    0000213E 1F17                   MOV.L       R1,@(28,R15)
    00002140              L4310:                            
          EDIT.c  1610         iLine=iTopLine+j-1;
    00002140 54F6                   MOV.L       @(24,R15),R4
    00002142 349C                   ADD         R9,R4
          EDIT.c  1611         iPtr=iLines[iLine];
    00002144 50F4                   MOV.L       @(16,R15),R0
    00002146 74FF                   ADD         #-1,R4
          EDIT.c  1612         if(iLine<=iLNum-1)
    00002148 53F7                   MOV.L       @(28,R15),R3
    0000214A 6E43                   MOV         R4,R14
    0000214C 4E08                   SHLL2       R14
    0000214E 3437                   CMP/GT      R3,R4
    00002150 0EEE                   MOV.L       @(R0,R14),R14
    00002152 893E                   BT          L4311
          EDIT.c  1613         {
          EDIT.c  1614           iLen=LineLength(iLine,sText,iLines,iLNum);
    00002154 57F3                   MOV.L       @(12,R15),R7
    00002156 56F4                   MOV.L       @(16,R15),R6
    00002158 BFB1                   BSR         _LineLength
    0000215A 55F2                   MOV.L       @(8,R15),R5
    0000215C 1F05                   MOV.L       R0,@(20,R15)
          EDIT.c  1615           for(i=0;i<GetScrCAx();i++){
    0000215E A031                   BRA         L4312
    00002160 6DA3                   MOV         R10,R13
    00002162              L4313:                            
          EDIT.c  1616             if(i>=iLen || sText[iPtr]==NEWLINELF)
    00002162 53F5                   MOV.L       @(20,R15),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  107


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002164 3D33                   CMP/GE      R3,R13
    00002166 8903                   BT          L4315
    00002168 50F2                   MOV.L       @(8,R15),R0
    0000216A 00EC                   MOV.B       @(R0,R14),R0
    0000216C 880A                   CMP/EQ      #10,R0
    0000216E 8B06                   BF          L4314
    00002170              L4315:                            
          EDIT.c  1617             {
          EDIT.c  1618               sStr[0]=' ';
    00002170 52F1                   MOV.L       @(4,R15),R2
    00002172 E420                   MOV         #32,R4
    00002174 2240                   MOV.B       R4,@R2
          EDIT.c  1619               sStr[1]=0;
    00002176 63F2                   MOV.L       @R15,R3
    00002178 23A0                   MOV.B       R10,@R3
    0000217A A006                   BRA         L4316
    0000217C 0009                   NOP
    0000217E              L4314:                            
          EDIT.c  1620             }
          EDIT.c  1621             else
          EDIT.c  1622             {
          EDIT.c  1623               sStr[0]=sText[iPtr];
    0000217E 53F1                   MOV.L       @(4,R15),R3
    00002180 50F2                   MOV.L       @(8,R15),R0
    00002182 02EC                   MOV.B       @(R0,R14),R2
    00002184 2320                   MOV.B       R2,@R3
          EDIT.c  1624               sStr[1]=0;
    00002186 63F2                   MOV.L       @R15,R3
    00002188 23A0                   MOV.B       R10,@R3
    0000218A              L4316:                            
          EDIT.c  1625             }
          EDIT.c  1626             SetColorCntx(COLNOR);
    0000218A 480B                   JSR         @R8
    0000218C E400                   MOV         #0,R4
          EDIT.c  1627             if(iStart!=iEnd && i<iLen)
    0000218E 3CB0                   CMP/EQ      R11,R12
    00002190 8910                   BT          L4317
    00002192 52F5                   MOV.L       @(20,R15),R2
    00002194 3D23                   CMP/GE      R2,R13
    00002196 890D                   BT          L4317
          EDIT.c  1628             {
          EDIT.c  1629               if(iStart<iEnd && iStart<=iPtr && iEnd>iPtr)
    00002198 3CB3                   CMP/GE      R11,R12
    0000219A 8903                   BT          L4318
    0000219C 3CE7                   CMP/GT      R14,R12
    0000219E 8901                   BT          L4318
    000021A0 3BE7                   CMP/GT      R14,R11
    000021A2 8905                   BT          L1640
    000021A4              L4318:                            
          EDIT.c  1630                 SetColorCntx(COLREV);
          EDIT.c  1631               else if(iStart>iEnd && iEnd<=iPtr && iStart>iPtr)
    000021A4 3CB7                   CMP/GT      R11,R12
    000021A6 8B05                   BF          L4317
    000021A8 3BE7                   CMP/GT      R14,R11
    000021AA 8903                   BT          L4317
    000021AC 3CE7                   CMP/GT      R14,R12
    000021AE 8B01                   BF          L4317




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  108


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000021B0              L1640:
          EDIT.c  1632                 SetColorCntx(COLREV);
    000021B0 480B                   JSR         @R8
    000021B2 E401                   MOV         #1,R4
    000021B4              L4317:                            
          EDIT.c  1633             }
          EDIT.c  1634             PrintStr(i,j,sStr);
    000021B4 D25A                   MOV.L       L5111+10,R2; _PrintStr
    000021B6 66F3                   MOV         R15,R6
    000021B8 7620                   ADD         #32,R6
    000021BA 6593                   MOV         R9,R5
    000021BC 420B                   JSR         @R2
    000021BE 64D3                   MOV         R13,R4
          EDIT.c  1635             iPtr++;
    000021C0 7E01                   ADD         #1,R14
    000021C2 7D01                   ADD         #1,R13
    000021C4              L4312:                            
    000021C4 D357                   MOV.L       L5111+14,R3; _GetScrCAx
    000021C6 430B                   JSR         @R3
    000021C8 0009                   NOP
    000021CA 3D03                   CMP/GE      R0,R13
    000021CC 8BC9                   BF          L4313
    000021CE A010                   BRA         L4321
    000021D0 0009                   NOP
    000021D2              L4311:                            
          EDIT.c  1636           }
          EDIT.c  1637         }
          EDIT.c  1638         else
          EDIT.c  1639         {
          EDIT.c  1640           SetColorCntx(COLNOR);
    000021D2 480B                   JSR         @R8
    000021D4 E400                   MOV         #0,R4
          EDIT.c  1641           for(i=0;i<GetScrCAx()+0;i++){
    000021D6 A007                   BRA         L4322
    000021D8 EE00                   MOV         #0,R14
    000021DA              L4323:                            
          EDIT.c  1642             PrintStr(i,j," ");
    000021DA 6593                   MOV         R9,R5
    000021DC D350                   MOV.L       L5111+10,R3; _PrintStr
    000021DE DD52                   MOV.L       L5111+18,R13; L804
    000021E0 66D3                   MOV         R13,R6
    000021E2 430B                   JSR         @R3
    000021E4 64E3                   MOV         R14,R4
    000021E6 7E01                   ADD         #1,R14
    000021E8              L4322:                            
    000021E8 D24E                   MOV.L       L5111+14,R2; _GetScrCAx
    000021EA 420B                   JSR         @R2
    000021EC 0009                   NOP
    000021EE 3E03                   CMP/GE      R0,R14
    000021F0 8BF3                   BF          L4323
    000021F2              L4321:                            
    000021F2 7901                   ADD         #1,R9
    000021F4              L4309:                            
    000021F4 DE4D                   MOV.L       L5111+22,R14; _GetScrCAy
    000021F6 4E0B                   JSR         @R14
    000021F8 0009                   NOP
    000021FA 70FE                   ADD         #-2,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  109


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000021FC 3907                   CMP/GT      R0,R9
    000021FE 8B9F                   BF          L4310
          EDIT.c  1643           }
          EDIT.c  1644         }
          EDIT.c  1645       }
          EDIT.c  1646        
          EDIT.c  1647       //Restore font color in context
          EDIT.c  1648       SetColorCntx(COLNOR);
    00002200 480B                   JSR         @R8
    00002202 E400                   MOV         #0,R4
          EDIT.c  1649    }
    00002204 7F24                   ADD         #36,R15
    00002206 4F26                   LDS.L       @R15+,PR
    00002208 68F6                   MOV.L       @R15+,R8
    0000220A 69F6                   MOV.L       @R15+,R9
    0000220C 6AF6                   MOV.L       @R15+,R10
    0000220E 6BF6                   MOV.L       @R15+,R11
    00002210 6CF6                   MOV.L       @R15+,R12
    00002212 6DF6                   MOV.L       @R15+,R13
    00002214 000B                   RTS
    00002216 6EF6                   MOV.L       @R15+,R14
          EDIT.c  1650    
          EDIT.c  1651    // ----------------------------------------------------------------
          EDIT.c  1652    // State bar
          EDIT.c  1653    void PrintFileName(char *sRoot,char *sFile,int iBinary, int iSaved)
    00002218              _PrintFileName:                  ; function: PrintFileName
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __slow_strcmp1
    00002218 2FE6                   MOV.L       R14,@-R15
    0000221A 2FD6                   MOV.L       R13,@-R15
    0000221C 2FC6                   MOV.L       R12,@-R15
    0000221E 2FB6                   MOV.L       R11,@-R15
    00002220 2FA6                   MOV.L       R10,@-R15
    00002222 6B43                   MOV         R4,R11
    00002224 2F96                   MOV.L       R9,@-R15
    00002226 4F22                   STS.L       PR,@-R15
          EDIT.c  1654    {
          EDIT.c  1655      //Font
          EDIT.c  1656      SetFont(FONTS);
    00002228 D941                   MOV.L       L5111+26,R9; _SetFont
    0000222A 7FF4                   ADD         #-12,R15
    0000222C 1F52                   MOV.L       R5,@(8,R15)
    0000222E 2F62                   MOV.L       R6,@R15
    00002230 1F71                   MOV.L       R7,@(4,R15)
    00002232 490B                   JSR         @R9
    00002234 E400                   MOV         #0,R4
          EDIT.c  1657      
          EDIT.c  1658      //Init first line
          EDIT.c  1659      SetColor(COLREV);
    00002236 DA3F                   MOV.L       L5111+30,R10; _SetColor
    00002238 4A0B                   JSR         @R10
    0000223A E401                   MOV         #1,R4
          EDIT.c  1660      SetOffset(0,0); PrintStr(0,0," ");
    0000223C DC3E                   MOV.L       L5111+34,R12; _SetOffset
    0000223E E500                   MOV         #0,R5
    00002240 4C0B                   JSR         @R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  110


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002242 6453                   MOV         R5,R4
    00002244 DD38                   MOV.L       L5111+18,R13; L804
    00002246 E500                   MOV         #0,R5
    00002248 DE35                   MOV.L       L5111+10,R14; _PrintStr
    0000224A 66D3                   MOV         R13,R6
    0000224C 4E0B                   JSR         @R14
    0000224E 6453                   MOV         R5,R4
          EDIT.c  1661      SetOffset(0,1); PrintStr(0,0," ");
    00002250 E501                   MOV         #1,R5
    00002252 4C0B                   JSR         @R12
    00002254 E400                   MOV         #0,R4
    00002256 66D3                   MOV         R13,R6
    00002258 E500                   MOV         #0,R5
    0000225A 4E0B                   JSR         @R14
    0000225C 6453                   MOV         R5,R4
          EDIT.c  1662      SetOffset(2,0); PrintStr(26,0," ");
    0000225E E500                   MOV         #0,R5
    00002260 4C0B                   JSR         @R12
    00002262 E402                   MOV         #2,R4
    00002264 66D3                   MOV         R13,R6
    00002266 E500                   MOV         #0,R5
    00002268 4E0B                   JSR         @R14
    0000226A E41A                   MOV         #26,R4
          EDIT.c  1663      SetOffset(2,1); PrintStr(26,0," ");
    0000226C E501                   MOV         #1,R5
    0000226E 4C0B                   JSR         @R12
    00002270 E402                   MOV         #2,R4
    00002272 66D3                   MOV         R13,R6
    00002274 E500                   MOV         #0,R5
    00002276 4E0B                   JSR         @R14
    00002278 E41A                   MOV         #26,R4
          EDIT.c  1664      SetOffset(1,0); PrintStr(0,0,"                           ");
    0000227A E500                   MOV         #0,R5
    0000227C 4C0B                   JSR         @R12
    0000227E E401                   MOV         #1,R4
    00002280 D62E                   MOV.L       L5111+38,R6; L810
    00002282 E500                   MOV         #0,R5
    00002284 4E0B                   JSR         @R14
    00002286 6453                   MOV         R5,R4
          EDIT.c  1665      SetOffset(1,1); PrintStr(0,0,"  :              ");
    00002288 E501                   MOV         #1,R5
    0000228A 4C0B                   JSR         @R12
    0000228C 6453                   MOV         R5,R4
    0000228E E500                   MOV         #0,R5
    00002290 D62B                   MOV.L       L5111+42,R6; L811
    00002292 4E0B                   JSR         @R14
    00002294 6453                   MOV         R5,R4
          EDIT.c  1666      
          EDIT.c  1667      //Storage mem / SD Card
          EDIT.c  1668      if(strcmp(sRoot,"main")==0) PrintStr(0,0,"MM");
    00002296 D52B                   MOV.L       L5111+46,R5; L620
    00002298 D32B                   MOV.L       L5111+50,R3; __slow_strcmp1
    0000229A 430B                   JSR         @R3
    0000229C 64B3                   MOV         R11,R4
    0000229E 2008                   TST         R0,R0
    000022A0 8B03                   BF          L4324
    000022A2 E500                   MOV         #0,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  111


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000022A4 D629                   MOV.L       L5111+54,R6; L812
    000022A6 4E0B                   JSR         @R14
    000022A8 6453                   MOV         R5,R4
    000022AA              L4324:                            
          EDIT.c  1669      if(strcmp(sRoot,"fls0")==0) PrintStr(0,0,"SM");
    000022AA D529                   MOV.L       L5111+58,R5; L813
    000022AC D326                   MOV.L       L5111+50,R3; __slow_strcmp1
    000022AE 430B                   JSR         @R3
    000022B0 64B3                   MOV         R11,R4
    000022B2 2008                   TST         R0,R0
    000022B4 8B03                   BF          L4325
    000022B6 E500                   MOV         #0,R5
    000022B8 D626                   MOV.L       L5111+62,R6; L814
    000022BA 4E0B                   JSR         @R14
    000022BC 6453                   MOV         R5,R4
    000022BE              L4325:                            
          EDIT.c  1670      if(strcmp(sRoot,"crd0")==0) PrintStr(0,0,"SD");
    000022BE D526                   MOV.L       L5111+66,R5; L815
    000022C0 D321                   MOV.L       L5111+50,R3; __slow_strcmp1
    000022C2 430B                   JSR         @R3
    000022C4 64B3                   MOV         R11,R4
    000022C6 2008                   TST         R0,R0
    000022C8 8B03                   BF          L4326
    000022CA E500                   MOV         #0,R5
    000022CC D623                   MOV.L       L5111+70,R6; L816
    000022CE 4E0B                   JSR         @R14
    000022D0 6453                   MOV         R5,R4
    000022D2              L4326:                            
          EDIT.c  1671      
          EDIT.c  1672      //File name
          EDIT.c  1673      PrintStr(3,0,sFile);
    000022D2 E500                   MOV         #0,R5
    000022D4 56F2                   MOV.L       @(8,R15),R6
    000022D6 4E0B                   JSR         @R14
    000022D8 E403                   MOV         #3,R4
          EDIT.c  1674      
          EDIT.c  1675      //Folder name
          EDIT.c  1676      //if(strlen(sFolder)>0) PrintStr(18,0,sFolder);
          EDIT.c  1677      
          EDIT.c  1678      //Binary file / Text file
          EDIT.c  1679      SetFont(FONTS);
    000022DA 490B                   JSR         @R9
    000022DC E400                   MOV         #0,R4
          EDIT.c  1680      SetColor(COLREV);
    000022DE 4A0B                   JSR         @R10
    000022E0 E401                   MOV         #1,R4
          EDIT.c  1681      SetOffset(0,0);
    000022E2 E500                   MOV         #0,R5
    000022E4 4C0B                   JSR         @R12
    000022E6 6453                   MOV         R5,R4
          EDIT.c  1682      PrintStrXY(-3+4*30,0," ");
    000022E8 DE1D                   MOV.L       L5111+74,R14; _PrintStrXY
    000022EA 66D3                   MOV         R13,R6
    000022EC E500                   MOV         #0,R5
    000022EE 4E0B                   JSR         @R14
    000022F0 E475                   MOV         #117,R4
          EDIT.c  1683      PrintStrXY(-2+4*30,0," ");




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  112


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000022F2 66D3                   MOV         R13,R6
    000022F4 E500                   MOV         #0,R5
    000022F6 4E0B                   JSR         @R14
    000022F8 E476                   MOV         #118,R4
          EDIT.c  1684      PrintStrXY(-3+4*30,1," ");
    000022FA 66D3                   MOV         R13,R6
    000022FC E501                   MOV         #1,R5
    000022FE 4E0B                   JSR         @R14
    00002300 E475                   MOV         #117,R4
          EDIT.c  1685      switch(iBinary) 
    00002302 60F2                   MOV.L       @R15,R0
    00002304 8800                   CMP/EQ      #0,R0
    00002306 8903                   BT          L2690
    00002308 8801                   CMP/EQ      #1,R0
    0000230A 892D                   BT          L2692
    0000230C A030                   BRA         L4327
    0000230E 0009                   NOP
    00002310              L2690:                           ; case label 
          EDIT.c  1686      {
          EDIT.c  1687        case 0: PrintStrXY(-2+4*30,1,"T"); break;
    00002310 D614                   MOV.L       L5111+78,R6; L818
    00002312 A02A                   BRA         L4923
    00002314 0009                   NOP
    00002316              L5111:                            
    00002316 0000                   .DATA.W     0
    00002318 <00000000>             .DATA.L     _SetColorCntx
    0000231C <00000000>             .DATA.L     _SetFontContext
    00002320 <00000000>             .DATA.L     _PrintStr
    00002324 <00000000>             .DATA.L     _GetScrCAx
    00002328 <00000000>             .DATA.L     L804
    0000232C <00000000>             .DATA.L     _GetScrCAy
    00002330 <00000000>             .DATA.L     _SetFont
    00002334 <00000000>             .DATA.L     _SetColor
    00002338 <00000000>             .DATA.L     _SetOffset
    0000233C <00000000>             .DATA.L     L810
    00002340 <00000000>             .DATA.L     L811
    00002344 <00000000>             .DATA.L     L620
    00002348 <00000000>             .DATA.L     __slow_strcmp1
    0000234C <00000000>             .DATA.L     L812
    00002350 <00000000>             .DATA.L     L813
    00002354 <00000000>             .DATA.L     L814
    00002358 <00000000>             .DATA.L     L815
    0000235C <00000000>             .DATA.L     L816
    00002360 <00000000>             .DATA.L     _PrintStrXY
    00002364 <00000000>             .DATA.L     L818
    00002368              L2692:                           ; case label 
          EDIT.c  1688        case 1: PrintStrXY(-2+4*30,1,"B"); break;
    00002368 D687                   MOV.L       L5112,R6   ; L819
    0000236A              L4923:                            
    0000236A E501                   MOV         #1,R5
    0000236C 4E0B                   JSR         @R14
    0000236E E476                   MOV         #118,R4
    00002370              L4327:                            
          EDIT.c  1689      }
          EDIT.c  1690      
          EDIT.c  1691      //Save file status
          EDIT.c  1692      SetFont(FONTS);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  113


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002370 490B                   JSR         @R9
    00002372 E400                   MOV         #0,R4
          EDIT.c  1693      SetColor(COLREV);
    00002374 4A0B                   JSR         @R10
    00002376 E401                   MOV         #1,R4
          EDIT.c  1694      PrintStrXY(-5+4*29,0," ");
    00002378 66D3                   MOV         R13,R6
    0000237A E500                   MOV         #0,R5
    0000237C 4E0B                   JSR         @R14
    0000237E E46F                   MOV         #111,R4
          EDIT.c  1695      PrintStrXY(-4+4*29,0," ");
    00002380 66D3                   MOV         R13,R6
    00002382 E500                   MOV         #0,R5
    00002384 4E0B                   JSR         @R14
    00002386 E470                   MOV         #112,R4
          EDIT.c  1696      PrintStrXY(-5+4*29,1," ");
    00002388 66D3                   MOV         R13,R6
    0000238A E501                   MOV         #1,R5
    0000238C 4E0B                   JSR         @R14
    0000238E E46F                   MOV         #111,R4
          EDIT.c  1697      switch(iSaved) 
    00002390 50F1                   MOV.L       @(4,R15),R0
    00002392 8800                   CMP/EQ      #0,R0
    00002394 8903                   BT          L2694
    00002396 8801                   CMP/EQ      #1,R0
    00002398 8904                   BT          L2696
    0000239A A007                   BRA         L4328
    0000239C 0009                   NOP
    0000239E              L2694:                           ; case label 
          EDIT.c  1698      {
          EDIT.c  1699        case 0: PrintStrXY(-4+4*29,1,"-"); break;
    0000239E D67B                   MOV.L       L5112+4,R6 ; L821
    000023A0 A001                   BRA         L4924
    000023A2 0009                   NOP
    000023A4              L2696:                           ; case label 
          EDIT.c  1700        case 1: PrintStrXY(-4+4*29,1,"S"); break;
    000023A4 D67A                   MOV.L       L5112+8,R6 ; L822
    000023A6              L4924:                            
    000023A6 E501                   MOV         #1,R5
    000023A8 4E0B                   JSR         @R14
    000023AA E470                   MOV         #112,R4
    000023AC              L4328:                            
          EDIT.c  1701      }
          EDIT.c  1702      
          EDIT.c  1703    }
    000023AC 7F0C                   ADD         #12,R15
    000023AE 4F26                   LDS.L       @R15+,PR
    000023B0 69F6                   MOV.L       @R15+,R9
    000023B2 6AF6                   MOV.L       @R15+,R10
    000023B4 6BF6                   MOV.L       @R15+,R11
    000023B6 6CF6                   MOV.L       @R15+,R12
    000023B8 6DF6                   MOV.L       @R15+,R13
    000023BA 000B                   RTS
    000023BC 6EF6                   MOV.L       @R15+,R14
          EDIT.c  1704    
          EDIT.c  1705    // ----------------------------------------------------------------
          EDIT.c  1706    // Info bar




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  114


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1707    void PrintInfoBar(char *sFolder,int iLine, int iTotal,
    000023BE              _PrintInfoBar:                   ; function: PrintInfoBar
                                                           ; frame size=52
    000023BE 2FE6                   MOV.L       R14,@-R15
    000023C0 2FD6                   MOV.L       R13,@-R15
    000023C2 2FC6                   MOV.L       R12,@-R15
    000023C4 4F22                   STS.L       PR,@-R15
    000023C6 7FE8                   ADD         #-24,R15
          EDIT.c  1708                      struct Config *sConfig)
          EDIT.c  1709    {
          EDIT.c  1710      //Variables
          EDIT.c  1711      char sStr[10];
          EDIT.c  1712      
          EDIT.c  1713      //Switch on option
          EDIT.c  1714      switch(sConfig->iInfo)
    000023C8 DD72                   MOV.L       L5112+12,R13; _SetOffset
    000023CA 2F42                   MOV.L       R4,@R15
    000023CC 1F52                   MOV.L       R5,@(8,R15)
    000023CE 1F61                   MOV.L       R6,@(4,R15)
    000023D0 DE71                   MOV.L       L5112+16,R14; _PrintStr
    000023D2 507A                   MOV.L       @(40,R7),R0
    000023D4 8801                   CMP/EQ      #1,R0
    000023D6 8903                   BT          L2698
    000023D8 8802                   CMP/EQ      #2,R0
    000023DA 891A                   BT          L2700
    000023DC A03E                   BRA         L4329
    000023DE 0009                   NOP
    000023E0              L2698:                           ; case label 
          EDIT.c  1715      {
          EDIT.c  1716        case INFOBARFOLDER:
          EDIT.c  1717          SetFont(FONTS);
    000023E0 D36E                   MOV.L       L5112+20,R3; _SetFont
    000023E2 430B                   JSR         @R3
    000023E4 E400                   MOV         #0,R4
          EDIT.c  1718          SetColor(COLREV);
    000023E6 D26E                   MOV.L       L5112+24,R2; _SetColor
    000023E8 420B                   JSR         @R2
    000023EA E401                   MOV         #1,R4
          EDIT.c  1719          SetOffset(1,1); PrintStr(17,0,"[        ]");
    000023EC E501                   MOV         #1,R5
    000023EE 4D0B                   JSR         @R13
    000023F0 6453                   MOV         R5,R4
    000023F2 E500                   MOV         #0,R5
    000023F4 D66B                   MOV.L       L5112+28,R6; L830
    000023F6 4E0B                   JSR         @R14
    000023F8 E411                   MOV         #17,R4
          EDIT.c  1720          if(strlen(sFolder)>0) PrintStr(18,0,sFolder);
    000023FA D36B                   MOV.L       L5112+32,R3; _strlen
    000023FC 430B                   JSR         @R3
    000023FE 64F2                   MOV.L       @R15,R4
    00002400 E200                   MOV         #0,R2
    00002402 3026                   CMP/HI      R2,R0
    00002404 8B27                   BF          L1641
    00002406 6523                   MOV         R2,R5
    00002408 66F2                   MOV.L       @R15,R6
    0000240A 4E0B                   JSR         @R14
    0000240C E412                   MOV         #18,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  115


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000240E A022                   BRA         L1641
    00002410 0009                   NOP
    00002412              L2700:                           ; case label 
          EDIT.c  1721          SetOffset(0,0);
          EDIT.c  1722          break;
          EDIT.c  1723        case INFOBARCURSOR:
          EDIT.c  1724          SetFont(FONTS);
    00002412 D362                   MOV.L       L5112+20,R3; _SetFont
    00002414 430B                   JSR         @R3
    00002416 E400                   MOV         #0,R4
          EDIT.c  1725          SetColor(COLREV);
    00002418 D261                   MOV.L       L5112+24,R2; _SetColor
    0000241A 420B                   JSR         @R2
    0000241C E401                   MOV         #1,R4
          EDIT.c  1726          sprintf(sStr,"%i/%i",iLine,iTotal);
    0000241E 6CF3                   MOV         R15,R12
    00002420 53F1                   MOV.L       @(4,R15),R3
    00002422 7C0C                   ADD         #12,R12
    00002424 2F36                   MOV.L       R3,@-R15
    00002426 52F3                   MOV.L       @(12,R15),R2
    00002428 D360                   MOV.L       L5112+36,R3; L831
    0000242A 2F26                   MOV.L       R2,@-R15
    0000242C 2F36                   MOV.L       R3,@-R15
    0000242E D260                   MOV.L       L5112+40,R2; _sprintf
    00002430 420B                   JSR         @R2
    00002432 64C3                   MOV         R12,R4
    00002434 7F0C                   ADD         #12,R15
          EDIT.c  1727          SetOffset(1,1); 
    00002436 E501                   MOV         #1,R5
    00002438 4D0B                   JSR         @R13
    0000243A 6453                   MOV         R5,R4
          EDIT.c  1728          PrintStr(17,0,"          ");
    0000243C D65D                   MOV.L       L5112+44,R6; L832
    0000243E E500                   MOV         #0,R5
    00002440 4E0B                   JSR         @R14
    00002442 E411                   MOV         #17,R4
          EDIT.c  1729          PrintStr(17+10-strlen(sStr),0,sStr);
    00002444 D358                   MOV.L       L5112+32,R3; _strlen
    00002446 430B                   JSR         @R3
    00002448 64C3                   MOV         R12,R4
    0000244A 600B                   NEG         R0,R0
    0000244C 6403                   MOV         R0,R4
    0000244E 741B                   ADD         #27,R4
    00002450 E500                   MOV         #0,R5
    00002452 4E0B                   JSR         @R14
    00002454 66C3                   MOV         R12,R6
    00002456              L1641:
          EDIT.c  1730          SetOffset(0,0);
    00002456 E500                   MOV         #0,R5
    00002458 4D0B                   JSR         @R13
    0000245A 6453                   MOV         R5,R4
          EDIT.c  1731          break;
    0000245C              L4329:                            
          EDIT.c  1732      }
          EDIT.c  1733    }
    0000245C 7F18                   ADD         #24,R15
    0000245E 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  116


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002460 6CF6                   MOV.L       @R15+,R12
    00002462 6DF6                   MOV.L       @R15+,R13
    00002464 000B                   RTS
    00002466 6EF6                   MOV.L       @R15+,R14
          EDIT.c  1734    
          EDIT.c  1735    // ----------------------------------------------------------------
          EDIT.c  1736    // Main directory
          EDIT.c  1737    int MainDirectory(int iAction, char *sFile,char *sFolder)
    00002468              _MainDirectory:                  ; function: MainDirectory
                                                           ; frame size=72
                                                           ; used runtime library name:
                                                           ; __slow_strcpy, __slow_strcmp1
    00002468 2FE6                   MOV.L       R14,@-R15
          EDIT.c  1738    {
          EDIT.c  1739      //Variables
          EDIT.c  1740      int i;
          EDIT.c  1741      int iError;
          EDIT.c  1742      int iHandle1;
          EDIT.c  1743      int iHandle2;
          EDIT.c  1744      int iFound;
          EDIT.c  1745      int iExit;
          EDIT.c  1746      struct MainDir sMainDir;
          EDIT.c  1747      static int iHandle;
          EDIT.c  1748      static int iSeek;
          EDIT.c  1749      static sFolder0[MAXFNAMEMM];
          EDIT.c  1750      
          EDIT.c  1751      //Switch on action
          EDIT.c  1752      switch(iAction)
    0000246A 6043                   MOV         R4,R0
    0000246C 2FD6                   MOV.L       R13,@-R15
    0000246E 8801                   CMP/EQ      #1,R0
    00002470 DE54                   MOV.L       L5112+60,R14; __$iSeek$845
    00002472 2FC6                   MOV.L       R12,@-R15
    00002474 2FB6                   MOV.L       R11,@-R15
    00002476 EC01                   MOV         #1,R12
    00002478 DD51                   MOV.L       L5112+56,R13; __$iHandle$844
    0000247A 2FA6                   MOV.L       R10,@-R15
    0000247C 2F96                   MOV.L       R9,@-R15
    0000247E 2F86                   MOV.L       R8,@-R15
    00002480 4F22                   STS.L       PR,@-R15
    00002482 7FD8                   ADD         #-40,R15
    00002484 D94C                   MOV.L       L5112+48,R9; _Bfile_CloseFile
    00002486 DB4D                   MOV.L       L5112+52,R11; _Bfile_ReadFile
    00002488 1F53                   MOV.L       R5,@(12,R15)
    0000248A 1F62                   MOV.L       R6,@(8,R15)
    0000248C D84E                   MOV.L       L5112+64,R8; _Bfile_WriteFile
    0000248E 8D18                   BT/S        L2706
    00002490 EA00                   MOV         #0,R10
    00002492 8802                   CMP/EQ      #2,R0
    00002494 8947                   BT          L2709
    00002496 8803                   CMP/EQ      #3,R0
    00002498 8B01                   BF          L5113
    0000249A A0A5                   BRA         L2710
    0000249C 0009                   NOP
    0000249E              L5113:                            
    0000249E 8804                   CMP/EQ      #4,R0
    000024A0 8B01                   BF          L5114




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  117


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000024A2 A0D7                   BRA         L2711
    000024A4 0009                   NOP
    000024A6              L5114:                            
    000024A6 8805                   CMP/EQ      #5,R0
    000024A8 8B01                   BF          L5115
    000024AA A10A                   BRA         L2713
    000024AC 0009                   NOP
    000024AE              L5115:                            
    000024AE 8806                   CMP/EQ      #6,R0
    000024B0 8B01                   BF          L5116
    000024B2 A15C                   BRA         L2714
    000024B4 0009                   NOP
    000024B6              L5116:                            
    000024B6 8807                   CMP/EQ      #7,R0
    000024B8 8B01                   BF          L5117
    000024BA A167                   BRA         L2715
    000024BC 0009                   NOP
    000024BE              L5117:                            
    000024BE A1BA                   BRA         L4335
    000024C0 0009                   NOP
    000024C2              L2706:                           ; case label 
          EDIT.c  1753      {
          EDIT.c  1754        //Initialize
          EDIT.c  1755        case INITIALIZE:
          EDIT.c  1756          iHandle=Bfile_OpenMainMemory(MAINDIRFILE);
    000024C2 D442                   MOV.L       L5112+68,R4; L848
    000024C4 D342                   MOV.L       L5112+72,R3; _Bfile_OpenMainMemory
    000024C6 430B                   JSR         @R3
    000024C8 0009                   NOP
          EDIT.c  1757          if(iHandle<0)
    000024CA 6203                   MOV         R0,R2
    000024CC 4211                   CMP/PZ      R2
    000024CE 8D26                   BT/S        L4332
    000024D0 2D02                   MOV.L       R0,@R13
          EDIT.c  1758          {
          EDIT.c  1759            Bfile_CreateMainMemory(MAINDIRFILE);
    000024D2 D43E                   MOV.L       L5112+68,R4; L848
    000024D4 D23F                   MOV.L       L5112+76,R2; _Bfile_CreateMainMemory
    000024D6 420B                   JSR         @R2
    000024D8 0009                   NOP
          EDIT.c  1760            iHandle=Bfile_OpenMainMemory(MAINDIRFILE);
    000024DA D43C                   MOV.L       L5112+68,R4; L848
    000024DC D33C                   MOV.L       L5112+72,R3; _Bfile_OpenMainMemory
    000024DE 430B                   JSR         @R3
    000024E0 0009                   NOP
          EDIT.c  1761            if(iHandle>=0)
    000024E2 6203                   MOV         R0,R2
    000024E4 4211                   CMP/PZ      R2
    000024E6 8F1A                   BF/S        L4332
    000024E8 2D02                   MOV.L       R0,@R13
          EDIT.c  1762            {
          EDIT.c  1763              memset(&sMainDir,0,sizeof(struct MainDir));
    000024EA E612                   MOV         #18,R6
    000024EC D23A                   MOV.L       L5112+80,R2; _memset
    000024EE E500                   MOV         #0,R5
    000024F0 64F3                   MOV         R15,R4
    000024F2 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  118


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000024F4 7414                   ADD         #20,R4
          EDIT.c  1764              strcpy(&(sMainDir.sName),CONFIGFILE);
    000024F6 60F3                   MOV         R15,R0
    000024F8 D339                   MOV.L       L5112+88,R3; __slow_strcpy
    000024FA D138                   MOV.L       L5112+84,R1; L851
    000024FC 430B                   JSR         @R3
    000024FE 7014                   ADD         #20,R0
          EDIT.c  1765              Bfile_WriteFile(iHandle,(void *)&sMainDir,sizeof(struct MainDir));
    00002500 E612                   MOV         #18,R6
    00002502 65F3                   MOV         R15,R5
    00002504 7514                   ADD         #20,R5
    00002506 480B                   JSR         @R8
    00002508 64D2                   MOV.L       @R13,R4
          EDIT.c  1766              strcpy(&(sMainDir.sName),MAINDIRFILE);
    0000250A 60F3                   MOV         R15,R0
    0000250C D234                   MOV.L       L5112+88,R2; __slow_strcpy
    0000250E D12F                   MOV.L       L5112+68,R1; L848
    00002510 420B                   JSR         @R2
    00002512 7014                   ADD         #20,R0
          EDIT.c  1767              Bfile_WriteFile(iHandle,(void *)&sMainDir,sizeof(struct MainDir));
    00002514 E612                   MOV         #18,R6
    00002516 65F3                   MOV         R15,R5
    00002518 7514                   ADD         #20,R5
    0000251A 480B                   JSR         @R8
    0000251C 64D2                   MOV.L       @R13,R4
    0000251E              L4332:                            
          EDIT.c  1768            }
          EDIT.c  1769          }
          EDIT.c  1770          Bfile_CloseFile(iHandle);
    0000251E 490B                   JSR         @R9
    00002520 64D2                   MOV.L       @R13,R4
          EDIT.c  1771          break;
    00002522 A188                   BRA         L4335
    00002524 0009                   NOP
    00002526              L2709:                           ; case label 
          EDIT.c  1772        
          EDIT.c  1773        //Check entry exists
          EDIT.c  1774        case CHECKENTRY:
          EDIT.c  1775          iHandle=Bfile_OpenMainMemory(MAINDIRFILE);
    00002526 D429                   MOV.L       L5112+68,R4; L848
    00002528 D229                   MOV.L       L5112+72,R2; _Bfile_OpenMainMemory
    0000252A 420B                   JSR         @R2
    0000252C 0009                   NOP
          EDIT.c  1776          if(iHandle<0){ Bfile_CloseFile(iHandle); return(-1); }
    0000252E 6303                   MOV         R0,R3
    00002530 4311                   CMP/PZ      R3
    00002532 8D02                   BT/S        L5118
    00002534 2D02                   MOV.L       R0,@R13
    00002536 A132                   BRA         L1679
    00002538 0009                   NOP
    0000253A              L5118:                            
          EDIT.c  1777          iFound=0;
    0000253A 68A3                   MOV         R10,R8
          EDIT.c  1778          iSeek=0;
    0000253C 2EA2                   MOV.L       R10,@R14
          EDIT.c  1779          do{
    0000253E              L4336:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  119


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1780            if(Bfile_ReadFile(iHandle,(void *)&sMainDir,sizeof(struct MainDir),iSeek)<0)
    0000253E E612                   MOV         #18,R6
    00002540 67E2                   MOV.L       @R14,R7
    00002542 65F3                   MOV         R15,R5
    00002544 7514                   ADD         #20,R5
    00002546 4B0B                   JSR         @R11
    00002548 64D2                   MOV.L       @R13,R4
    0000254A 4011                   CMP/PZ      R0
    0000254C 8B13                   BF          L4338
          EDIT.c  1781            {
          EDIT.c  1782              break;
          EDIT.c  1783            }
          EDIT.c  1784            if(strcmp(sFolder,sMainDir.sFolder)==0 && strcmp(sFile,sMainDir.sName)==0)
    0000254E 65F3                   MOV         R15,R5
    00002550 D324                   MOV.L       L5112+92,R3; __slow_strcmp1
    00002552 751D                   ADD         #29,R5
    00002554 430B                   JSR         @R3
    00002556 54F2                   MOV.L       @(8,R15),R4
    00002558 2008                   TST         R0,R0
    0000255A 8B08                   BF          L4339
    0000255C D321                   MOV.L       L5112+92,R3; __slow_strcmp1
    0000255E 65F3                   MOV         R15,R5
    00002560 7514                   ADD         #20,R5
    00002562 430B                   JSR         @R3
    00002564 54F3                   MOV.L       @(12,R15),R4
    00002566 2008                   TST         R0,R0
    00002568 8B01                   BF          L4339
          EDIT.c  1785            {
          EDIT.c  1786              iFound=1;
          EDIT.c  1787              break;
    0000256A A004                   BRA         L4338
    0000256C 68C3                   MOV         R12,R8
    0000256E              L4339:                            
          EDIT.c  1788            }
          EDIT.c  1789            iSeek+=sizeof(struct MainDir);
    0000256E 62E2                   MOV.L       @R14,R2
    00002570 7212                   ADD         #18,R2
          EDIT.c  1790          }while(1);
    00002572 AFE4                   BRA         L4336
    00002574 2E22                   MOV.L       R2,@R14
    00002576              L4338:                            
          EDIT.c  1791          Bfile_CloseFile(iHandle);
    00002576 490B                   JSR         @R9
    00002578 64D2                   MOV.L       @R13,R4
          EDIT.c  1792          return(iFound==1?0:-1);
    0000257A 6083                   MOV         R8,R0
    0000257C 8801                   CMP/EQ      #1,R0
    0000257E 8B01                   BF          L5119
    00002580 A158                   BRA         L4930
    00002582 0009                   NOP
    00002584              L5119:                            
    00002584 A157                   BRA         L4335
    00002586 E0FF                   MOV         #-1,R0
    00002588              L5112:                            
    00002588 <00000000>             .DATA.L     L819
    0000258C <00000000>             .DATA.L     L821
    00002590 <00000000>             .DATA.L     L822




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  120


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002594 <00000000>             .DATA.L     _SetOffset
    00002598 <00000000>             .DATA.L     _PrintStr
    0000259C <00000000>             .DATA.L     _SetFont
    000025A0 <00000000>             .DATA.L     _SetColor
    000025A4 <00000000>             .DATA.L     L830
    000025A8 <00000000>             .DATA.L     _strlen
    000025AC <00000000>             .DATA.L     L831
    000025B0 <00000000>             .DATA.L     _sprintf
    000025B4 <00000000>             .DATA.L     L832
    000025B8 <00000000>             .DATA.L     _Bfile_CloseFile
    000025BC <00000000>             .DATA.L     _Bfile_ReadFile
    000025C0 <00000000>             .DATA.L     __$iHandle$844
    000025C4 <00000000>             .DATA.L     __$iSeek$845
    000025C8 <00000000>             .DATA.L     _Bfile_WriteFile
    000025CC <00000000>             .DATA.L     L848
    000025D0 <00000000>             .DATA.L     _Bfile_OpenMainMemory
    000025D4 <00000000>             .DATA.L     _Bfile_CreateMainMemory
    000025D8 <00000000>             .DATA.L     _memset
    000025DC <00000000>             .DATA.L     L851
    000025E0 <00000000>             .DATA.L     __slow_strcpy
    000025E4 <00000000>             .DATA.L     __slow_strcmp1
    000025E8              L2710:                           ; case label 
          EDIT.c  1793          break;
          EDIT.c  1794        
          EDIT.c  1795        //Create entry
          EDIT.c  1796        case CREATE:
          EDIT.c  1797          iHandle=Bfile_OpenMainMemory(MAINDIRFILE);
    000025E8 D47A                   MOV.L       L5120+2,R4 ; L848
    000025EA D37B                   MOV.L       L5120+6,R3 ; _Bfile_OpenMainMemory
    000025EC 430B                   JSR         @R3
    000025EE 0009                   NOP
          EDIT.c  1798          if(iHandle<0){ Bfile_CloseFile(iHandle); return(-1); }
    000025F0 6203                   MOV         R0,R2
    000025F2 4211                   CMP/PZ      R2
    000025F4 8D02                   BT/S        L5121
    000025F6 2D02                   MOV.L       R0,@R13
    000025F8 A0D1                   BRA         L1679
    000025FA 0009                   NOP
    000025FC              L5121:                            
          EDIT.c  1799          iError=0;
    000025FC 2FA2                   MOV.L       R10,@R15
          EDIT.c  1800          iSeek=0;
    000025FE 2EA2                   MOV.L       R10,@R14
          EDIT.c  1801          do{
    00002600              L4343:                            
          EDIT.c  1802            if(Bfile_ReadFile(iHandle,(void *)&sMainDir,sizeof(struct MainDir),iSeek)<0)
    00002600 67E2                   MOV.L       @R14,R7
    00002602 E612                   MOV         #18,R6
    00002604 65F3                   MOV         R15,R5
    00002606 7514                   ADD         #20,R5
    00002608 4B0B                   JSR         @R11
    0000260A 64D2                   MOV.L       @R13,R4
    0000260C 4011                   CMP/PZ      R0
    0000260E 891D                   BT          L4344
          EDIT.c  1803            {
          EDIT.c  1804              memset(&sMainDir,0,sizeof(struct MainDir));
    00002610 D272                   MOV.L       L5120+10,R2; _memset




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  121


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002612 E612                   MOV         #18,R6
    00002614 E500                   MOV         #0,R5
    00002616 64F3                   MOV         R15,R4
    00002618 420B                   JSR         @R2
    0000261A 7414                   ADD         #20,R4
          EDIT.c  1805              strcpy(&(sMainDir.sName),sFile);
    0000261C 51F3                   MOV.L       @(12,R15),R1
    0000261E 60F3                   MOV         R15,R0
    00002620 D36F                   MOV.L       L5120+14,R3; __slow_strcpy
    00002622 430B                   JSR         @R3
    00002624 7014                   ADD         #20,R0
          EDIT.c  1806              strcpy(&(sMainDir.sFolder),sFolder);
    00002626 60F3                   MOV         R15,R0
    00002628 D26D                   MOV.L       L5120+14,R2; __slow_strcpy
    0000262A 51F2                   MOV.L       @(8,R15),R1
    0000262C 420B                   JSR         @R2
    0000262E 701D                   ADD         #29,R0
          EDIT.c  1807              if(Bfile_WriteFile(iHandle,(void *)&sMainDir,sizeof(struct MainDir))<0)
    00002630 E612                   MOV         #18,R6
    00002632 65F3                   MOV         R15,R5
    00002634 7514                   ADD         #20,R5
    00002636 480B                   JSR         @R8
    00002638 64D2                   MOV.L       @R13,R4
    0000263A 4011                   CMP/PZ      R0
    0000263C 8901                   BT          L4345
          EDIT.c  1808                iError=1;
    0000263E A001                   BRA         L4347
    00002640 2FC2                   MOV.L       R12,@R15
    00002642              L4345:                            
          EDIT.c  1809              else
          EDIT.c  1810                iError=0;
    00002642 2FA2                   MOV.L       R10,@R15
          EDIT.c  1811              break;
    00002644              L4347:                            
          EDIT.c  1812            }
          EDIT.c  1813            iSeek+=sizeof(struct MainDir);
          EDIT.c  1814          }while(1);
          EDIT.c  1815          Bfile_CloseFile(iHandle);
    00002644 490B                   JSR         @R9
    00002646 64D2                   MOV.L       @R13,R4
    00002648 A036                   BRA         L1681
    0000264A 0009                   NOP
    0000264C              L4344:                            
    0000264C 62E2                   MOV.L       @R14,R2
    0000264E 7212                   ADD         #18,R2
    00002650 AFD6                   BRA         L4343
    00002652 2E22                   MOV.L       R2,@R14
    00002654              L2711:                           ; case label 
          EDIT.c  1816          return(iError==1?-1:0);
          EDIT.c  1817          break;
          EDIT.c  1818        
          EDIT.c  1819        //Delete entry
          EDIT.c  1820        case DELETE:
          EDIT.c  1821          iHandle1=Bfile_OpenMainMemory(MAINDIRFILE);
    00002654 D45F                   MOV.L       L5120+2,R4 ; L848
    00002656 D260                   MOV.L       L5120+6,R2 ; _Bfile_OpenMainMemory
    00002658 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  122


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000265A 0009                   NOP
          EDIT.c  1822          if(iHandle1<0){ Bfile_CloseFile(iHandle1); return(-1); }
    0000265C 4011                   CMP/PZ      R0
    0000265E 8F37                   BF/S        L1689
    00002660 2F02                   MOV.L       R0,@R15
          EDIT.c  1823          if(Bfile_CreateMainMemory(MAINDIRTEMP)<0) return(-1);
    00002662 D460                   MOV.L       L5120+18,R4; L860
    00002664 D360                   MOV.L       L5120+22,R3; _Bfile_CreateMainMemory
    00002666 430B                   JSR         @R3
    00002668 0009                   NOP
    0000266A 4011                   CMP/PZ      R0
    0000266C 8901                   BT          L5122
    0000266E A098                   BRA         L4929
    00002670 0009                   NOP
    00002672              L5122:                            
          EDIT.c  1824          iHandle2=Bfile_OpenMainMemory(MAINDIRTEMP);
    00002672 D45C                   MOV.L       L5120+18,R4; L860
    00002674 D358                   MOV.L       L5120+6,R3 ; _Bfile_OpenMainMemory
    00002676 430B                   JSR         @R3
    00002678 0009                   NOP
          EDIT.c  1825          if(iHandle2<0)
    0000267A 4011                   CMP/PZ      R0
    0000267C 8F39                   BF/S        L1668
    0000267E 1F01                   MOV.L       R0,@(4,R15)
          EDIT.c  1826          { 
          EDIT.c  1827            Bfile_CloseFile(iHandle1); 
          EDIT.c  1828            Bfile_CloseFile(iHandle2); 
          EDIT.c  1829            Bfile_DeleteMainMemory(MAINDIRTEMP);
          EDIT.c  1830            return(-1); 
          EDIT.c  1831          }
          EDIT.c  1832          iError=0;
    00002680 1FA4                   MOV.L       R10,@(16,R15)
          EDIT.c  1833          iSeek=0;
    00002682 2EA2                   MOV.L       R10,@R14
          EDIT.c  1834          do{
    00002684              L4351:                            
          EDIT.c  1835            if(Bfile_ReadFile(iHandle1,(void *)&sMainDir,sizeof(struct MainDir),iSeek)<0)
    00002684 67E2                   MOV.L       @R14,R7
    00002686 E612                   MOV         #18,R6
    00002688 65F3                   MOV         R15,R5
    0000268A 7514                   ADD         #20,R5
    0000268C 4B0B                   JSR         @R11
    0000268E 64F2                   MOV.L       @R15,R4
    00002690 4011                   CMP/PZ      R0
    00002692 8B5A                   BF          L1683
          EDIT.c  1836            {
          EDIT.c  1837              break;
          EDIT.c  1838            }
          EDIT.c  1839            if(strcmp(sFile,sMainDir.sName)!=0)
    00002694 D355                   MOV.L       L5120+26,R3; __slow_strcmp1
    00002696 65F3                   MOV         R15,R5
    00002698 7514                   ADD         #20,R5
    0000269A 430B                   JSR         @R3
    0000269C 54F3                   MOV.L       @(12,R15),R4
    0000269E 2008                   TST         R0,R0
    000026A0 8906                   BT          L4354
          EDIT.c  1840            {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  123


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1841              if(Bfile_WriteFile(iHandle2,(void *)&sMainDir,sizeof(struct MainDir))<0)
    000026A2 E612                   MOV         #18,R6
    000026A4 65F3                   MOV         R15,R5
    000026A6 7514                   ADD         #20,R5
    000026A8 480B                   JSR         @R8
    000026AA 54F1                   MOV.L       @(4,R15),R4
    000026AC 4011                   CMP/PZ      R0
    000026AE 8B42                   BF          L4931
    000026B0              L4354:                            
          EDIT.c  1842              {
          EDIT.c  1843                iError=1;
          EDIT.c  1844                break;
          EDIT.c  1845              }
          EDIT.c  1846            }
          EDIT.c  1847            iSeek+=sizeof(struct MainDir);
    000026B0 62E2                   MOV.L       @R14,R2
    000026B2 7212                   ADD         #18,R2
          EDIT.c  1848          }while(1);
    000026B4 AFE6                   BRA         L4351
    000026B6 2E22                   MOV.L       R2,@R14
    000026B8              L1681:
          EDIT.c  1849          Bfile_CloseFile(iHandle1);
          EDIT.c  1850          Bfile_CloseFile(iHandle2);
          EDIT.c  1851          Bfile_DeleteMainMemory(MAINDIRFILE);
          EDIT.c  1852          Bfile_RenameMainMemory(MAINDIRTEMP,MAINDIRFILE);
          EDIT.c  1853          return(iError==1?-1:0);
    000026B8 60F2                   MOV.L       @R15,R0
    000026BA 8801                   CMP/EQ      #1,R0
    000026BC 8971                   BT          L4929
    000026BE A0BA                   BRA         L4335
    000026C0 E000                   MOV         #0,R0
    000026C2              L2713:                           ; case label 
          EDIT.c  1854          break;
          EDIT.c  1855        
          EDIT.c  1856        //Delete all entries in folder
          EDIT.c  1857        case DELETEFOLDER:
          EDIT.c  1858          iHandle1=Bfile_OpenMainMemory(MAINDIRFILE);
    000026C2 D444                   MOV.L       L5120+2,R4 ; L848
    000026C4 D344                   MOV.L       L5120+6,R3 ; _Bfile_OpenMainMemory
    000026C6 430B                   JSR         @R3
    000026C8 0009                   NOP
          EDIT.c  1859          if(iHandle1<0){ Bfile_CloseFile(iHandle1); return(-1); }
    000026CA 4011                   CMP/PZ      R0
    000026CC 8D04                   BT/S        L4358
    000026CE 2F02                   MOV.L       R0,@R15
    000026D0              L1689:
    000026D0 490B                   JSR         @R9
    000026D2 64F2                   MOV.L       @R15,R4
    000026D4 A065                   BRA         L4929
    000026D6 0009                   NOP
    000026D8              L4358:                            
          EDIT.c  1860          if(Bfile_CreateMainMemory(MAINDIRTEMP)<0) return(-1);
    000026D8 D442                   MOV.L       L5120+18,R4; L860
    000026DA D343                   MOV.L       L5120+22,R3; _Bfile_CreateMainMemory
    000026DC 430B                   JSR         @R3
    000026DE 0009                   NOP
    000026E0 4011                   CMP/PZ      R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  124


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000026E2 8B5E                   BF          L4929
          EDIT.c  1861          iHandle2=Bfile_OpenMainMemory(MAINDIRTEMP);
    000026E4 D43F                   MOV.L       L5120+18,R4; L860
    000026E6 D23C                   MOV.L       L5120+6,R2 ; _Bfile_OpenMainMemory
    000026E8 420B                   JSR         @R2
    000026EA 0009                   NOP
          EDIT.c  1862          if(iHandle2<0)
    000026EC 4011                   CMP/PZ      R0
    000026EE 8D0A                   BT/S        L4360
    000026F0 1F01                   MOV.L       R0,@(4,R15)
    000026F2              L1668:
          EDIT.c  1863          { 
          EDIT.c  1864            Bfile_CloseFile(iHandle1); 
    000026F2 490B                   JSR         @R9
    000026F4 64F2                   MOV.L       @R15,R4
          EDIT.c  1865            Bfile_CloseFile(iHandle2); 
    000026F6 490B                   JSR         @R9
    000026F8 54F1                   MOV.L       @(4,R15),R4
          EDIT.c  1866            Bfile_DeleteMainMemory(MAINDIRTEMP);
    000026FA D43A                   MOV.L       L5120+18,R4; L860
    000026FC D33C                   MOV.L       L5120+30,R3; _Bfile_DeleteMainMemory
    000026FE 430B                   JSR         @R3
    00002700 0009                   NOP
    00002702 A04E                   BRA         L4929
    00002704 0009                   NOP
    00002706              L4360:                            
          EDIT.c  1867            return(-1); 
          EDIT.c  1868          }
          EDIT.c  1869          iError=0;
    00002706 1FA4                   MOV.L       R10,@(16,R15)
          EDIT.c  1870          iSeek=0;
    00002708 2EA2                   MOV.L       R10,@R14
          EDIT.c  1871          do{
    0000270A              L4361:                            
          EDIT.c  1872            if(Bfile_ReadFile(iHandle1,(void *)&sMainDir,sizeof(struct MainDir),iSeek)<0)
    0000270A E612                   MOV         #18,R6
    0000270C 67E2                   MOV.L       @R14,R7
    0000270E 65F3                   MOV         R15,R5
    00002710 7514                   ADD         #20,R5
    00002712 4B0B                   JSR         @R11
    00002714 64F2                   MOV.L       @R15,R4
    00002716 4011                   CMP/PZ      R0
    00002718 8B17                   BF          L1683
          EDIT.c  1873            {
          EDIT.c  1874              break;
          EDIT.c  1875            }
          EDIT.c  1876            if(strcmp(sFolder,sMainDir.sFolder)!=0)
    0000271A 65F3                   MOV         R15,R5
    0000271C D333                   MOV.L       L5120+26,R3; __slow_strcmp1
    0000271E 751D                   ADD         #29,R5
    00002720 430B                   JSR         @R3
    00002722 54F2                   MOV.L       @(8,R15),R4
    00002724 2008                   TST         R0,R0
    00002726 8908                   BT          L4364
          EDIT.c  1877            {
          EDIT.c  1878              if(Bfile_WriteFile(iHandle2,(void *)&sMainDir,sizeof(struct MainDir))<0)
    00002728 E612                   MOV         #18,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  125


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000272A 65F3                   MOV         R15,R5
    0000272C 7514                   ADD         #20,R5
    0000272E 480B                   JSR         @R8
    00002730 54F1                   MOV.L       @(4,R15),R4
    00002732 4011                   CMP/PZ      R0
    00002734 8905                   BT          L4366
    00002736              L4931:                            
          EDIT.c  1879              {
          EDIT.c  1880                iError=1;
          EDIT.c  1881                break;
    00002736 A008                   BRA         L1683
    00002738 1FC4                   MOV.L       R12,@(16,R15)
    0000273A              L4364:                            
          EDIT.c  1882              }
          EDIT.c  1883            }
          EDIT.c  1884            else
          EDIT.c  1885              Bfile_DeleteMainMemory(sMainDir.sName);
    0000273A 64F3                   MOV         R15,R4
    0000273C D32C                   MOV.L       L5120+30,R3; _Bfile_DeleteMainMemory
    0000273E 430B                   JSR         @R3
    00002740 7414                   ADD         #20,R4
    00002742              L4366:                            
          EDIT.c  1886            iSeek+=sizeof(struct MainDir);
    00002742 62E2                   MOV.L       @R14,R2
    00002744 7212                   ADD         #18,R2
          EDIT.c  1887          }while(1);
    00002746 AFE0                   BRA         L4361
    00002748 2E22                   MOV.L       R2,@R14
    0000274A              L1683:
          EDIT.c  1888          Bfile_CloseFile(iHandle1);
    0000274A 490B                   JSR         @R9
    0000274C 64F2                   MOV.L       @R15,R4
          EDIT.c  1889          Bfile_CloseFile(iHandle2);
    0000274E 490B                   JSR         @R9
    00002750 54F1                   MOV.L       @(4,R15),R4
          EDIT.c  1890          Bfile_DeleteMainMemory(MAINDIRFILE);
    00002752 D420                   MOV.L       L5120+2,R4 ; L848
    00002754 D326                   MOV.L       L5120+30,R3; _Bfile_DeleteMainMemory
    00002756 430B                   JSR         @R3
    00002758 0009                   NOP
          EDIT.c  1891          Bfile_RenameMainMemory(MAINDIRTEMP,MAINDIRFILE);
    0000275A D51E                   MOV.L       L5120+2,R5 ; L848
    0000275C D421                   MOV.L       L5120+18,R4; L860
    0000275E D225                   MOV.L       L5120+34,R2; _Bfile_RenameMainMemory
    00002760 420B                   JSR         @R2
    00002762 0009                   NOP
          EDIT.c  1892          return(iError==1?-1:0);
    00002764 50F4                   MOV.L       @(16,R15),R0
    00002766 8801                   CMP/EQ      #1,R0
    00002768 891B                   BT          L4929
    0000276A A064                   BRA         L4335
    0000276C E000                   MOV         #0,R0
    0000276E              L2714:                           ; case label 
          EDIT.c  1893          break;
          EDIT.c  1894        
          EDIT.c  1895        //Find first
          EDIT.c  1896        case FINDSTART:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  126


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1897          iSeek=0;
          EDIT.c  1898          iHandle=Bfile_OpenMainMemory(MAINDIRFILE);
    0000276E D419                   MOV.L       L5120+2,R4 ; L848
    00002770 D319                   MOV.L       L5120+6,R3 ; _Bfile_OpenMainMemory
    00002772 430B                   JSR         @R3
    00002774 2EA2                   MOV.L       R10,@R14
          EDIT.c  1899          if(iHandle<0){ Bfile_CloseFile(iHandle); return(-1); }
    00002776 6203                   MOV         R0,R2
    00002778 4211                   CMP/PZ      R2
    0000277A 8F10                   BF/S        L1679
    0000277C 2D02                   MOV.L       R0,@R13
          EDIT.c  1900          strcpy(sFolder0,sFolder);
    0000277E 51F2                   MOV.L       @(8,R15),R1
    00002780 D01D                   MOV.L       L5120+38,R0; __$sFolder0$846
    00002782 D317                   MOV.L       L5120+14,R3; __slow_strcpy
    00002784 430B                   JSR         @R3
    00002786 0009                   NOP
    00002788 A054                   BRA         L4930
    0000278A 0009                   NOP
    0000278C              L2715:                           ; case label 
          EDIT.c  1901          return(0);
          EDIT.c  1902          break;
          EDIT.c  1903        
          EDIT.c  1904        //Find next
          EDIT.c  1905        case FINDGET:
          EDIT.c  1906          iExit=0;
    0000278C 68A3                   MOV         R10,R8
          EDIT.c  1907          do{
    0000278E              L4370:                            
          EDIT.c  1908            if(Bfile_ReadFile(iHandle,(void *)&sMainDir,sizeof(struct MainDir),iSeek)<0)
    0000278E E612                   MOV         #18,R6
    00002790 67E2                   MOV.L       @R14,R7
    00002792 65F3                   MOV         R15,R5
    00002794 7514                   ADD         #20,R5
    00002796 4B0B                   JSR         @R11
    00002798 64D2                   MOV.L       @R13,R4
    0000279A 4011                   CMP/PZ      R0
    0000279C 8903                   BT          L4371
    0000279E              L1679:
          EDIT.c  1909            {
          EDIT.c  1910              Bfile_CloseFile(iHandle);
    0000279E 490B                   JSR         @R9
    000027A0 64D2                   MOV.L       @R13,R4
    000027A2              L4929:                            
          EDIT.c  1911              return(-1);
    000027A2 A048                   BRA         L4335
    000027A4 E0FF                   MOV         #-1,R0
    000027A6              L4371:                            
          EDIT.c  1912            }
          EDIT.c  1913            if(strlen(sFolder0)>0)
    000027A6 DA15                   MOV.L       L5120+42,R10; _strlen
    000027A8 D413                   MOV.L       L5120+38,R4; __$sFolder0$846
    000027AA 4A0B                   JSR         @R10
    000027AC 0009                   NOP
    000027AE E300                   MOV         #0,R3
    000027B0 3036                   CMP/HI      R3,R0
    000027B2 8B25                   BF          L4372




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  127


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1914            {
          EDIT.c  1915              if(strlen(sMainDir.sName)>0 && strcmp(sMainDir.sFolder,sFolder0)==0) iExit=1;        
    000027B4 64F3                   MOV         R15,R4
    000027B6 4A0B                   JSR         @R10
    000027B8 7414                   ADD         #20,R4
    000027BA E300                   MOV         #0,R3
    000027BC 3036                   CMP/HI      R3,R0
    000027BE 8B2A                   BF          L4374
    000027C0 D50D                   MOV.L       L5120+38,R5; __$sFolder0$846
    000027C2 64F3                   MOV         R15,R4
    000027C4 D109                   MOV.L       L5120+26,R1; __slow_strcmp1
    000027C6 410B                   JSR         @R1
    000027C8 741D                   ADD         #29,R4
    000027CA 2008                   TST         R0,R0
    000027CC 8922                   BT          L1680
    000027CE A022                   BRA         L4374
    000027D0 0009                   NOP
    000027D2              L5120:                            
    000027D2 0000                   .DATA.W     0
    000027D4 <00000000>             .DATA.L     L848
    000027D8 <00000000>             .DATA.L     _Bfile_OpenMainMemory
    000027DC <00000000>             .DATA.L     _memset
    000027E0 <00000000>             .DATA.L     __slow_strcpy
    000027E4 <00000000>             .DATA.L     L860
    000027E8 <00000000>             .DATA.L     _Bfile_CreateMainMemory
    000027EC <00000000>             .DATA.L     __slow_strcmp1
    000027F0 <00000000>             .DATA.L     _Bfile_DeleteMainMemory
    000027F4 <00000000>             .DATA.L     _Bfile_RenameMainMemory
    000027F8 <00000000>             .DATA.L     __$sFolder0$846
    000027FC <00000000>             .DATA.L     _strlen
    00002800              L4372:                            
          EDIT.c  1916            }
          EDIT.c  1917            else
          EDIT.c  1918            {
          EDIT.c  1919              if(strlen(sMainDir.sName)==0 || strlen(sMainDir.sFolder)==0) iExit=1;                  
    00002800 64F3                   MOV         R15,R4
    00002802 4A0B                   JSR         @R10
    00002804 7414                   ADD         #20,R4
    00002806 2008                   TST         R0,R0
    00002808 8904                   BT          L1680
    0000280A 64F3                   MOV         R15,R4
    0000280C 4A0B                   JSR         @R10
    0000280E 741D                   ADD         #29,R4
    00002810 2008                   TST         R0,R0
    00002812 8B00                   BF          L4374
    00002814              L1680:
    00002814 68C3                   MOV         R12,R8
    00002816              L4374:                            
          EDIT.c  1920            }
          EDIT.c  1921            iSeek+=sizeof(struct MainDir);
          EDIT.c  1922          }while(iExit==0);
    00002816 2888                   TST         R8,R8
    00002818 62E2                   MOV.L       @R14,R2
    0000281A 7212                   ADD         #18,R2
    0000281C 8DB7                   BT/S        L4370
    0000281E 2E22                   MOV.L       R2,@R14
          EDIT.c  1923          strcpy(sFile,sMainDir.sName);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  128


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002820 D33A                   MOV.L       L5123,R3   ; __slow_strcpy
    00002822 61F3                   MOV         R15,R1
    00002824 7114                   ADD         #20,R1
    00002826 430B                   JSR         @R3
    00002828 50F3                   MOV.L       @(12,R15),R0
          EDIT.c  1924          strcpy(sFolder,sMainDir.sFolder);
    0000282A 61F3                   MOV         R15,R1
    0000282C D237                   MOV.L       L5123,R2   ; __slow_strcpy
    0000282E 711D                   ADD         #29,R1
    00002830 420B                   JSR         @R2
    00002832 50F2                   MOV.L       @(8,R15),R0
    00002834              L4930:                            
          EDIT.c  1925          return(0);
    00002834 E000                   MOV         #0,R0
          EDIT.c  1926          break;
          EDIT.c  1927        
          EDIT.c  1928      }
          EDIT.c  1929    }
    00002836              L4335:                            
    00002836 7F28                   ADD         #40,R15
    00002838 4F26                   LDS.L       @R15+,PR
    0000283A 68F6                   MOV.L       @R15+,R8
    0000283C 69F6                   MOV.L       @R15+,R9
    0000283E 6AF6                   MOV.L       @R15+,R10
    00002840 6BF6                   MOV.L       @R15+,R11
    00002842 6CF6                   MOV.L       @R15+,R12
    00002844 6DF6                   MOV.L       @R15+,R13
    00002846 000B                   RTS
    00002848 6EF6                   MOV.L       @R15+,R14
          EDIT.c  1930    
          EDIT.c  1931    // ----------------------------------------------------------------
          EDIT.c  1932    // Fontcharacter string -> Char string
          EDIT.c  1933    char *Font2Char(FONTCHARACTER *sFont, char *sChar)
    0000284A              _Font2Char:                      ; function: Font2Char
                                                           ; frame size=0
          EDIT.c  1934    {
          EDIT.c  1935      int i=0;
          EDIT.c  1936      for(i=0;sFont[i]!=0;i++) sChar[i]=sFont[i];
    0000284A E700                   MOV         #0,R7
    0000284C A00B                   BRA         L4377
    0000284E 6673                   MOV         R7,R6
    00002850              L4378:                            
    00002850 6063                   MOV         R6,R0
    00002852 6263                   MOV         R6,R2
    00002854 325C                   ADD         R5,R2
    00002856 6363                   MOV         R6,R3
    00002858 4300                   SHLL        R3
    0000285A 334C                   ADD         R4,R3
    0000285C E101                   MOV         #1,R1
    0000285E 313C                   ADD         R3,R1
    00002860 6310                   MOV.B       @R1,R3
    00002862 7601                   ADD         #1,R6
    00002864 2230                   MOV.B       R3,@R2
    00002866              L4377:                            
    00002866 6063                   MOV         R6,R0
    00002868 4000                   SHLL        R0
    0000286A 034D                   MOV.W       @(R0,R4),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  129


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000286C 633D                   EXTU.W      R3,R3
    0000286E 2338                   TST         R3,R3
    00002870 8BEE                   BF          L4378
          EDIT.c  1937      sChar[i]=0;
    00002872 6063                   MOV         R6,R0
    00002874 0574                   MOV.B       R7,@(R0,R5)
          EDIT.c  1938      return(sChar);
          EDIT.c  1939    }
    00002876 000B                   RTS
    00002878 6053                   MOV         R5,R0
          EDIT.c  1940    
          EDIT.c  1941    // ----------------------------------------------------------------
          EDIT.c  1942    // Char string -> Fontcharacter string
          EDIT.c  1943    FONTCHARACTER *Char2Font(char *sChar, FONTCHARACTER *sFont)
    0000287A              _Char2Font:                      ; function: Char2Font
                                                           ; frame size=0
          EDIT.c  1944    {
          EDIT.c  1945      int i=0;
          EDIT.c  1946      for(i=0;sChar[i]!=0;i++) sFont[i]=sChar[i];
    0000287A E700                   MOV         #0,R7
    0000287C A007                   BRA         L4380
    0000287E 6673                   MOV         R7,R6
    00002880              L4381:                            
    00002880 6363                   MOV         R6,R3
    00002882 4300                   SHLL        R3
    00002884 335C                   ADD         R5,R3
    00002886 6063                   MOV         R6,R0
    00002888 024C                   MOV.B       @(R0,R4),R2
    0000288A 7601                   ADD         #1,R6
    0000288C 2321                   MOV.W       R2,@R3
    0000288E              L4380:                            
    0000288E 6063                   MOV         R6,R0
    00002890 034C                   MOV.B       @(R0,R4),R3
    00002892 2338                   TST         R3,R3
    00002894 8BF4                   BF          L4381
          EDIT.c  1947      sFont[i]=0;
    00002896 6063                   MOV         R6,R0
    00002898 4000                   SHLL        R0
    0000289A 0575                   MOV.W       R7,@(R0,R5)
          EDIT.c  1948      return(sFont);
          EDIT.c  1949    }
    0000289C 000B                   RTS
    0000289E 6053                   MOV         R5,R0
          EDIT.c  1950    
          EDIT.c  1951    // ----------------------------------------------------------------
          EDIT.c  1952    // File path
          EDIT.c  1953    FONTCHARACTER *FilePath(char *sRoot,char *sFolder,
    000028A0              _FilePath:                       ; function: FilePath
                                                           ; frame size=96
    000028A0 2FE6                   MOV.L       R14,@-R15
    000028A2 2FD6                   MOV.L       R13,@-R15
    000028A4 2FC6                   MOV.L       R12,@-R15
    000028A6 6D53                   MOV         R5,R13
          EDIT.c  1954                            char *sFile,FONTCHARACTER *sFont)
          EDIT.c  1955    {                        
          EDIT.c  1956      //Variables
          EDIT.c  1957      char sPath[50];




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  130


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  1958      
          EDIT.c  1959      //File path without folder
          EDIT.c  1960      if(strlen(sFolder)==0)
    000028A8 D31A                   MOV.L       L5123+8,R3 ; _strlen
    000028AA 6C43                   MOV         R4,R12
    000028AC 2FB6                   MOV.L       R11,@-R15
    000028AE 2FA6                   MOV.L       R10,@-R15
    000028B0 4F22                   STS.L       PR,@-R15
    000028B2 6A63                   MOV         R6,R10
    000028B4 DB16                   MOV.L       L5123+4,R11; _sprintf
    000028B6 7FC8                   ADD         #-56,R15
    000028B8 2F72                   MOV.L       R7,@R15
    000028BA 6EF3                   MOV         R15,R14
    000028BC 7E04                   ADD         #4,R14
    000028BE 430B                   JSR         @R3
    000028C0 64D3                   MOV         R13,R4
    000028C2 2008                   TST         R0,R0
    000028C4 8B01                   BF          L4383
          EDIT.c  1961        sprintf(sPath,"\\\\%s\\%s",sRoot,sFile);
    000028C6 A006                   BRA         L4932
    000028C8 2FA6                   MOV.L       R10,@-R15
    000028CA              L4383:                            
          EDIT.c  1962      
          EDIT.c  1963      //File path without file
          EDIT.c  1964      else if(strlen(sFile)==0)
    000028CA D312                   MOV.L       L5123+8,R3 ; _strlen
    000028CC 430B                   JSR         @R3
    000028CE 64A3                   MOV         R10,R4
    000028D0 2008                   TST         R0,R0
    000028D2 8B07                   BF          L4385
          EDIT.c  1965        sprintf(sPath,"\\\\%s\\%s",sRoot,sFolder);
    000028D4 2FD6                   MOV.L       R13,@-R15
    000028D6              L4932:                            
    000028D6 2FC6                   MOV.L       R12,@-R15
    000028D8 D30F                   MOV.L       L5123+12,R3; L891
    000028DA 2F36                   MOV.L       R3,@-R15
    000028DC 4B0B                   JSR         @R11
    000028DE 64E3                   MOV         R14,R4
    000028E0 A008                   BRA         L4384
    000028E2 7F0C                   ADD         #12,R15
    000028E4              L4385:                            
          EDIT.c  1966      
          EDIT.c  1967      //File path with file & folder
          EDIT.c  1968      else
          EDIT.c  1969        sprintf(sPath,"\\\\%s\\%s\\%s",sRoot,sFolder,sFile);
    000028E4 2FA6                   MOV.L       R10,@-R15
    000028E6 2FD6                   MOV.L       R13,@-R15
    000028E8 2FC6                   MOV.L       R12,@-R15
    000028EA D30C                   MOV.L       L5123+16,R3; L892
    000028EC 2F36                   MOV.L       R3,@-R15
    000028EE 4B0B                   JSR         @R11
    000028F0 64E3                   MOV         R14,R4
    000028F2 7F10                   ADD         #16,R15
    000028F4              L4384:                            
          EDIT.c  1970      
          EDIT.c  1971      //Convert to FONTCHARACTER
          EDIT.c  1972      Char2Font(sPath,sFont);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  131


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000028F4 65F2                   MOV.L       @R15,R5
    000028F6 BFC0                   BSR         _Char2Font
    000028F8 64E3                   MOV         R14,R4
          EDIT.c  1973      return(sFont);
    000028FA 60F2                   MOV.L       @R15,R0
          EDIT.c  1974    }
    000028FC 7F38                   ADD         #56,R15
    000028FE 4F26                   LDS.L       @R15+,PR
    00002900 6AF6                   MOV.L       @R15+,R10
    00002902 6BF6                   MOV.L       @R15+,R11
    00002904 6CF6                   MOV.L       @R15+,R12
    00002906 6DF6                   MOV.L       @R15+,R13
    00002908 000B                   RTS
    0000290A 6EF6                   MOV.L       @R15+,R14
    0000290C              L5123:                            
    0000290C <00000000>             .DATA.L     __slow_strcpy
    00002910 <00000000>             .DATA.L     _sprintf
    00002914 <00000000>             .DATA.L     _strlen
    00002918 <00000000>             .DATA.L     L891
    0000291C <00000000>             .DATA.L     L892
          EDIT.c  1975    
          EDIT.c  1976    // ----------------------------------------------------------------
          EDIT.c  1977    // Insert file into directory with sorting
          EDIT.c  1978    void AppendDirEntry(int iFiles,struct Direc *sDirec,struct Direc *sDirec0)
    00002920              _AppendDirEntry:                 ; function: AppendDirEntry
                                                           ; frame size=272
                                                           ; used runtime library name:
                                                           ; __slow_strcpy, __quick_strcmp1
    00002920 2FE6                   MOV.L       R14,@-R15
          EDIT.c  1979    {
          EDIT.c  1980      //Variables
          EDIT.c  1981      int i,j;
          EDIT.c  1982      char sName[50];
          EDIT.c  1983      char sName0[50];
          EDIT.c  1984      char sSort[50];
          EDIT.c  1985      char sSort0[50];
          EDIT.c  1986      
          EDIT.c  1987      //Insert new record
          EDIT.c  1988      if(iFiles==0)
    00002922 2448                   TST         R4,R4
    00002924 908B                   MOV.W       L5124,R0   ; H'FF28
    00002926 2FD6                   MOV.L       R13,@-R15
    00002928 2FC6                   MOV.L       R12,@-R15
    0000292A 2FB6                   MOV.L       R11,@-R15
    0000292C 2FA6                   MOV.L       R10,@-R15
    0000292E 6A53                   MOV         R5,R10
    00002930 2F96                   MOV.L       R9,@-R15
    00002932 2F86                   MOV.L       R8,@-R15
    00002934 4F22                   STS.L       PR,@-R15
    00002936 3F0C                   ADD         R0,R15
    00002938 8F07                   BF/S        L4388
    0000293A 2F62                   MOV.L       R6,@R15
          EDIT.c  1989      {
          EDIT.c  1990        memcpy(&sDirec[0],sDirec0,sizeof(struct Direc));
    0000293C 65F2                   MOV.L       @R15,R5
    0000293E E618                   MOV         #24,R6
    00002940 D340                   MOV.L       L5124+6,R3 ; _memcpy




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  132


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002942 430B                   JSR         @R3
    00002944 64A3                   MOV         R10,R4
    00002946 A095                   BRA         L4389
    00002948 0009                   NOP
    0000294A              L4388:                            
          EDIT.c  1991      }
          EDIT.c  1992      else
          EDIT.c  1993      {
          EDIT.c  1994        i=iFiles-1;
    0000294A 6E43                   MOV         R4,R14
    0000294C D93E                   MOV.L       L5124+10,R9; __ctype
    0000294E EB02                   MOV         #2,R11
    00002950 9D76                   MOV.W       L5124+2,R13; H'00A4
    00002952 E800                   MOV         #0,R8
    00002954 7EFF                   ADD         #-1,R14
    00002956 6CF3                   MOV         R15,R12
    00002958 7C70                   ADD         #112,R12
    0000295A 3DFC                   ADD         R15,R13
          EDIT.c  1995        do{
    0000295C              L4390:                            
          EDIT.c  1996          if(i<0) break;
    0000295C 4E11                   CMP/PZ      R14
    0000295E 8B7D                   BF          L4392
          EDIT.c  1997          strcpy(sName,sDirec[i].sCName);
    00002960 D23A                   MOV.L       L5124+14,R2; __slow_strcpy
    00002962 63E3                   MOV         R14,R3
    00002964 60E3                   MOV         R14,R0
    00002966 4300                   SHLL        R3
    00002968 330C                   ADD         R0,R3
    0000296A 4308                   SHLL2       R3
    0000296C 9068                   MOV.W       L5124+2,R0 ; H'00A4
    0000296E 4300                   SHLL        R3
    00002970 33AC                   ADD         R10,R3
    00002972 6133                   MOV         R3,R1
    00002974 420B                   JSR         @R2
    00002976 30FC                   ADD         R15,R0
          EDIT.c  1998          strcpy(sName0,sDirec0->sCName);
    00002978 61F2                   MOV.L       @R15,R1
    0000297A 60F3                   MOV         R15,R0
    0000297C D233                   MOV.L       L5124+14,R2; __slow_strcpy
    0000297E 420B                   JSR         @R2
    00002980 7070                   ADD         #112,R0
          EDIT.c  1999          for(j=0;sName[j]!=0;j++) sName[j]=toupper(sName[j]);
    00002982 A00E                   BRA         L4393
    00002984 6483                   MOV         R8,R4
    00002986              L4394:                            
    00002986 6643                   MOV         R4,R6
    00002988 36DC                   ADD         R13,R6
    0000298A 6560                   MOV.B       @R6,R5
    0000298C 605C                   EXTU.B      R5,R0
    0000298E 039C                   MOV.B       @(R0,R9),R3
    00002990 633C                   EXTU.B      R3,R3
    00002992 23B8                   TST         R11,R3
    00002994 8902                   BT          L4395
    00002996 6253                   MOV         R5,R2
    00002998 A001                   BRA         L4396
    0000299A 72E0                   ADD         #-32,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  133


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000299C              L4395:                            
    0000299C 6253                   MOV         R5,R2
    0000299E              L4396:                            
    0000299E 7401                   ADD         #1,R4
    000029A0 2620                   MOV.B       R2,@R6
    000029A2              L4393:                            
    000029A2 6043                   MOV         R4,R0
    000029A4 03DC                   MOV.B       @(R0,R13),R3
    000029A6 2338                   TST         R3,R3
    000029A8 8BED                   BF          L4394
          EDIT.c  2000          for(j=0;sName0[j]!=0;j++) sName0[j]=toupper(sName0[j]);
    000029AA A00E                   BRA         L4397
    000029AC 6483                   MOV         R8,R4
    000029AE              L4398:                            
    000029AE 6643                   MOV         R4,R6
    000029B0 36CC                   ADD         R12,R6
    000029B2 6560                   MOV.B       @R6,R5
    000029B4 605C                   EXTU.B      R5,R0
    000029B6 039C                   MOV.B       @(R0,R9),R3
    000029B8 633C                   EXTU.B      R3,R3
    000029BA 23B8                   TST         R11,R3
    000029BC 8902                   BT          L4399
    000029BE 6353                   MOV         R5,R3
    000029C0 A001                   BRA         L4400
    000029C2 73E0                   ADD         #-32,R3
    000029C4              L4399:                            
    000029C4 6353                   MOV         R5,R3
    000029C6              L4400:                            
    000029C6 7401                   ADD         #1,R4
    000029C8 2630                   MOV.B       R3,@R6
    000029CA              L4397:                            
    000029CA 6043                   MOV         R4,R0
    000029CC 03CC                   MOV.B       @(R0,R12),R3
    000029CE 2338                   TST         R3,R3
    000029D0 8BED                   BF          L4398
          EDIT.c  2001          sprintf(sSort ,"%1i%s",sDirec[i].cSort,sName );
    000029D2 62E3                   MOV         R14,R2
    000029D4 2FD6                   MOV.L       R13,@-R15
    000029D6 63E3                   MOV         R14,R3
    000029D8 4200                   SHLL        R2
    000029DA 323C                   ADD         R3,R2
    000029DC D31C                   MOV.L       L5124+18,R3; L906
    000029DE 4208                   SHLL2       R2
    000029E0 4200                   SHLL        R2
    000029E2 32AC                   ADD         R10,R2
    000029E4 E014                   MOV         #20,R0
    000029E6 012C                   MOV.B       @(R0,R2),R1
    000029E8 D21A                   MOV.L       L5124+22,R2; _sprintf
    000029EA 611C                   EXTU.B      R1,R1
    000029EC 2F16                   MOV.L       R1,@-R15
    000029EE 2F36                   MOV.L       R3,@-R15
    000029F0 64F3                   MOV         R15,R4
    000029F2 420B                   JSR         @R2
    000029F4 7448                   ADD         #72,R4
          EDIT.c  2002          sprintf(sSort0,"%1i%s",sDirec0->cSort ,sName0);
    000029F6 E014                   MOV         #20,R0
    000029F8 2FC6                   MOV.L       R12,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  134


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000029FA 53F4                   MOV.L       @(16,R15),R3
    000029FC 023C                   MOV.B       @(R0,R3),R2
    000029FE 622C                   EXTU.B      R2,R2
    00002A00 2F26                   MOV.L       R2,@-R15
    00002A02 D313                   MOV.L       L5124+18,R3; L906
    00002A04 D213                   MOV.L       L5124+22,R2; _sprintf
    00002A06 2F36                   MOV.L       R3,@-R15
    00002A08 64F3                   MOV         R15,R4
    00002A0A 420B                   JSR         @R2
    00002A0C 7420                   ADD         #32,R4
    00002A0E 7F18                   ADD         #24,R15
          EDIT.c  2003          if(strcmp(sSort,sSort0)<=0) break;
    00002A10 D311                   MOV.L       L5124+26,R3; __quick_strcmp1
    00002A12 65F3                   MOV         R15,R5
    00002A14 7508                   ADD         #8,R5
    00002A16 64F3                   MOV         R15,R4
    00002A18 430B                   JSR         @R3
    00002A1A 743C                   ADD         #60,R4
    00002A1C 4015                   CMP/PL      R0
    00002A1E 8B1D                   BF          L4392
          EDIT.c  2004          memcpy(&sDirec[i+1],&sDirec[i],sizeof(struct Direc));
    00002A20 E618                   MOV         #24,R6
    00002A22 65E3                   MOV         R14,R5
    00002A24 63E3                   MOV         R14,R3
    00002A26 4500                   SHLL        R5
    00002A28 353C                   ADD         R3,R5
    00002A2A 4508                   SHLL2       R5
    00002A2C D305                   MOV.L       L5124+6,R3 ; _memcpy
    00002A2E 4500                   SHLL        R5
    00002A30 35AC                   ADD         R10,R5
    00002A32 6453                   MOV         R5,R4
    00002A34 1F51                   MOV.L       R5,@(4,R15)
    00002A36 430B                   JSR         @R3
    00002A38 7418                   ADD         #24,R4
          EDIT.c  2005          i=i-1;
          EDIT.c  2006        }while(1);
    00002A3A AF8F                   BRA         L4390
    00002A3C 7EFF                   ADD         #-1,R14
    00002A3E              L5124:                            
    00002A3E FF28                   .DATA.W     H'FF28
    00002A40 00A4                   .DATA.W     H'00A4
    00002A42 0000                   .DATA.W     0
    00002A44 <00000000>             .DATA.L     _memcpy
    00002A48 <00000000>             .DATA.L     __ctype
    00002A4C <00000000>             .DATA.L     __slow_strcpy
    00002A50 <00000000>             .DATA.L     L906
    00002A54 <00000000>             .DATA.L     _sprintf
    00002A58 <00000000>             .DATA.L     __quick_strcmp1
    00002A5C              L4392:                            
          EDIT.c  2007        memcpy(&sDirec[i+1],sDirec0,sizeof(struct Direc));
    00002A5C 65F2                   MOV.L       @R15,R5
    00002A5E 64E3                   MOV         R14,R4
    00002A60 D248                   MOV.L       L5125+14,R2; _memcpy
    00002A62 E618                   MOV         #24,R6
    00002A64 63E3                   MOV         R14,R3
    00002A66 4400                   SHLL        R4
    00002A68 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  135


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002A6A 4408                   SHLL2       R4
    00002A6C 4400                   SHLL        R4
    00002A6E 34AC                   ADD         R10,R4
    00002A70 420B                   JSR         @R2
    00002A72 7418                   ADD         #24,R4
    00002A74              L4389:                            
          EDIT.c  2008      }
          EDIT.c  2009    
          EDIT.c  2010    }
    00002A74 917F                   MOV.W       L5125,R1   ; H'00D8
    00002A76 3F1C                   ADD         R1,R15
    00002A78 4F26                   LDS.L       @R15+,PR
    00002A7A 68F6                   MOV.L       @R15+,R8
    00002A7C 69F6                   MOV.L       @R15+,R9
    00002A7E 6AF6                   MOV.L       @R15+,R10
    00002A80 6BF6                   MOV.L       @R15+,R11
    00002A82 6CF6                   MOV.L       @R15+,R12
    00002A84 6DF6                   MOV.L       @R15+,R13
    00002A86 000B                   RTS
    00002A88 6EF6                   MOV.L       @R15+,R14
          EDIT.c  2011    
          EDIT.c  2012    // ----------------------------------------------------------------
          EDIT.c  2013    // Read directory
          EDIT.c  2014    void ReadDirectory(char *sRoot, char *sFolder,struct Direc *sDirec, 
    00002A8A              _ReadDirectory:                  ; function: ReadDirectory
                                                           ; frame size=416
                                                           ; used runtime library name:
                                                           ; __slow_strcpy, __quick_strcmp1, __slow_strcmp1
          EDIT.c  2015                       int *iEntries, int iMaxFiles, unsigned char cSort, 
          EDIT.c  2016                       int iFoldersOnly, int iHideSysFiles)
          EDIT.c  2017    {
          EDIT.c  2018      //Variables
          EDIT.c  2019      int i,j;
          EDIT.c  2020      int iFirst;
          EDIT.c  2021      int iDot;
          EDIT.c  2022      int iError;
          EDIT.c  2023      int iHandle;
          EDIT.c  2024      char sFile[MAXPATH];
          EDIT.c  2025      char sFolder0[MAXPATH];
          EDIT.c  2026      FONTCHARACTER sFont[MAXPATH];
          EDIT.c  2027      FONTCHARACTER sName[MAXPATH];
          EDIT.c  2028      struct Direc sDirec0;
          EDIT.c  2029      FILE_INFO sInfo;
          EDIT.c  2030          
          EDIT.c  2031      //Init loop
          EDIT.c  2032      i=(*iEntries);
    00002A8A 6373                   MOV         R7,R3
    00002A8C 2FE6                   MOV.L       R14,@-R15
    00002A8E 2FD6                   MOV.L       R13,@-R15
    00002A90 2FC6                   MOV.L       R12,@-R15
    00002A92 ED00                   MOV         #0,R13
    00002A94 9070                   MOV.W       L5125+2,R0 ; H'FE80
    00002A96 2FB6                   MOV.L       R11,@-R15
    00002A98 2FA6                   MOV.L       R10,@-R15
    00002A9A 2F96                   MOV.L       R9,@-R15
    00002A9C 2F86                   MOV.L       R8,@-R15
          EDIT.c  2033      iFirst=0;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  136


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002A9E 68D3                   MOV         R13,R8
    00002AA0 4F22                   STS.L       PR,@-R15
    00002AA2 3F0C                   ADD         R0,R15
    00002AA4 D938                   MOV.L       L5125+18,R9; L620
    00002AA6 1F41                   MOV.L       R4,@(4,R15)
    00002AA8 1F53                   MOV.L       R5,@(12,R15)
    00002AAA 1F65                   MOV.L       R6,@(20,R15)
    00002AAC 1F74                   MOV.L       R7,@(16,R15)
    00002AAE 6232                   MOV.L       @R3,R2
          EDIT.c  2034      iError=0;
          EDIT.c  2035      FilePath(sRoot,sFolder,"*.*",sFont);
    00002AB0 9763                   MOV.W       L5125+4,R7 ; H'00B4
    00002AB2 1F22                   MOV.L       R2,@(8,R15)
    00002AB4 D635                   MOV.L       L5125+22,R6; L928
    00002AB6 37FC                   ADD         R15,R7
    00002AB8 55F3                   MOV.L       @(12,R15),R5
    00002ABA BEF1                   BSR         _FilePath
    00002ABC 54F1                   MOV.L       @(4,R15),R4
    00002ABE 905D                   MOV.W       L5125+6,R0 ; H'01A0
    00002AC0 02FE                   MOV.L       @(R0,R15),R2
    00002AC2 72FF                   ADD         #-1,R2
    00002AC4 1F26                   MOV.L       R2,@(24,R15)
    00002AC6 905A                   MOV.W       L5125+8,R0 ; H'01AC
    00002AC8 00FE                   MOV.L       @(R0,R15),R0
    00002ACA 2008                   TST         R0,R0
    00002ACC 0029                   MOVT        R0
    00002ACE 1F07                   MOV.L       R0,@(28,R15)
    00002AD0 9056                   MOV.W       L5125+10,R0; H'01A7
    00002AD2 03FC                   MOV.B       @(R0,R15),R3
    00002AD4 7301                   ADD         #1,R3
    00002AD6 E020                   MOV         #32,R0
    00002AD8 0F34                   MOV.B       R3,@(R0,R15)
          EDIT.c  2036      do{
    00002ADA              L4403:                            
          EDIT.c  2037        
          EDIT.c  2038        //Read file (Main Memory)
          EDIT.c  2039        if(strcmp(sRoot,"main")==0)
    00002ADA EE01                   MOV         #1,R14
    00002ADC D32C                   MOV.L       L5125+26,R3; __slow_strcmp1
    00002ADE 6593                   MOV         R9,R5
    00002AE0 430B                   JSR         @R3
    00002AE2 54F1                   MOV.L       @(4,R15),R4
    00002AE4 2008                   TST         R0,R0
    00002AE6 8B37                   BF          L4404
          EDIT.c  2040        {
          EDIT.c  2041          if(iFirst==0)
    00002AE8 2888                   TST         R8,R8
    00002AEA 8B05                   BF          L4405
          EDIT.c  2042          {
          EDIT.c  2043            MainDirectory(FINDSTART,&(sDirec0.sCName),sFolder);
    00002AEC 56F3                   MOV.L       @(12,R15),R6
    00002AEE 65F3                   MOV         R15,R5
    00002AF0 7538                   ADD         #56,R5
    00002AF2 BCB9                   BSR         _MainDirectory
    00002AF4 E406                   MOV         #6,R4
          EDIT.c  2044            iFirst=1;
    00002AF6 68E3                   MOV         R14,R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  137


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002AF8              L4405:                            
          EDIT.c  2045          }
          EDIT.c  2046          iError=MainDirectory(FINDGET,&(sDirec0.sCName),sFolder0);
    00002AF8 9C43                   MOV.W       L5125+12,R12; H'0118
    00002AFA 65F3                   MOV         R15,R5
    00002AFC 3CFC                   ADD         R15,R12
    00002AFE 66C3                   MOV         R12,R6
    00002B00 7538                   ADD         #56,R5
    00002B02 BCB1                   BSR         _MainDirectory
    00002B04 E407                   MOV         #7,R4
    00002B06 6A03                   MOV         R0,R10
          EDIT.c  2047          if(strlen(sDirec0.sCName)==0)
    00002B08 D322                   MOV.L       L5125+30,R3; _strlen
    00002B0A 64F3                   MOV         R15,R4
    00002B0C 430B                   JSR         @R3
    00002B0E 7438                   ADD         #56,R4
    00002B10 2008                   TST         R0,R0
    00002B12 8B0A                   BF          L4406
          EDIT.c  2048          {
          EDIT.c  2049            sDirec0.iType=DT_DIRECTORY;
          EDIT.c  2050            strcpy(sDirec0.sCName,sFolder0);
    00002B14 9135                   MOV.W       L5125+12,R1; H'0118
    00002B16 E046                   MOV         #70,R0
    00002B18 D31F                   MOV.L       L5125+34,R3; __slow_strcpy
    00002B1A 31FC                   ADD         R15,R1
    00002B1C 0FD5                   MOV.W       R13,@(R0,R15)
    00002B1E 60F3                   MOV         R15,R0
    00002B20 430B                   JSR         @R3
    00002B22 7038                   ADD         #56,R0
          EDIT.c  2051            sDirec0.iSize=0;
    00002B24 E048                   MOV         #72,R0
    00002B26 A053                   BRA         L4410
    00002B28 0FD6                   MOV.L       R13,@(R0,R15)
    00002B2A              L4406:                            
          EDIT.c  2052          }
          EDIT.c  2053          else
          EDIT.c  2054          {
          EDIT.c  2055            sDirec0.iType=DT_FILE; 
    00002B2A E046                   MOV         #70,R0
          EDIT.c  2056            iHandle=Bfile_OpenMainMemory(sDirec0.sCName);
    00002B2C DC1B                   MOV.L       L5125+38,R12; _Bfile_OpenMainMemory
    00002B2E 64F3                   MOV         R15,R4
    00002B30 0FE5                   MOV.W       R14,@(R0,R15)
    00002B32 4C0B                   JSR         @R12
    00002B34 7438                   ADD         #56,R4
          EDIT.c  2057            if(iHandle<0) 
    00002B36 4011                   CMP/PZ      R0
    00002B38 8D03                   BT/S        L4408
    00002B3A 2F02                   MOV.L       R0,@R15
          EDIT.c  2058              sDirec0.iSize=0;
    00002B3C E048                   MOV         #72,R0
    00002B3E A006                   BRA         L4409
    00002B40 0FD6                   MOV.L       R13,@(R0,R15)
    00002B42              L4408:                            
          EDIT.c  2059            else
          EDIT.c  2060              sDirec0.iSize=Bfile_GetFileSize(iHandle);
    00002B42 DC17                   MOV.L       L5125+42,R12; _Bfile_GetFileSize




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  138


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002B44 4C0B                   JSR         @R12
    00002B46 6403                   MOV         R0,R4
    00002B48 61F3                   MOV         R15,R1
    00002B4A 7148                   ADD         #72,R1
    00002B4C 2102                   MOV.L       R0,@R1
    00002B4E              L4409:                            
          EDIT.c  2061            Bfile_CloseFile(iHandle);
    00002B4E DC15                   MOV.L       L5125+46,R12; _Bfile_CloseFile
    00002B50 4C0B                   JSR         @R12
    00002B52 64F2                   MOV.L       @R15,R4
    00002B54 A03C                   BRA         L4410
    00002B56 0009                   NOP
    00002B58              L4404:                            
          EDIT.c  2062          }
          EDIT.c  2063        }
          EDIT.c  2064        
          EDIT.c  2065        //Read file (Storage memory & SD Card)
          EDIT.c  2066        else
          EDIT.c  2067        {
          EDIT.c  2068          if(iFirst==0)
    00002B58 6CF3                   MOV         R15,R12
    00002B5A 2888                   TST         R8,R8
    00002B5C 8F26                   BF/S        L4411
    00002B5E 7C50                   ADD         #80,R12
          EDIT.c  2069          {
          EDIT.c  2070            iError=Bfile_FindFirst(sFont,&iHandle,sName,&sInfo);
    00002B60 DB11                   MOV.L       L5125+50,R11; _Bfile_FindFirst
    00002B62 67F3                   MOV         R15,R7
    00002B64 9409                   MOV.W       L5125+4,R4 ; H'00B4
    00002B66 66C3                   MOV         R12,R6
    00002B68 7724                   ADD         #36,R7
    00002B6A 65F3                   MOV         R15,R5
    00002B6C 4B0B                   JSR         @R11
    00002B6E 34FC                   ADD         R15,R4
    00002B70 6A03                   MOV         R0,R10
          EDIT.c  2071            iFirst=1;
    00002B72 A022                   BRA         L4412
    00002B74 68E3                   MOV         R14,R8
    00002B76              L5125:                            
    00002B76 00D8                   .DATA.W     H'00D8
    00002B78 FE80                   .DATA.W     H'FE80
    00002B7A 00B4                   .DATA.W     H'00B4
    00002B7C 01A0                   .DATA.W     H'01A0
    00002B7E 01AC                   .DATA.W     H'01AC
    00002B80 01A7                   .DATA.W     H'01A7
    00002B82 0118                   .DATA.W     H'0118
    00002B84 <00000000>             .DATA.L     _memcpy
    00002B88 <00000000>             .DATA.L     L620
    00002B8C <00000000>             .DATA.L     L928
    00002B90 <00000000>             .DATA.L     __slow_strcmp1
    00002B94 <00000000>             .DATA.L     _strlen
    00002B98 <00000000>             .DATA.L     __slow_strcpy
    00002B9C <00000000>             .DATA.L     _Bfile_OpenMainMemory
    00002BA0 <00000000>             .DATA.L     _Bfile_GetFileSize
    00002BA4 <00000000>             .DATA.L     _Bfile_CloseFile
    00002BA8 <00000000>             .DATA.L     _Bfile_FindFirst
    00002BAC              L4411:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  139


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2072          }
          EDIT.c  2073           else     
          EDIT.c  2074          {
          EDIT.c  2075            iError=Bfile_FindNext(iHandle,sName,&sInfo);
    00002BAC DB33                   MOV.L       L5126+2,R11; _Bfile_FindNext
    00002BAE 66F3                   MOV         R15,R6
    00002BB0 7624                   ADD         #36,R6
    00002BB2 65C3                   MOV         R12,R5
    00002BB4 4B0B                   JSR         @R11
    00002BB6 64F2                   MOV.L       @R15,R4
    00002BB8 6A03                   MOV         R0,R10
    00002BBA              L4412:                            
          EDIT.c  2076          }
          EDIT.c  2077          Font2Char(sName,sDirec0.sCName);
    00002BBA 65F3                   MOV         R15,R5
    00002BBC 7538                   ADD         #56,R5
    00002BBE BE44                   BSR         _Font2Char
    00002BC0 64C3                   MOV         R12,R4
          EDIT.c  2078          sDirec0.iType=sInfo.type; 
    00002BC2 E026                   MOV         #38,R0
    00002BC4 02FD                   MOV.W       @(R0,R15),R2
    00002BC6 E046                   MOV         #70,R0
    00002BC8 0F25                   MOV.W       R2,@(R0,R15)
          EDIT.c  2079          sDirec0.iSize=sInfo.dsize;
    00002BCA E048                   MOV         #72,R0
    00002BCC 53FB                   MOV.L       @(44,R15),R3
    00002BCE 0F36                   MOV.L       R3,@(R0,R15)
    00002BD0              L4410:                            
          EDIT.c  2080        }
          EDIT.c  2081        
          EDIT.c  2082        //Append to directory
          EDIT.c  2083        if(iError==0 && i<iMaxFiles-1)
    00002BD0 2AA8                   TST         R10,R10
    00002BD2 8901                   BT          L5127
    00002BD4 A0B8                   BRA         L4413
    00002BD6 0009                   NOP
    00002BD8              L5127:                            
    00002BD8 51F6                   MOV.L       @(24,R15),R1
    00002BDA 52F2                   MOV.L       @(8,R15),R2
    00002BDC 3213                   CMP/GE      R1,R2
    00002BDE 8B01                   BF          L5128
    00002BE0 A0B2                   BRA         L4413
    00002BE2 0009                   NOP
    00002BE4              L5128:                            
          EDIT.c  2084        {
          EDIT.c  2085          
          EDIT.c  2086          //Detect system files
          EDIT.c  2087          sDirec0.cSystem=0;
          EDIT.c  2088          strcpy(sFile,sDirec0.sCName);
    00002BE4 D326                   MOV.L       L5126+6,R3 ; __slow_strcpy
    00002BE6 E04D                   MOV         #77,R0
    00002BE8 0FD4                   MOV.B       R13,@(R0,R15)
    00002BEA 61F3                   MOV         R15,R1
    00002BEC 9045                   MOV.W       L5126,R0   ; H'014C
    00002BEE 7138                   ADD         #56,R1
    00002BF0 430B                   JSR         @R3
    00002BF2 30FC                   ADD         R15,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  140


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2089          for(j=0,iDot=0;j<strlen(sFile);j++){ if(sFile[j]=='.') iDot=j; }
    00002BF4 6BD3                   MOV         R13,R11
    00002BF6 A008                   BRA         L4414
    00002BF8 6CD3                   MOV         R13,R12
    00002BFA              L4415:                            
    00002BFA 933E                   MOV.W       L5126,R3   ; H'014C
    00002BFC 33FC                   ADD         R15,R3
    00002BFE 33BC                   ADD         R11,R3
    00002C00 6030                   MOV.B       @R3,R0
    00002C02 882E                   CMP/EQ      #46,R0
    00002C04 8B00                   BF          L4416
    00002C06 6CB3                   MOV         R11,R12
    00002C08              L4416:                            
    00002C08 7B01                   ADD         #1,R11
    00002C0A              L4414:                            
    00002C0A 9436                   MOV.W       L5126,R4   ; H'014C
    00002C0C D21D                   MOV.L       L5126+10,R2; _strlen
    00002C0E 420B                   JSR         @R2
    00002C10 34FC                   ADD         R15,R4
    00002C12 3B02                   CMP/HS      R0,R11
    00002C14 8BF1                   BF          L4415
          EDIT.c  2090          if(sDirec0.iType!=DT_FILE && sDirec0.iType!=DT_DIRECTORY) sDirec0.cSystem=1;
    00002C16 E046                   MOV         #70,R0
    00002C18 04FD                   MOV.W       @(R0,R15),R4
    00002C1A 644D                   EXTU.W      R4,R4
    00002C1C 6043                   MOV         R4,R0
    00002C1E 8801                   CMP/EQ      #1,R0
    00002C20 8903                   BT          L4417
    00002C22 2448                   TST         R4,R4
    00002C24 8901                   BT          L4417
    00002C26 E04D                   MOV         #77,R0
    00002C28 0FE4                   MOV.B       R14,@(R0,R15)
    00002C2A              L4417:                            
          EDIT.c  2091          if(iDot!=0 && toupper(sFile[iDot+1])=='G' && tolower(sFile[iDot+1])=='1') sDirec0.cSystem=1;
    00002C2A 2CC8                   TST         R12,R12
    00002C2C 8936                   BT          L4418
    00002C2E 9024                   MOV.W       L5126,R0   ; H'014C
    00002C30 D115                   MOV.L       L5126+14,R1; __ctype
    00002C32 30FC                   ADD         R15,R0
    00002C34 30CC                   ADD         R12,R0
    00002C36 8401                   MOV.B       @(1,R0),R0
    00002C38 600C                   EXTU.B      R0,R0
    00002C3A 001C                   MOV.B       @(R0,R1),R0
    00002C3C 600C                   EXTU.B      R0,R0
    00002C3E C802                   TST         #2,R0
    00002C40 8905                   BT          L4419
    00002C42 901A                   MOV.W       L5126,R0   ; H'014C
    00002C44 30FC                   ADD         R15,R0
    00002C46 30CC                   ADD         R12,R0
    00002C48 8401                   MOV.B       @(1,R0),R0
    00002C4A A004                   BRA         L4421
    00002C4C 70E0                   ADD         #-32,R0
    00002C4E              L4419:                            
    00002C4E 9014                   MOV.W       L5126,R0   ; H'014C
    00002C50 30FC                   ADD         R15,R0
    00002C52 30CC                   ADD         R12,R0
    00002C54 8401                   MOV.B       @(1,R0),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  141


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002C56              L4421:                            
    00002C56 8847                   CMP/EQ      #71,R0
    00002C58 8B20                   BF          L4418
    00002C5A 900E                   MOV.W       L5126,R0   ; H'014C
    00002C5C D10A                   MOV.L       L5126+14,R1; __ctype
    00002C5E 30FC                   ADD         R15,R0
    00002C60 30CC                   ADD         R12,R0
    00002C62 8401                   MOV.B       @(1,R0),R0
    00002C64 600C                   EXTU.B      R0,R0
    00002C66 001C                   MOV.B       @(R0,R1),R0
    00002C68 600C                   EXTU.B      R0,R0
    00002C6A C801                   TST         #1,R0
    00002C6C 890E                   BT          L4420
    00002C6E 9004                   MOV.W       L5126,R0   ; H'014C
    00002C70 30FC                   ADD         R15,R0
    00002C72 30CC                   ADD         R12,R0
    00002C74 8401                   MOV.B       @(1,R0),R0
    00002C76 A00D                   BRA         L4422
    00002C78 7020                   ADD         #32,R0
    00002C7A              L5126:                            
    00002C7A 014C                   .DATA.W     H'014C
    00002C7C <00000000>             .DATA.L     _Bfile_FindNext
    00002C80 <00000000>             .DATA.L     __slow_strcpy
    00002C84 <00000000>             .DATA.L     _strlen
    00002C88 <00000000>             .DATA.L     __ctype
    00002C8C              L4420:                            
    00002C8C 9077                   MOV.W       L5129,R0   ; H'014C
    00002C8E 30FC                   ADD         R15,R0
    00002C90 30CC                   ADD         R12,R0
    00002C92 8401                   MOV.B       @(1,R0),R0
    00002C94              L4422:                            
    00002C94 8831                   CMP/EQ      #49,R0
    00002C96 8B01                   BF          L4418
    00002C98 E04D                   MOV         #77,R0
    00002C9A 0FE4                   MOV.B       R14,@(R0,R15)
    00002C9C              L4418:                            
          EDIT.c  2092          if(strcmp(sRoot,"fls0")==0 && strcmp(sFile,"EACTWORK.tmp")==0) sDirec0.cSystem=1;
    00002C9C DC3A                   MOV.L       L5129+10,R12; L813
    00002C9E 65C3                   MOV         R12,R5
    00002CA0 D33A                   MOV.L       L5129+14,R3; __slow_strcmp1
    00002CA2 430B                   JSR         @R3
    00002CA4 54F1                   MOV.L       @(4,R15),R4
    00002CA6 2008                   TST         R0,R0
    00002CA8 8B08                   BF          L4423
    00002CAA D539                   MOV.L       L5129+18,R5; L939
    00002CAC 9467                   MOV.W       L5129,R4   ; H'014C
    00002CAE D339                   MOV.L       L5129+22,R3; __quick_strcmp1
    00002CB0 430B                   JSR         @R3
    00002CB2 34FC                   ADD         R15,R4
    00002CB4 2008                   TST         R0,R0
    00002CB6 8B01                   BF          L4423
    00002CB8 E04D                   MOV         #77,R0
    00002CBA 0FE4                   MOV.B       R14,@(R0,R15)
    00002CBC              L4423:                            
          EDIT.c  2093          if(strcmp(sRoot,"main")==0 && strcmp(sFile,CONFIGFILE)==0) sDirec0.cSystem=1;
    00002CBC D333                   MOV.L       L5129+14,R3; __slow_strcmp1
    00002CBE 6593                   MOV         R9,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  142


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002CC0 430B                   JSR         @R3
    00002CC2 54F1                   MOV.L       @(4,R15),R4
    00002CC4 2008                   TST         R0,R0
    00002CC6 8B08                   BF          L4424
    00002CC8 D533                   MOV.L       L5129+26,R5; L851
    00002CCA 9458                   MOV.W       L5129,R4   ; H'014C
    00002CCC D331                   MOV.L       L5129+22,R3; __quick_strcmp1
    00002CCE 430B                   JSR         @R3
    00002CD0 34FC                   ADD         R15,R4
    00002CD2 2008                   TST         R0,R0
    00002CD4 8B01                   BF          L4424
    00002CD6 E04D                   MOV         #77,R0
    00002CD8 0FE4                   MOV.B       R14,@(R0,R15)
    00002CDA              L4424:                            
          EDIT.c  2094          if(strcmp(sRoot,"main")==0 && strcmp(sFile,MAINDIRFILE)==0) sDirec0.cSystem=1;
    00002CDA 6593                   MOV         R9,R5
    00002CDC D32B                   MOV.L       L5129+14,R3; __slow_strcmp1
    00002CDE 430B                   JSR         @R3
    00002CE0 54F1                   MOV.L       @(4,R15),R4
    00002CE2 2008                   TST         R0,R0
    00002CE4 8B08                   BF          L4425
    00002CE6 D52D                   MOV.L       L5129+30,R5; L848
    00002CE8 9449                   MOV.W       L5129,R4   ; H'014C
    00002CEA D32A                   MOV.L       L5129+22,R3; __quick_strcmp1
    00002CEC 430B                   JSR         @R3
    00002CEE 34FC                   ADD         R15,R4
    00002CF0 2008                   TST         R0,R0
    00002CF2 8B01                   BF          L4425
    00002CF4 E04D                   MOV         #77,R0
    00002CF6 0FE4                   MOV.B       R14,@(R0,R15)
    00002CF8              L4425:                            
          EDIT.c  2095          
          EDIT.c  2096          //Append entries
          EDIT.c  2097          if(iFoldersOnly==0)
    00002CF8 9042                   MOV.W       L5129+2,R0 ; H'01A8
    00002CFA 03FE                   MOV.L       @(R0,R15),R3
    00002CFC 2338                   TST         R3,R3
    00002CFE 8B13                   BF          L4426
          EDIT.c  2098          {
          EDIT.c  2099            if(sDirec0.iType==DT_DIRECTORY)
    00002D00 E046                   MOV         #70,R0
    00002D02 03FD                   MOV.W       @(R0,R15),R3
    00002D04 2338                   TST         R3,R3
    00002D06 8913                   BT          L1693
          EDIT.c  2100            {
          EDIT.c  2101              sDirec0.cSort=cSort;
          EDIT.c  2102              AppendDirEntry(i,sDirec,&sDirec0);
          EDIT.c  2103              i++;
          EDIT.c  2104            }
          EDIT.c  2105            else
          EDIT.c  2106            {
          EDIT.c  2107              if(iHideSysFiles==0 || (iHideSysFiles==1 && sDirec0.cSystem==0))
    00002D08 52F7                   MOV.L       @(28,R15),R2
    00002D0A 2228                   TST         R2,R2
    00002D0C 8B07                   BF          L4430
    00002D0E 9038                   MOV.W       L5129+4,R0 ; H'01AC
    00002D10 00FE                   MOV.L       @(R0,R15),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  143


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002D12 8801                   CMP/EQ      #1,R0
    00002D14 8B18                   BF          L4413
    00002D16 E04D                   MOV         #77,R0
    00002D18 02FC                   MOV.B       @(R0,R15),R2
    00002D1A 2228                   TST         R2,R2
    00002D1C 8B14                   BF          L4413
    00002D1E              L4430:                            
          EDIT.c  2108              {
          EDIT.c  2109                sDirec0.cSort=cSort+1;
    00002D1E E020                   MOV         #32,R0
    00002D20 01FC                   MOV.B       @(R0,R15),R1
    00002D22 E04C                   MOV         #76,R0
    00002D24 A008                   BRA         L1694
    00002D26 0F14                   MOV.B       R1,@(R0,R15)
    00002D28              L4426:                            
          EDIT.c  2110                AppendDirEntry(i,sDirec,&sDirec0);
          EDIT.c  2111                i++;
          EDIT.c  2112              }
          EDIT.c  2113            }
          EDIT.c  2114          }
          EDIT.c  2115          else if(sDirec0.iType==DT_DIRECTORY)
    00002D28 E046                   MOV         #70,R0
    00002D2A 03FD                   MOV.W       @(R0,R15),R3
    00002D2C 2338                   TST         R3,R3
    00002D2E 8B0B                   BF          L4413
    00002D30              L1693:
          EDIT.c  2116          {
          EDIT.c  2117            sDirec0.cSort=cSort;
    00002D30 9028                   MOV.W       L5129+6,R0 ; H'01A7
    00002D32 01FC                   MOV.B       @(R0,R15),R1
    00002D34 E04C                   MOV         #76,R0
    00002D36 0F14                   MOV.B       R1,@(R0,R15)
    00002D38              L1694:
          EDIT.c  2118            AppendDirEntry(i,sDirec,&sDirec0);
    00002D38 55F5                   MOV.L       @(20,R15),R5
    00002D3A 66F3                   MOV         R15,R6
    00002D3C 7638                   ADD         #56,R6
    00002D3E BDEF                   BSR         _AppendDirEntry
    00002D40 54F2                   MOV.L       @(8,R15),R4
          EDIT.c  2119            i++;
    00002D42 52F2                   MOV.L       @(8,R15),R2
    00002D44 7201                   ADD         #1,R2
    00002D46 1F22                   MOV.L       R2,@(8,R15)
    00002D48              L4413:                            
          EDIT.c  2120          }
          EDIT.c  2121        
          EDIT.c  2122        }
          EDIT.c  2123      
          EDIT.c  2124      }while(iError==0);
    00002D48 2AA8                   TST         R10,R10
    00002D4A 8B01                   BF          L5130
    00002D4C AEC5                   BRA         L4403
    00002D4E 0009                   NOP
    00002D50              L5130:                            
          EDIT.c  2125      if(strcmp("main",sFolder)!=0) Bfile_FindClose(iHandle);
    00002D50 55F3                   MOV.L       @(12,R15),R5
    00002D52 D30E                   MOV.L       L5129+14,R3; __slow_strcmp1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  144


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002D54 430B                   JSR         @R3
    00002D56 6493                   MOV         R9,R4
    00002D58 2008                   TST         R0,R0
    00002D5A 8902                   BT          L4433
    00002D5C D310                   MOV.L       L5129+34,R3; _Bfile_FindClose
    00002D5E 430B                   JSR         @R3
    00002D60 64F2                   MOV.L       @R15,R4
    00002D62              L4433:                            
          EDIT.c  2126      *iEntries=i;
    00002D62 52F4                   MOV.L       @(16,R15),R2
    00002D64 53F2                   MOV.L       @(8,R15),R3
    00002D66 2232                   MOV.L       R3,@R2
          EDIT.c  2127      
          EDIT.c  2128    }
    00002D68 910D                   MOV.W       L5129+8,R1 ; H'0180
    00002D6A 3F1C                   ADD         R1,R15
    00002D6C 4F26                   LDS.L       @R15+,PR
    00002D6E 68F6                   MOV.L       @R15+,R8
    00002D70 69F6                   MOV.L       @R15+,R9
    00002D72 6AF6                   MOV.L       @R15+,R10
    00002D74 6BF6                   MOV.L       @R15+,R11
    00002D76 6CF6                   MOV.L       @R15+,R12
    00002D78 6DF6                   MOV.L       @R15+,R13
    00002D7A 000B                   RTS
    00002D7C 6EF6                   MOV.L       @R15+,R14
    00002D7E              L5129:                            
    00002D7E 014C                   .DATA.W     H'014C
    00002D80 01A8                   .DATA.W     H'01A8
    00002D82 01AC                   .DATA.W     H'01AC
    00002D84 01A7                   .DATA.W     H'01A7
    00002D86 0180                   .DATA.W     H'0180
    00002D88 <00000000>             .DATA.L     L813
    00002D8C <00000000>             .DATA.L     __slow_strcmp1
    00002D90 <00000000>             .DATA.L     L939
    00002D94 <00000000>             .DATA.L     __quick_strcmp1
    00002D98 <00000000>             .DATA.L     L851
    00002D9C <00000000>             .DATA.L     L848
    00002DA0 <00000000>             .DATA.L     _Bfile_FindClose
          EDIT.c  2129    
          EDIT.c  2130    // ----------------------------------------------------------------
          EDIT.c  2131    // File explorer
          EDIT.c  2132    int Explorer(int iMode,char *sRoot, char *sFolder, 
    00002DA4              _Explorer:                       ; function: Explorer
                                                           ; frame size=316
                                                           ; used runtime library name:
                                                           ; __slow_strcpy, __quick_strcmp1, __slow_strcmp1
    00002DA4 4F22                   STS.L       PR,@-R15
    00002DA6 9059                   MOV.W       L5131,R0   ; H'FED8
    00002DA8 9259                   MOV.W       L5131+2,R2 ; H'0124
    00002DAA 3F0C                   ADD         R0,R15
    00002DAC 9158                   MOV.W       L5131+4,R1 ; H'0120
    00002DAE 32FC                   ADD         R15,R2
          EDIT.c  2133                 char *sFile,struct Config *sConfig,int *iNew)
          EDIT.c  2134    {
          EDIT.c  2135      
          EDIT.c  2136      //Variables
          EDIT.c  2137      int i;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  145


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2138      int iError;
          EDIT.c  2139      int iExit;
          EDIT.c  2140      int iFiles;
          EDIT.c  2141      int iBytes;
          EDIT.c  2142      int iReadFiles=1;
    00002DB0 9059                   MOV.W       L5131+10,R0; H'0100
    00002DB2 31FC                   ADD         R15,R1
    00002DB4 2242                   MOV.L       R4,@R2
    00002DB6 2152                   MOV.L       R5,@R1
    00002DB8 9253                   MOV.W       L5131+6,R2 ; H'011C
    00002DBA 32FC                   ADD         R15,R2
    00002DBC 2262                   MOV.L       R6,@R2
    00002DBE E201                   MOV         #1,R2
    00002DC0 9150                   MOV.W       L5131+8,R1 ; H'0118
          EDIT.c  2143      int iRefresh=1;
    00002DC2 6323                   MOV         R2,R3
    00002DC4 31FC                   ADD         R15,R1
    00002DC6 2172                   MOV.L       R7,@R1
    00002DC8 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2144      int iAnswer;
          EDIT.c  2145      char sStr[50];
          EDIT.c  2146      int iStart=0;
    00002DCA E200                   MOV         #0,R2
    00002DCC 904C                   MOV.W       L5131+12,R0; H'00FC
    00002DCE 0F36                   MOV.L       R3,@(R0,R15)
    00002DD0 904B                   MOV.W       L5131+14,R0; H'00C0
          EDIT.c  2147      int iRow=0;
    00002DD2 6323                   MOV         R2,R3
    00002DD4 0F26                   MOV.L       R2,@(R0,R15)
    00002DD6 9049                   MOV.W       L5131+16,R0; H'00BC
    00002DD8 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2148      int iARow=0;
          EDIT.c  2149      int iCode;
          EDIT.c  2150      int iSDPresent;
          EDIT.c  2151      int iLines=5;
    00002DDA E305                   MOV         #5,R3
    00002DDC 9047                   MOV.W       L5131+18,R0; H'00B8
    00002DDE 0F26                   MOV.L       R2,@(R0,R15)
    00002DE0 9046                   MOV.W       L5131+20,R0; H'00AC
          EDIT.c  2152      unsigned int iKey;
          EDIT.c  2153      int iHandle;
          EDIT.c  2154      char sRootAux[5];     
          EDIT.c  2155      char sFolderAux[MAXFNAME];
          EDIT.c  2156      char sFileAux[MAXFNAME];  
          EDIT.c  2157      FONTCHARACTER sFont[MAXPATH];
          EDIT.c  2158      struct Direc sDirec0;
          EDIT.c  2159      
          EDIT.c  2160      //Application mode
          EDIT.c  2161      _iAppMode=EXPLORER;
    00002DE2 E202                   MOV         #2,R2
    00002DE4 D124                   MOV.L       L5131+28,R1; __iAppMode
    00002DE6 0F36                   MOV.L       R3,@(R0,R15)
    00002DE8 2122                   MOV.L       R2,@R1
          EDIT.c  2162              
          EDIT.c  2163      //Hide keyboard status
          EDIT.c  2164      KeyboardStatusHide(1);
    00002DEA D324                   MOV.L       L5131+32,R3; _KeyboardStatusHide




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  146


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002DEC 430B                   JSR         @R3
    00002DEE E401                   MOV         #1,R4
          EDIT.c  2165      
          EDIT.c  2166      //Detect SD Card
          EDIT.c  2167      if(sConfig->iTrySD==0)
    00002DF0 903F                   MOV.W       L5131+22,R0; H'012C
    00002DF2 02FE                   MOV.L       @(R0,R15),R2
    00002DF4 5322                   MOV.L       @(8,R2),R3
    00002DF6 2338                   TST         R3,R3
    00002DF8 8B03                   BF          L4434
          EDIT.c  2168        iSDPresent=0;
    00002DFA E300                   MOV         #0,R3
    00002DFC 903A                   MOV.W       L5131+24,R0; H'00B0
    00002DFE A006                   BRA         L4435
    00002E00 0F36                   MOV.L       R3,@(R0,R15)
    00002E02              L4434:                            
          EDIT.c  2169      else
          EDIT.c  2170        iSDPresent=SDCardPresent();
    00002E02 D11F                   MOV.L       L5131+36,R1; _SDCardPresent
    00002E04 410B                   JSR         @R1
    00002E06 0009                   NOP
    00002E08 9134                   MOV.W       L5131+24,R1; H'00B0
    00002E0A 31FC                   ADD         R15,R1
    00002E0C 2102                   MOV.L       R0,@R1
    00002E0E              L4435:                            
          EDIT.c  2171        
          EDIT.c  2172      //Modify menus
          EDIT.c  2173      if(iSDPresent==0)
    00002E0E 9031                   MOV.W       L5131+24,R0; H'00B0
    00002E10 03FE                   MOV.L       @(R0,R15),R3
    00002E12 2338                   TST         R3,R3
    00002E14 8B12                   BF          L4436
          EDIT.c  2174      {
          EDIT.c  2175        MenuDisableNode(MENUBARROOT,5);
    00002E16 E505                   MOV         #5,R5
    00002E18 D31A                   MOV.L       L5131+40,R3; _MenuDisableNode
    00002E1A 430B                   JSR         @R3
    00002E1C E41C                   MOV         #28,R4
          EDIT.c  2176        if(strcmp(sRoot,"crd0")==0) sprintf(sRoot,"fls0");
    00002E1E D51A                   MOV.L       L5131+44,R5; L815
    00002E20 901E                   MOV.W       L5131+4,R0 ; H'0120
    00002E22 D31A                   MOV.L       L5131+48,R3; __slow_strcmp1
    00002E24 430B                   JSR         @R3
    00002E26 04FE                   MOV.L       @(R0,R15),R4
    00002E28 2008                   TST         R0,R0
    00002E2A 8B0B                   BF          L4438
    00002E2C D318                   MOV.L       L5131+52,R3; L813
    00002E2E 2F36                   MOV.L       R3,@-R15
    00002E30 9015                   MOV.W       L5131+2,R0 ; H'0124
    00002E32 D218                   MOV.L       L5131+56,R2; _sprintf
    00002E34 420B                   JSR         @R2
    00002E36 04FE                   MOV.L       @(R0,R15),R4
    00002E38 A004                   BRA         L4438
    00002E3A 7F04                   ADD         #4,R15
    00002E3C              L4436:                            
          EDIT.c  2177      }
          EDIT.c  2178      else




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  147


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2179      {
          EDIT.c  2180        MenuEnableNode(MENUBARROOT,5);
    00002E3C D216                   MOV.L       L5131+60,R2; _MenuEnableNode
    00002E3E E505                   MOV         #5,R5
    00002E40 420B                   JSR         @R2
    00002E42 E41C                   MOV         #28,R4
    00002E44              L4438:                            
          EDIT.c  2181      }
          EDIT.c  2182        
          EDIT.c  2183      //Main loop
          EDIT.c  2184      iExit=0;
    00002E44 9017                   MOV.W       L5131+26,R0; H'010C
    00002E46 E300                   MOV         #0,R3
    00002E48 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2185      do{
    00002E4A              L4439:                            
          EDIT.c  2186          
          EDIT.c  2187        //Number of window lines
          EDIT.c  2188        if(sConfig->iDispFree==1)
    00002E4A 9012                   MOV.W       L5131+22,R0; H'012C
    00002E4C 00FE                   MOV.L       @(R0,R15),R0
    00002E4E 5006                   MOV.L       @(24,R0),R0
    00002E50 8801                   CMP/EQ      #1,R0
    00002E52 8B23                   BF          L4440
          EDIT.c  2189          iLines=5;
    00002E54 900C                   MOV.W       L5131+20,R0; H'00AC
    00002E56 E205                   MOV         #5,R2
    00002E58 A023                   BRA         L4441
    00002E5A 0F26                   MOV.L       R2,@(R0,R15)
    00002E5C              L5131:                            
    00002E5C FED8                   .DATA.W     H'FED8
    00002E5E 0124                   .DATA.W     H'0124
    00002E60 0120                   .DATA.W     H'0120
    00002E62 011C                   .DATA.W     H'011C
    00002E64 0118                   .DATA.W     H'0118
    00002E66 0100                   .DATA.W     H'0100
    00002E68 00FC                   .DATA.W     H'00FC
    00002E6A 00C0                   .DATA.W     H'00C0
    00002E6C 00BC                   .DATA.W     H'00BC
    00002E6E 00B8                   .DATA.W     H'00B8
    00002E70 00AC                   .DATA.W     H'00AC
    00002E72 012C                   .DATA.W     H'012C
    00002E74 00B0                   .DATA.W     H'00B0
    00002E76 010C                   .DATA.W     H'010C
    00002E78 <00000000>             .DATA.L     __iAppMode
    00002E7C <00000000>             .DATA.L     _KeyboardStatusHide
    00002E80 <00000000>             .DATA.L     _SDCardPresent
    00002E84 <00000000>             .DATA.L     _MenuDisableNode
    00002E88 <00000000>             .DATA.L     L815
    00002E8C <00000000>             .DATA.L     __slow_strcmp1
    00002E90 <00000000>             .DATA.L     L813
    00002E94 <00000000>             .DATA.L     _sprintf
    00002E98 <00000000>             .DATA.L     _MenuEnableNode
    00002E9C              L4440:                            
          EDIT.c  2190        else
          EDIT.c  2191          iLines=6;
    00002E9C 908A                   MOV.W       L5132,R0   ; H'00AC




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  148


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002E9E E106                   MOV         #6,R1
    00002EA0 0F16                   MOV.L       R1,@(R0,R15)
    00002EA2              L4441:                            
          EDIT.c  2192        
          EDIT.c  2193        //Init display
          EDIT.c  2194        if(iReadFiles==1) Bdisp_AllClr_DDVRAM();
    00002EA2 9088                   MOV.W       L5132+2,R0 ; H'0100
    00002EA4 00FE                   MOV.L       @(R0,R15),R0
    00002EA6 8801                   CMP/EQ      #1,R0
    00002EA8 8901                   BT          L5133
    00002EAA A0F7                   BRA         L4444
    00002EAC 0009                   NOP
    00002EAE              L5133:                            
    00002EAE D245                   MOV.L       L5132+16,R2; _Bdisp_AllClr_DDVRAM
    00002EB0 420B                   JSR         @R2
    00002EB2 0009                   NOP
          EDIT.c  2195        
          EDIT.c  2196        //Get file table
          EDIT.c  2197        if(iReadFiles==1)
    00002EB4 907F                   MOV.W       L5132+2,R0 ; H'0100
    00002EB6 00FE                   MOV.L       @(R0,R15),R0
    00002EB8 8801                   CMP/EQ      #1,R0
    00002EBA 8901                   BT          L5134
    00002EBC A0EE                   BRA         L4444
    00002EBE 0009                   NOP
    00002EC0              L5134:                            
          EDIT.c  2198        {
          EDIT.c  2199          iFiles=0;
    00002EC0 907A                   MOV.W       L5132+4,R0 ; H'0108
          EDIT.c  2200          ReadDirectory(sRoot,sFolder,_sFiles,&iFiles,sConfig->iMaxFiles,1,0,sConfig->iHideSysFiles); 
    00002EC2 E100                   MOV         #0,R1
    00002EC4 977B                   MOV.W       L5132+10,R7; H'0118
    00002EC6 E200                   MOV         #0,R2
    00002EC8 0F26                   MOV.L       R2,@(R0,R15)
    00002ECA 9076                   MOV.W       L5132+6,R0 ; H'012C
    00002ECC 03FE                   MOV.L       @(R0,R15),R3
    00002ECE 5233                   MOV.L       @(12,R3),R2
    00002ED0 9074                   MOV.W       L5132+8,R0 ; H'0138
    00002ED2 E301                   MOV         #1,R3
    00002ED4 2F26                   MOV.L       R2,@-R15
    00002ED6 2F16                   MOV.L       R1,@-R15
    00002ED8 2F36                   MOV.L       R3,@-R15
    00002EDA 02FE                   MOV.L       @(R0,R15),R2
    00002EDC D33A                   MOV.L       L5132+20,R3; __sFiles
    00002EDE E058                   MOV         #88,R0
    00002EE0 002E                   MOV.L       @(R0,R2),R0
    00002EE2 2F06                   MOV.L       R0,@-R15
    00002EE4 6632                   MOV.L       @R3,R6
    00002EE6 37FC                   ADD         R15,R7
    00002EE8 9067                   MOV.W       L5132+6,R0 ; H'012C
    00002EEA 05FE                   MOV.L       @(R0,R15),R5
    00002EEC 9068                   MOV.W       L5132+12,R0; H'0130
    00002EEE BDCC                   BSR         _ReadDirectory
    00002EF0 04FE                   MOV.L       @(R0,R15),R4
    00002EF2 7F10                   ADD         #16,R15
          EDIT.c  2201        }
          EDIT.c  2202        




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  149


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2203        //Set menu bar
          EDIT.c  2204        if(iReadFiles==1)
    00002EF4 905F                   MOV.W       L5132+2,R0 ; H'0100
    00002EF6 00FE                   MOV.L       @(R0,R15),R0
    00002EF8 8801                   CMP/EQ      #1,R0
    00002EFA 8901                   BT          L5135
    00002EFC A0CE                   BRA         L4444
    00002EFE 0009                   NOP
    00002F00              L5135:                            
          EDIT.c  2205        {
          EDIT.c  2206          if(strlen(sFolder)>0 && iFiles==0)
    00002F00 905F                   MOV.W       L5132+14,R0; H'011C
    00002F02 D332                   MOV.L       L5132+24,R3; _strlen
    00002F04 430B                   JSR         @R3
    00002F06 04FE                   MOV.L       @(R0,R15),R4
    00002F08 E200                   MOV         #0,R2
    00002F0A 3026                   CMP/HI      R2,R0
    00002F0C 8B25                   BF          L4445
    00002F0E 9053                   MOV.W       L5132+4,R0 ; H'0108
    00002F10 01FE                   MOV.L       @(R0,R15),R1
    00002F12 2118                   TST         R1,R1
    00002F14 8B21                   BF          L4445
          EDIT.c  2207          {
          EDIT.c  2208            MenuDisableNode(MENUBAREXPL,0);
    00002F16 E500                   MOV         #0,R5
    00002F18 D32D                   MOV.L       L5132+28,R3; _MenuDisableNode
    00002F1A 430B                   JSR         @R3
    00002F1C E403                   MOV         #3,R4
          EDIT.c  2209            MenuDisableNode(MENUBAREXPL,5);
    00002F1E E505                   MOV         #5,R5
    00002F20 D22B                   MOV.L       L5132+28,R2; _MenuDisableNode
    00002F22 420B                   JSR         @R2
    00002F24 E403                   MOV         #3,R4
          EDIT.c  2210            MenuDisableNode(MENUBAREXPL,2);
    00002F26 E502                   MOV         #2,R5
    00002F28 D329                   MOV.L       L5132+28,R3; _MenuDisableNode
    00002F2A 430B                   JSR         @R3
    00002F2C E403                   MOV         #3,R4
          EDIT.c  2211            MenuDisableNode(MENUBAREXP2,0);
    00002F2E E500                   MOV         #0,R5
    00002F30 D227                   MOV.L       L5132+28,R2; _MenuDisableNode
    00002F32 420B                   JSR         @R2
    00002F34 E413                   MOV         #19,R4
          EDIT.c  2212            MenuDisableNode(MENUBAREXP2,1);
    00002F36 E501                   MOV         #1,R5
    00002F38 D325                   MOV.L       L5132+28,R3; _MenuDisableNode
    00002F3A 430B                   JSR         @R3
    00002F3C E413                   MOV         #19,R4
          EDIT.c  2213            MenuDisableNode(MENUBAREXP2,2);
    00002F3E E502                   MOV         #2,R5
    00002F40 D223                   MOV.L       L5132+28,R2; _MenuDisableNode
    00002F42 420B                   JSR         @R2
    00002F44 E413                   MOV         #19,R4
          EDIT.c  2214            MenuDisableNode(MENUBAREXP2,3);
    00002F46 E503                   MOV         #3,R5
    00002F48 D321                   MOV.L       L5132+28,R3; _MenuDisableNode
    00002F4A 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  150


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002F4C E413                   MOV         #19,R4
          EDIT.c  2215            MenuDisableNode(MENUBAREXP2,4);
    00002F4E E504                   MOV         #4,R5
    00002F50 D21F                   MOV.L       L5132+28,R2; _MenuDisableNode
    00002F52 420B                   JSR         @R2
    00002F54 E413                   MOV         #19,R4
          EDIT.c  2216            MenuDisableNode(MENUBARAUTO,0);
    00002F56 A063                   BRA         L4943
    00002F58 0009                   NOP
    00002F5A              L4445:                            
          EDIT.c  2217          }
          EDIT.c  2218          else if(strlen(sFolder)>0)
    00002F5A 9032                   MOV.W       L5132+14,R0; H'011C
    00002F5C D31B                   MOV.L       L5132+24,R3; _strlen
    00002F5E 430B                   JSR         @R3
    00002F60 04FE                   MOV.L       @(R0,R15),R4
    00002F62 E200                   MOV         #0,R2
    00002F64 3026                   CMP/HI      R2,R0
    00002F66 8B37                   BF          L4447
          EDIT.c  2219          {
          EDIT.c  2220            MenuEnableNode( MENUBAREXPL,0);
    00002F68 D11A                   MOV.L       L5132+32,R1; _MenuEnableNode
    00002F6A 6523                   MOV         R2,R5
    00002F6C 410B                   JSR         @R1
    00002F6E E403                   MOV         #3,R4
          EDIT.c  2221            MenuEnableNode( MENUBAREXPL,5);
    00002F70 D318                   MOV.L       L5132+32,R3; _MenuEnableNode
    00002F72 E505                   MOV         #5,R5
    00002F74 430B                   JSR         @R3
    00002F76 E403                   MOV         #3,R4
          EDIT.c  2222            MenuEnableNode( MENUBAREXPL,2);
    00002F78 D216                   MOV.L       L5132+32,R2; _MenuEnableNode
    00002F7A E502                   MOV         #2,R5
    00002F7C 420B                   JSR         @R2
    00002F7E E403                   MOV         #3,R4
          EDIT.c  2223            MenuEnableNode( MENUBAREXP2,0);
    00002F80 D314                   MOV.L       L5132+32,R3; _MenuEnableNode
    00002F82 E500                   MOV         #0,R5
    00002F84 430B                   JSR         @R3
    00002F86 E413                   MOV         #19,R4
          EDIT.c  2224            MenuEnableNode( MENUBAREXP2,1);
    00002F88 D212                   MOV.L       L5132+32,R2; _MenuEnableNode
    00002F8A E501                   MOV         #1,R5
    00002F8C 420B                   JSR         @R2
    00002F8E E413                   MOV         #19,R4
          EDIT.c  2225            MenuEnableNode( MENUBAREXP2,2);
    00002F90 D310                   MOV.L       L5132+32,R3; _MenuEnableNode
    00002F92 E502                   MOV         #2,R5
    00002F94 430B                   JSR         @R3
    00002F96 E413                   MOV         #19,R4
          EDIT.c  2226            MenuDisableNode(MENUBAREXP2,3);
    00002F98 D20D                   MOV.L       L5132+28,R2; _MenuDisableNode
    00002F9A E503                   MOV         #3,R5
    00002F9C 420B                   JSR         @R2
    00002F9E E413                   MOV         #19,R4
          EDIT.c  2227            MenuDisableNode(MENUBAREXP2,4);
    00002FA0 D30B                   MOV.L       L5132+28,R3; _MenuDisableNode




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  151


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002FA2 E504                   MOV         #4,R5
    00002FA4 430B                   JSR         @R3
    00002FA6 E413                   MOV         #19,R4
          EDIT.c  2228            MenuEnableNode( MENUBARAUTO,0);
    00002FA8 D20A                   MOV.L       L5132+32,R2; _MenuEnableNode
    00002FAA E500                   MOV         #0,R5
    00002FAC 420B                   JSR         @R2
    00002FAE E410                   MOV         #16,R4
    00002FB0 A060                   BRA         L4446
    00002FB2 0009                   NOP
    00002FB4              L5132:                            
    00002FB4 00AC                   .DATA.W     H'00AC
    00002FB6 0100                   .DATA.W     H'0100
    00002FB8 0108                   .DATA.W     H'0108
    00002FBA 012C                   .DATA.W     H'012C
    00002FBC 0138                   .DATA.W     H'0138
    00002FBE 0118                   .DATA.W     H'0118
    00002FC0 0130                   .DATA.W     H'0130
    00002FC2 011C                   .DATA.W     H'011C
    00002FC4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00002FC8 <00000000>             .DATA.L     __sFiles
    00002FCC <00000000>             .DATA.L     _strlen
    00002FD0 <00000000>             .DATA.L     _MenuDisableNode
    00002FD4 <00000000>             .DATA.L     _MenuEnableNode
    00002FD8              L4447:                            
          EDIT.c  2229          }
          EDIT.c  2230          else if(iFiles==0)
    00002FD8 9056                   MOV.W       L5136,R0   ; H'0108
    00002FDA 01FE                   MOV.L       @(R0,R15),R1
    00002FDC 2118                   TST         R1,R1
    00002FDE 8B25                   BF          L4449
          EDIT.c  2231          {
          EDIT.c  2232            MenuDisableNode(MENUBAREXPL,0);
    00002FE0 D32A                   MOV.L       L5136+4,R3 ; _MenuDisableNode
    00002FE2 6523                   MOV         R2,R5
    00002FE4 430B                   JSR         @R3
    00002FE6 E403                   MOV         #3,R4
          EDIT.c  2233            MenuDisableNode(MENUBAREXPL,5);
    00002FE8 D228                   MOV.L       L5136+4,R2 ; _MenuDisableNode
    00002FEA E505                   MOV         #5,R5
    00002FEC 420B                   JSR         @R2
    00002FEE E403                   MOV         #3,R4
          EDIT.c  2234            MenuEnableNode( MENUBAREXPL,2);
    00002FF0 D327                   MOV.L       L5136+8,R3 ; _MenuEnableNode
    00002FF2 E502                   MOV         #2,R5
    00002FF4 430B                   JSR         @R3
    00002FF6 E403                   MOV         #3,R4
          EDIT.c  2235            MenuDisableNode(MENUBAREXP2,0);
    00002FF8 D224                   MOV.L       L5136+4,R2 ; _MenuDisableNode
    00002FFA E500                   MOV         #0,R5
    00002FFC 420B                   JSR         @R2
    00002FFE E413                   MOV         #19,R4
          EDIT.c  2236            MenuDisableNode(MENUBAREXP2,1);
    00003000 D322                   MOV.L       L5136+4,R3 ; _MenuDisableNode
    00003002 E501                   MOV         #1,R5
    00003004 430B                   JSR         @R3
    00003006 E413                   MOV         #19,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  152


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2237            MenuDisableNode(MENUBAREXP2,2);
    00003008 D220                   MOV.L       L5136+4,R2 ; _MenuDisableNode
    0000300A E502                   MOV         #2,R5
    0000300C 420B                   JSR         @R2
    0000300E E413                   MOV         #19,R4
          EDIT.c  2238            MenuEnableNode( MENUBAREXP2,3);
    00003010 D31F                   MOV.L       L5136+8,R3 ; _MenuEnableNode
    00003012 E503                   MOV         #3,R5
    00003014 430B                   JSR         @R3
    00003016 E413                   MOV         #19,R4
          EDIT.c  2239            MenuDisableNode(MENUBAREXP2,4);
    00003018 D21C                   MOV.L       L5136+4,R2 ; _MenuDisableNode
    0000301A E504                   MOV         #4,R5
    0000301C 420B                   JSR         @R2
    0000301E E413                   MOV         #19,R4
          EDIT.c  2240            MenuDisableNode(MENUBARAUTO,0);
    00003020              L4943:                            
    00003020 D31A                   MOV.L       L5136+4,R3 ; _MenuDisableNode
    00003022 E500                   MOV         #0,R5
    00003024 430B                   JSR         @R3
    00003026 E410                   MOV         #16,R4
    00003028 A024                   BRA         L4446
    0000302A 0009                   NOP
    0000302C              L4449:                            
          EDIT.c  2241          }
          EDIT.c  2242          else
          EDIT.c  2243          {
          EDIT.c  2244            MenuEnableNode(MENUBAREXPL,0);
    0000302C D318                   MOV.L       L5136+8,R3 ; _MenuEnableNode
    0000302E 6523                   MOV         R2,R5
    00003030 430B                   JSR         @R3
    00003032 E403                   MOV         #3,R4
          EDIT.c  2245            MenuEnableNode(MENUBAREXPL,5);
    00003034 D216                   MOV.L       L5136+8,R2 ; _MenuEnableNode
    00003036 E505                   MOV         #5,R5
    00003038 420B                   JSR         @R2
    0000303A E403                   MOV         #3,R4
          EDIT.c  2246            MenuEnableNode(MENUBAREXPL,2);
    0000303C D314                   MOV.L       L5136+8,R3 ; _MenuEnableNode
    0000303E E502                   MOV         #2,R5
    00003040 430B                   JSR         @R3
    00003042 E403                   MOV         #3,R4
          EDIT.c  2247            MenuEnableNode(MENUBAREXP2,0);
    00003044 D212                   MOV.L       L5136+8,R2 ; _MenuEnableNode
    00003046 E500                   MOV         #0,R5
    00003048 420B                   JSR         @R2
    0000304A E413                   MOV         #19,R4
          EDIT.c  2248            MenuEnableNode(MENUBAREXP2,1);
    0000304C D310                   MOV.L       L5136+8,R3 ; _MenuEnableNode
    0000304E E501                   MOV         #1,R5
    00003050 430B                   JSR         @R3
    00003052 E413                   MOV         #19,R4
          EDIT.c  2249            MenuEnableNode(MENUBAREXP2,2);
    00003054 D20E                   MOV.L       L5136+8,R2 ; _MenuEnableNode
    00003056 E502                   MOV         #2,R5
    00003058 420B                   JSR         @R2
    0000305A E413                   MOV         #19,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  153


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2250            MenuEnableNode(MENUBAREXP2,3);
    0000305C D30C                   MOV.L       L5136+8,R3 ; _MenuEnableNode
    0000305E E503                   MOV         #3,R5
    00003060 430B                   JSR         @R3
    00003062 E413                   MOV         #19,R4
          EDIT.c  2251            MenuEnableNode(MENUBAREXP2,4);
    00003064 D20A                   MOV.L       L5136+8,R2 ; _MenuEnableNode
    00003066 E504                   MOV         #4,R5
    00003068 420B                   JSR         @R2
    0000306A E413                   MOV         #19,R4
          EDIT.c  2252            MenuEnableNode(MENUBARAUTO,0);
    0000306C D308                   MOV.L       L5136+8,R3 ; _MenuEnableNode
    0000306E E500                   MOV         #0,R5
    00003070 430B                   JSR         @R3
    00003072 E410                   MOV         #16,R4
    00003074              L4446:                            
          EDIT.c  2253          }
          EDIT.c  2254          switch(iMode)
    00003074 9009                   MOV.W       L5136+2,R0 ; H'0124
    00003076 00FE                   MOV.L       @(R0,R15),R0
    00003078 8801                   CMP/EQ      #1,R0
    0000307A 8903                   BT          L2721
    0000307C 8802                   CMP/EQ      #2,R0
    0000307E 8909                   BT          L2722
    00003080 A00C                   BRA         L4444
    00003082 0009                   NOP
    00003084              L2721:                           ; case label 
          EDIT.c  2255          {
          EDIT.c  2256            case EXPLOREROPEN: MenuSetBar(MENUBAREXPL); break;
    00003084 A007                   BRA         L4933
    00003086 E403                   MOV         #3,R4
    00003088              L5136:                            
    00003088 0108                   .DATA.W     H'0108
    0000308A 0124                   .DATA.W     H'0124
    0000308C <00000000>             .DATA.L     _MenuDisableNode
    00003090 <00000000>             .DATA.L     _MenuEnableNode
    00003094              L2722:                           ; case label 
          EDIT.c  2257            case EXPLORERAUTO: MenuSetBar(MENUBARAUTO); break;
    00003094 E410                   MOV         #16,R4
    00003096              L4933:                            
    00003096 D346                   MOV.L       L5137+20,R3; _MenuSetBar
    00003098 430B                   JSR         @R3
    0000309A 0009                   NOP
    0000309C              L4444:                            
          EDIT.c  2258          }
          EDIT.c  2259        }
          EDIT.c  2260        
          EDIT.c  2261        //Rewrite screen
          EDIT.c  2262        if(iRefresh==1)
    0000309C 907E                   MOV.W       L5137,R0   ; H'00FC
    0000309E 00FE                   MOV.L       @(R0,R15),R0
    000030A0 8801                   CMP/EQ      #1,R0
    000030A2 8901                   BT          L5138
    000030A4 A10D                   BRA         L4452
    000030A6 0009                   NOP
    000030A8              L5138:                            
          EDIT.c  2263        {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  154


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2264          SetFont(FONTL);
    000030A8 D242                   MOV.L       L5137+24,R2; _SetFont
    000030AA 420B                   JSR         @R2
    000030AC E403                   MOV         #3,R4
          EDIT.c  2265          SetColor(COLNOR);
    000030AE D342                   MOV.L       L5137+28,R3; _SetColor
    000030B0 430B                   JSR         @R3
    000030B2 E400                   MOV         #0,R4
          EDIT.c  2266          if(strcmp(sRoot,"main")==0) 
    000030B4 D541                   MOV.L       L5137+32,R5; L620
    000030B6 9072                   MOV.W       L5137+2,R0 ; H'0120
    000030B8 D341                   MOV.L       L5137+36,R3; __slow_strcmp1
    000030BA 430B                   JSR         @R3
    000030BC 04FE                   MOV.L       @(R0,R15),R4
    000030BE 2008                   TST         R0,R0
    000030C0 8B13                   BF          L4453
          EDIT.c  2267          {
          EDIT.c  2268            sprintf(sStr,"Main Memory[%-8s]",sFolder);
    000030C2 906D                   MOV.W       L5137+4,R0 ; H'011C
    000030C4 D23F                   MOV.L       L5137+40,R2; L987
    000030C6 03FE                   MOV.L       @(R0,R15),R3
    000030C8 946B                   MOV.W       L5137+6,R4 ; H'00CC
    000030CA 2F36                   MOV.L       R3,@-R15
    000030CC 2F26                   MOV.L       R2,@-R15
    000030CE D33E                   MOV.L       L5137+44,R3; _sprintf
    000030D0 430B                   JSR         @R3
    000030D2 34FC                   ADD         R15,R4
          EDIT.c  2269            if(Bfile_GetMediaFree(DEVICE_MAIN_MEMORY,&iBytes)!=0) iBytes=0;
    000030D4 9566                   MOV.W       L5137+8,R5 ; H'0104
    000030D6 7F08                   ADD         #8,R15
    000030D8 D23C                   MOV.L       L5137+48,R2; _Bfile_GetMediaFree
    000030DA 35FC                   ADD         R15,R5
    000030DC 420B                   JSR         @R2
    000030DE E400                   MOV         #0,R4
    000030E0 2008                   TST         R0,R0
    000030E2 8902                   BT          L4453
    000030E4 905E                   MOV.W       L5137+8,R0 ; H'0104
    000030E6 E200                   MOV         #0,R2
    000030E8 0F26                   MOV.L       R2,@(R0,R15)
    000030EA              L4453:                            
          EDIT.c  2270          }  
          EDIT.c  2271          if(strcmp(sRoot,"fls0")==0) 
    000030EA D539                   MOV.L       L5137+52,R5; L813
    000030EC 9057                   MOV.W       L5137+2,R0 ; H'0120
    000030EE D334                   MOV.L       L5137+36,R3; __slow_strcmp1
    000030F0 430B                   JSR         @R3
    000030F2 04FE                   MOV.L       @(R0,R15),R4
    000030F4 2008                   TST         R0,R0
    000030F6 8B13                   BF          L4455
          EDIT.c  2272          {
          EDIT.c  2273            sprintf(sStr,"Storage Mem[%-8s]",sFolder);
    000030F8 9052                   MOV.W       L5137+4,R0 ; H'011C
    000030FA 03FE                   MOV.L       @(R0,R15),R3
    000030FC D235                   MOV.L       L5137+56,R2; L989
    000030FE 2F36                   MOV.L       R3,@-R15
    00003100 2F26                   MOV.L       R2,@-R15
    00003102 944E                   MOV.W       L5137+6,R4 ; H'00CC




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  155


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003104 D330                   MOV.L       L5137+44,R3; _sprintf
    00003106 430B                   JSR         @R3
    00003108 34FC                   ADD         R15,R4
    0000310A 7F08                   ADD         #8,R15
          EDIT.c  2274            if(Bfile_GetMediaFree(DEVICE_STORAGE,&iBytes)!=0) iBytes=0;
    0000310C 954A                   MOV.W       L5137+8,R5 ; H'0104
    0000310E 35FC                   ADD         R15,R5
    00003110 D22E                   MOV.L       L5137+48,R2; _Bfile_GetMediaFree
    00003112 420B                   JSR         @R2
    00003114 E401                   MOV         #1,R4
    00003116 2008                   TST         R0,R0
    00003118 8902                   BT          L4455
    0000311A E200                   MOV         #0,R2
    0000311C 9042                   MOV.W       L5137+8,R0 ; H'0104
    0000311E 0F26                   MOV.L       R2,@(R0,R15)
    00003120              L4455:                            
          EDIT.c  2275          }  
          EDIT.c  2276          if(strcmp(sRoot,"crd0")==0) 
    00003120 D52D                   MOV.L       L5137+60,R5; L815
    00003122 903C                   MOV.W       L5137+2,R0 ; H'0120
    00003124 D326                   MOV.L       L5137+36,R3; __slow_strcmp1
    00003126 430B                   JSR         @R3
    00003128 04FE                   MOV.L       @(R0,R15),R4
    0000312A 2008                   TST         R0,R0
    0000312C 8B13                   BF          L4457
          EDIT.c  2277          {
          EDIT.c  2278            sprintf(sStr,"SD Card    [%-8s]",sFolder);
    0000312E 9037                   MOV.W       L5137+4,R0 ; H'011C
    00003130 D22A                   MOV.L       L5137+64,R2; L991
    00003132 03FE                   MOV.L       @(R0,R15),R3
    00003134 9435                   MOV.W       L5137+6,R4 ; H'00CC
    00003136 2F36                   MOV.L       R3,@-R15
    00003138 2F26                   MOV.L       R2,@-R15
    0000313A D323                   MOV.L       L5137+44,R3; _sprintf
    0000313C 430B                   JSR         @R3
    0000313E 34FC                   ADD         R15,R4
          EDIT.c  2279            if(Bfile_GetMediaFree(DEVICE_SD_CARD,&iBytes)!=0) iBytes=0;
    00003140 9530                   MOV.W       L5137+8,R5 ; H'0104
    00003142 7F08                   ADD         #8,R15
    00003144 D221                   MOV.L       L5137+48,R2; _Bfile_GetMediaFree
    00003146 35FC                   ADD         R15,R5
    00003148 420B                   JSR         @R2
    0000314A E402                   MOV         #2,R4
    0000314C 2008                   TST         R0,R0
    0000314E 8902                   BT          L4457
    00003150 9028                   MOV.W       L5137+8,R0 ; H'0104
    00003152 E200                   MOV         #0,R2
    00003154 0F26                   MOV.L       R2,@(R0,R15)
    00003156              L4457:                            
          EDIT.c  2280          }
          EDIT.c  2281          PrintStr(0,0,sStr);
    00003156 E500                   MOV         #0,R5
    00003158 D321                   MOV.L       L5137+68,R3; _PrintStr
    0000315A 9624                   MOV.W       L5137+10,R6; H'00C4
    0000315C 36FC                   ADD         R15,R6
    0000315E 430B                   JSR         @R3
    00003160 6453                   MOV         R5,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  156


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2282          if(sConfig->iDispFree==1)
    00003162 9021                   MOV.W       L5137+12,R0; H'012C
    00003164 00FE                   MOV.L       @(R0,R15),R0
    00003166 5006                   MOV.L       @(24,R0),R0
    00003168 8801                   CMP/EQ      #1,R0
    0000316A 8B0F                   BF          L4459
          EDIT.c  2283          {
          EDIT.c  2284            sprintf(sStr,"%i Bytes Free",iBytes);
    0000316C 901A                   MOV.W       L5137+8,R0 ; H'0104
    0000316E 02FE                   MOV.L       @(R0,R15),R2
    00003170 D31C                   MOV.L       L5137+72,R3; L993
    00003172 2F26                   MOV.L       R2,@-R15
    00003174 2F36                   MOV.L       R3,@-R15
    00003176 9414                   MOV.W       L5137+6,R4 ; H'00CC
    00003178 D213                   MOV.L       L5137+44,R2; _sprintf
    0000317A 420B                   JSR         @R2
    0000317C 34FC                   ADD         R15,R4
    0000317E 7F08                   ADD         #8,R15
          EDIT.c  2285            PrintStr(0,6,sStr);
    00003180 9611                   MOV.W       L5137+10,R6; H'00C4
    00003182 E506                   MOV         #6,R5
    00003184 D316                   MOV.L       L5137+68,R3; _PrintStr
    00003186 36FC                   ADD         R15,R6
    00003188 430B                   JSR         @R3
    0000318A E400                   MOV         #0,R4
    0000318C              L4459:                            
          EDIT.c  2286          }
          EDIT.c  2287          if(iFiles>0)
    0000318C 900D                   MOV.W       L5137+14,R0; H'0108
    0000318E 02FE                   MOV.L       @(R0,R15),R2
    00003190 4215                   CMP/PL      R2
    00003192 8B73                   BF          L4460
          EDIT.c  2288          {
          EDIT.c  2289            for(i=0;i<iLines;i++)
    00003194 900A                   MOV.W       L5137+16,R0; H'0114
    00003196 E100                   MOV         #0,R1
    00003198 A056                   BRA         L4461
    0000319A 0F16                   MOV.L       R1,@(R0,R15)
    0000319C              L5137:                            
    0000319C 00FC                   .DATA.W     H'00FC
    0000319E 0120                   .DATA.W     H'0120
    000031A0 011C                   .DATA.W     H'011C
    000031A2 00CC                   .DATA.W     H'00CC
    000031A4 0104                   .DATA.W     H'0104
    000031A6 00C4                   .DATA.W     H'00C4
    000031A8 012C                   .DATA.W     H'012C
    000031AA 0108                   .DATA.W     H'0108
    000031AC 0114                   .DATA.W     H'0114
    000031AE 0000                   .DATA.W     0
    000031B0 <00000000>             .DATA.L     _MenuSetBar
    000031B4 <00000000>             .DATA.L     _SetFont
    000031B8 <00000000>             .DATA.L     _SetColor
    000031BC <00000000>             .DATA.L     L620
    000031C0 <00000000>             .DATA.L     __slow_strcmp1
    000031C4 <00000000>             .DATA.L     L987
    000031C8 <00000000>             .DATA.L     _sprintf
    000031CC <00000000>             .DATA.L     _Bfile_GetMediaFree




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  157


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000031D0 <00000000>             .DATA.L     L813
    000031D4 <00000000>             .DATA.L     L989
    000031D8 <00000000>             .DATA.L     L815
    000031DC <00000000>             .DATA.L     L991
    000031E0 <00000000>             .DATA.L     _PrintStr
    000031E4 <00000000>             .DATA.L     L993
    000031E8              L4462:                            
          EDIT.c  2290            {
          EDIT.c  2291              if(i+iStart<iFiles)
    000031E8 9036                   MOV.W       L5139,R0   ; H'00C0
    000031EA 03FE                   MOV.L       @(R0,R15),R3
    000031EC 9035                   MOV.W       L5139+2,R0 ; H'0114
    000031EE 02FE                   MOV.L       @(R0,R15),R2
    000031F0 9034                   MOV.W       L5139+4,R0 ; H'0108
    000031F2 323C                   ADD         R3,R2
    000031F4 01FE                   MOV.L       @(R0,R15),R1
    000031F6 3213                   CMP/GE      R1,R2
    000031F8 891A                   BT          L4463
          EDIT.c  2292                PrintFileEntry(i+1,iStart,iFiles,iLines,&_sFiles[i+iStart],1);
    000031FA E201                   MOV         #1,R2
    000031FC 902F                   MOV.W       L5139+6,R0 ; H'0118
    000031FE 2F26                   MOV.L       R2,@-R15
    00003200 01FE                   MOV.L       @(R0,R15),R1
    00003202 331C                   ADD         R1,R3
    00003204 6133                   MOV         R3,R1
    00003206 4300                   SHLL        R3
    00003208 331C                   ADD         R1,R3
    0000320A 4308                   SHLL2       R3
    0000320C D117                   MOV.L       L5139+20,R1; __sFiles
    0000320E 4300                   SHLL        R3
    00003210 6012                   MOV.L       @R1,R0
    00003212 330C                   ADD         R0,R3
    00003214 2F36                   MOV.L       R3,@-R15
    00003216 9023                   MOV.W       L5139+8,R0 ; H'00B4
    00003218 D315                   MOV.L       L5139+24,R3; _PrintFileEntry
    0000321A 07FE                   MOV.L       @(R0,R15),R7
    0000321C 9021                   MOV.W       L5139+10,R0; H'0110
    0000321E 06FE                   MOV.L       @(R0,R15),R6
    00003220 9020                   MOV.W       L5139+12,R0; H'00C8
    00003222 05FE                   MOV.L       @(R0,R15),R5
    00003224 901F                   MOV.W       L5139+14,R0; H'011C
    00003226 04FE                   MOV.L       @(R0,R15),R4
    00003228 430B                   JSR         @R3
    0000322A 342C                   ADD         R2,R4
    0000322C A007                   BRA         L4464
    0000322E 7F08                   ADD         #8,R15
    00003230              L4463:                            
          EDIT.c  2293              else
          EDIT.c  2294                PrintStr(0,i+1,"                     ");
    00003230 D610                   MOV.L       L5139+28,R6; L996
    00003232 9012                   MOV.W       L5139+2,R0 ; H'0114
    00003234 D210                   MOV.L       L5139+32,R2; _PrintStr
    00003236 05FE                   MOV.L       @(R0,R15),R5
    00003238 7501                   ADD         #1,R5
    0000323A 420B                   JSR         @R2
    0000323C E400                   MOV         #0,R4
    0000323E              L4464:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  158


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000323E 900C                   MOV.W       L5139+2,R0 ; H'0114
    00003240 03FE                   MOV.L       @(R0,R15),R3
    00003242 7301                   ADD         #1,R3
    00003244 9009                   MOV.W       L5139+2,R0 ; H'0114
    00003246 0F36                   MOV.L       R3,@(R0,R15)
    00003248              L4461:                            
    00003248 900E                   MOV.W       L5139+16,R0; H'00AC
    0000324A 02FE                   MOV.L       @(R0,R15),R2
    0000324C 9005                   MOV.W       L5139+2,R0 ; H'0114
    0000324E 01FE                   MOV.L       @(R0,R15),R1
    00003250 3123                   CMP/GE      R2,R1
    00003252 8BC9                   BF          L4462
    00003254 A035                   BRA         L4452
    00003256 0009                   NOP
    00003258              L5139:                            
    00003258 00C0                   .DATA.W     H'00C0
    0000325A 0114                   .DATA.W     H'0114
    0000325C 0108                   .DATA.W     H'0108
    0000325E 0118                   .DATA.W     H'0118
    00003260 00B4                   .DATA.W     H'00B4
    00003262 0110                   .DATA.W     H'0110
    00003264 00C8                   .DATA.W     H'00C8
    00003266 011C                   .DATA.W     H'011C
    00003268 00AC                   .DATA.W     H'00AC
    0000326A 0000                   .DATA.W     0
    0000326C <00000000>             .DATA.L     __sFiles
    00003270 <00000000>             .DATA.L     _PrintFileEntry
    00003274 <00000000>             .DATA.L     L996
    00003278 <00000000>             .DATA.L     _PrintStr
    0000327C              L4460:                            
          EDIT.c  2295            }
          EDIT.c  2296          }
          EDIT.c  2297          else
          EDIT.c  2298          {
          EDIT.c  2299            PrintStr(0,1,"                     ");
    0000327C D652                   MOV.L       L5140+30,R6; L996
    0000327E E501                   MOV         #1,R5
    00003280 D252                   MOV.L       L5140+34,R2; _PrintStr
    00003282 420B                   JSR         @R2
    00003284 E400                   MOV         #0,R4
          EDIT.c  2300            PrintStr(0,2,"                     ");
    00003286 E502                   MOV         #2,R5
    00003288 D350                   MOV.L       L5140+34,R3; _PrintStr
    0000328A D64F                   MOV.L       L5140+30,R6; L996
    0000328C 430B                   JSR         @R3
    0000328E E400                   MOV         #0,R4
          EDIT.c  2301            PrintStr(0,3,"       No Data       ");
    00003290 D64F                   MOV.L       L5140+38,R6; L998
    00003292 E503                   MOV         #3,R5
    00003294 D24D                   MOV.L       L5140+34,R2; _PrintStr
    00003296 420B                   JSR         @R2
    00003298 E400                   MOV         #0,R4
          EDIT.c  2302            PrintStr(0,4,"                     ");
    0000329A E504                   MOV         #4,R5
    0000329C D34B                   MOV.L       L5140+34,R3; _PrintStr
    0000329E D64A                   MOV.L       L5140+30,R6; L996
    000032A0 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  159


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000032A2 E400                   MOV         #0,R4
          EDIT.c  2303            PrintStr(0,5,"                     ");
    000032A4 D648                   MOV.L       L5140+30,R6; L996
    000032A6 E505                   MOV         #5,R5
    000032A8 D248                   MOV.L       L5140+34,R2; _PrintStr
    000032AA 420B                   JSR         @R2
    000032AC E400                   MOV         #0,R4
          EDIT.c  2304            if(iLines>5)
    000032AE E305                   MOV         #5,R3
    000032B0 907B                   MOV.W       L5140,R0   ; H'00AC
    000032B2 02FE                   MOV.L       @(R0,R15),R2
    000032B4 3237                   CMP/GT      R3,R2
    000032B6 8B04                   BF          L4452
          EDIT.c  2305              PrintStr(0,6,"                     ");
    000032B8 D643                   MOV.L       L5140+30,R6; L996
    000032BA E506                   MOV         #6,R5
    000032BC D243                   MOV.L       L5140+34,R2; _PrintStr
    000032BE 420B                   JSR         @R2
    000032C0 E400                   MOV         #0,R4
    000032C2              L4452:                            
          EDIT.c  2306          }
          EDIT.c  2307        }
          EDIT.c  2308        
          EDIT.c  2309        //Cursor position
          EDIT.c  2310        if(iFiles>0 && (iRow!=iARow || iRefresh!=0))
    000032C2 9073                   MOV.W       L5140+2,R0 ; H'0108
    000032C4 03FE                   MOV.L       @(R0,R15),R3
    000032C6 4315                   CMP/PL      R3
    000032C8 8B45                   BF          L4467
    000032CA 9070                   MOV.W       L5140+4,R0 ; H'00B8
    000032CC 01FE                   MOV.L       @(R0,R15),R1
    000032CE 906F                   MOV.W       L5140+6,R0 ; H'00BC
    000032D0 02FE                   MOV.L       @(R0,R15),R2
    000032D2 3210                   CMP/EQ      R1,R2
    000032D4 8B03                   BF          L4468
    000032D6 906C                   MOV.W       L5140+8,R0 ; H'00FC
    000032D8 03FE                   MOV.L       @(R0,R15),R3
    000032DA 2338                   TST         R3,R3
    000032DC 893B                   BT          L4467
    000032DE              L4468:                            
          EDIT.c  2311        {
          EDIT.c  2312          SetFont(FONTL);
    000032DE D33D                   MOV.L       L5140+42,R3; _SetFont
    000032E0 430B                   JSR         @R3
    000032E2 E403                   MOV         #3,R4
          EDIT.c  2313          if(iReadFiles==0) PrintFileEntry(iARow+1,iStart,iFiles,iLines,&_sFiles[iARow+iStart],1);
    000032E4 9066                   MOV.W       L5140+10,R0; H'0100
    000032E6 02FE                   MOV.L       @(R0,R15),R2
    000032E8 2228                   TST         R2,R2
    000032EA 8B19                   BF          L4469
    000032EC 9060                   MOV.W       L5140+6,R0 ; H'00BC
    000032EE E301                   MOV         #1,R3
    000032F0 2F36                   MOV.L       R3,@-R15
    000032F2 02FE                   MOV.L       @(R0,R15),R2
    000032F4 905F                   MOV.W       L5140+12,R0; H'00C4
    000032F6 6423                   MOV         R2,R4
    000032F8 D337                   MOV.L       L5140+46,R3; __sFiles




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  160


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000032FA 01FE                   MOV.L       @(R0,R15),R1
    000032FC 312C                   ADD         R2,R1
    000032FE 6013                   MOV         R1,R0
    00003300 4100                   SHLL        R1
    00003302 310C                   ADD         R0,R1
    00003304 6032                   MOV.L       @R3,R0
    00003306 4108                   SHLL2       R1
    00003308 4100                   SHLL        R1
    0000330A 310C                   ADD         R0,R1
    0000330C 2F16                   MOV.L       R1,@-R15
    0000330E 9053                   MOV.W       L5140+14,R0; H'00B4
    00003310 07FE                   MOV.L       @(R0,R15),R7
    00003312 9052                   MOV.W       L5140+16,R0; H'0110
    00003314 06FE                   MOV.L       @(R0,R15),R6
    00003316 9051                   MOV.W       L5140+18,R0; H'00C8
    00003318 05FE                   MOV.L       @(R0,R15),R5
    0000331A B78D                   BSR         _PrintFileEntry
    0000331C 7401                   ADD         #1,R4
    0000331E 7F08                   ADD         #8,R15
    00003320              L4469:                            
          EDIT.c  2314          PrintFileEntry(iRow +1,iStart,iFiles,iLines,&_sFiles[iRow +iStart],0);
    00003320 904D                   MOV.W       L5140+20,R0; H'00C0
    00003322 E200                   MOV         #0,R2
    00003324 2F26                   MOV.L       R2,@-R15
    00003326 03FE                   MOV.L       @(R0,R15),R3
    00003328 9045                   MOV.W       L5140+12,R0; H'00C4
    0000332A 01FE                   MOV.L       @(R0,R15),R1
    0000332C 313C                   ADD         R3,R1
    0000332E 6013                   MOV         R1,R0
    00003330 D329                   MOV.L       L5140+46,R3; __sFiles
    00003332 4100                   SHLL        R1
    00003334 310C                   ADD         R0,R1
    00003336 4108                   SHLL2       R1
    00003338 6032                   MOV.L       @R3,R0
    0000333A 4100                   SHLL        R1
    0000333C 310C                   ADD         R0,R1
    0000333E 2F16                   MOV.L       R1,@-R15
    00003340 903A                   MOV.W       L5140+14,R0; H'00B4
    00003342 07FE                   MOV.L       @(R0,R15),R7
    00003344 9039                   MOV.W       L5140+16,R0; H'0110
    00003346 06FE                   MOV.L       @(R0,R15),R6
    00003348 9038                   MOV.W       L5140+18,R0; H'00C8
    0000334A 05FE                   MOV.L       @(R0,R15),R5
    0000334C 9033                   MOV.W       L5140+12,R0; H'00C4
    0000334E 04FE                   MOV.L       @(R0,R15),R4
    00003350 B772                   BSR         _PrintFileEntry
    00003352 7401                   ADD         #1,R4
    00003354 7F08                   ADD         #8,R15
    00003356              L4467:                            
          EDIT.c  2315        }    
          EDIT.c  2316        
          EDIT.c  2317        //Flush screen
          EDIT.c  2318        if(iRefresh!=0) Bdisp_PutDisp_DD();
    00003356 902C                   MOV.W       L5140+8,R0 ; H'00FC
    00003358 02FE                   MOV.L       @(R0,R15),R2
    0000335A 2228                   TST         R2,R2
    0000335C 8902                   BT          L4470




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  161


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000335E D31F                   MOV.L       L5140+50,R3; _Bdisp_PutDisp_DD
    00003360 430B                   JSR         @R3
    00003362 0009                   NOP
    00003364              L4470:                            
          EDIT.c  2319        
          EDIT.c  2320        //Clear flags
          EDIT.c  2321        iRefresh=0;
    00003364 9025                   MOV.W       L5140+8,R0 ; H'00FC
    00003366 E200                   MOV         #0,R2
    00003368 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2322        iReadFiles=0;
    0000336A 6323                   MOV         R2,R3
    0000336C 9022                   MOV.W       L5140+10,R0; H'0100
    0000336E 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2323        
          EDIT.c  2324        //Previous cursor position
          EDIT.c  2325        iARow=iRow;
    00003370 901E                   MOV.W       L5140+6,R0 ; H'00BC
    00003372 02FE                   MOV.L       @(R0,R15),R2
    00003374 901B                   MOV.W       L5140+4,R0 ; H'00B8
          EDIT.c  2326        
          EDIT.c  2327        //Get Key
          EDIT.c  2328        iKey=GetKeyb();
    00003376 D31A                   MOV.L       L5140+54,R3; _GetKeyb
    00003378 430B                   JSR         @R3
    0000337A 0F26                   MOV.L       R2,@(R0,R15)
    0000337C 9120                   MOV.W       L5140+22,R1; H'00A8
    0000337E 31FC                   ADD         R15,R1
          EDIT.c  2329          
          EDIT.c  2330        //Exit key (must be outside of switch)
          EDIT.c  2331        if(iKey==KEY_CTRL_EXIT && 
          EDIT.c  2332        (  MenuGetBar()==MENUBARAUTO 
          EDIT.c  2333        || MenuGetBar()==MENUBAREXPL ) )
    00003380 931F                   MOV.W       L5140+24,R3; H'7532
    00003382 3030                   CMP/EQ      R3,R0
    00003384 8F51                   BF/S        L4471
    00003386 2102                   MOV.L       R0,@R1
    00003388 D116                   MOV.L       L5140+58,R1; _MenuGetBar
    0000338A 410B                   JSR         @R1
    0000338C 0009                   NOP
    0000338E 8810                   CMP/EQ      #16,R0
    00003390 8904                   BT          L4472
    00003392 D214                   MOV.L       L5140+58,R2; _MenuGetBar
    00003394 420B                   JSR         @R2
    00003396 0009                   NOP
    00003398 8803                   CMP/EQ      #3,R0
    0000339A 8B46                   BF          L4471
    0000339C              L4472:                            
          EDIT.c  2334        {
          EDIT.c  2335          if(strlen(sFolder)!=0)
    0000339C 9012                   MOV.W       L5140+26,R0; H'011C
    0000339E D312                   MOV.L       L5140+62,R3; _strlen
    000033A0 430B                   JSR         @R3
    000033A2 04FE                   MOV.L       @(R0,R15),R4
    000033A4 2008                   TST         R0,R0
    000033A6 A021                   BRA         L4948
    000033A8 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  162


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000033AA              L5140:                            
    000033AA 00AC                   .DATA.W     H'00AC
    000033AC 0108                   .DATA.W     H'0108
    000033AE 00B8                   .DATA.W     H'00B8
    000033B0 00BC                   .DATA.W     H'00BC
    000033B2 00FC                   .DATA.W     H'00FC
    000033B4 0100                   .DATA.W     H'0100
    000033B6 00C4                   .DATA.W     H'00C4
    000033B8 00B4                   .DATA.W     H'00B4
    000033BA 0110                   .DATA.W     H'0110
    000033BC 00C8                   .DATA.W     H'00C8
    000033BE 00C0                   .DATA.W     H'00C0
    000033C0 00A8                   .DATA.W     H'00A8
    000033C2 7532                   .DATA.W     H'7532
    000033C4 011C                   .DATA.W     H'011C
    000033C6 0000                   .DATA.W     0
    000033C8 <00000000>             .DATA.L     L996
    000033CC <00000000>             .DATA.L     _PrintStr
    000033D0 <00000000>             .DATA.L     L998
    000033D4 <00000000>             .DATA.L     _SetFont
    000033D8 <00000000>             .DATA.L     __sFiles
    000033DC <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000033E0 <00000000>             .DATA.L     _GetKeyb
    000033E4 <00000000>             .DATA.L     _MenuGetBar
    000033E8 <00000000>             .DATA.L     _strlen
    000033EC              L4948:                            
    000033EC 8912                   BT          L4473
          EDIT.c  2336          {
          EDIT.c  2337            sFolder[0]=0;
    000033EE E200                   MOV         #0,R2
    000033F0 9048                   MOV.W       L5141,R0   ; H'011C
    000033F2 03FE                   MOV.L       @(R0,R15),R3
          EDIT.c  2338            iReadFiles=1;
    000033F4 9047                   MOV.W       L5141+2,R0 ; H'0100
    000033F6 2320                   MOV.B       R2,@R3
    000033F8 E301                   MOV         #1,R3
          EDIT.c  2339            iRefresh=1;
    000033FA 6233                   MOV         R3,R2
    000033FC 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2340            iStart=0;
    000033FE E300                   MOV         #0,R3
    00003400 9042                   MOV.W       L5141+4,R0 ; H'00FC
    00003402 0F26                   MOV.L       R2,@(R0,R15)
    00003404 9041                   MOV.W       L5141+6,R0 ; H'00C0
          EDIT.c  2341            iRow=0;
    00003406 6233                   MOV         R3,R2
    00003408 0F36                   MOV.L       R3,@(R0,R15)
    0000340A 903F                   MOV.W       L5141+8,R0 ; H'00BC
    0000340C 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2342            iKey=0;
    0000340E 903E                   MOV.W       L5141+10,R0; H'00A8
    00003410 A00B                   BRA         L4471
    00003412 0F36                   MOV.L       R3,@(R0,R15)
    00003414              L4473:                            
          EDIT.c  2343          }
          EDIT.c  2344          else if(MenuGetBar()==MENUBARAUTO)
    00003414 D124                   MOV.L       L5141+36,R1; _MenuGetBar




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  163


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003416 410B                   JSR         @R1
    00003418 0009                   NOP
    0000341A 8810                   CMP/EQ      #16,R0
    0000341C 8B05                   BF          L4471
          EDIT.c  2345          {
          EDIT.c  2346            iExit=2;
    0000341E E202                   MOV         #2,R2
    00003420 9036                   MOV.W       L5141+12,R0; H'010C
          EDIT.c  2347            iKey=0;
    00003422 E300                   MOV         #0,R3
    00003424 0F26                   MOV.L       R2,@(R0,R15)
    00003426 9032                   MOV.W       L5141+10,R0; H'00A8
    00003428 0F36                   MOV.L       R3,@(R0,R15)
    0000342A              L4471:                            
          EDIT.c  2348          }
          EDIT.c  2349        }
          EDIT.c  2350    
          EDIT.c  2351        //Process keys
          EDIT.c  2352        switch(iKey)
    0000342A 9030                   MOV.W       L5141+10,R0; H'00A8
    0000342C 9131                   MOV.W       L5141+14,R1; H'7539
    0000342E 00FE                   MOV.L       @(R0,R15),R0
    00003430 3010                   CMP/EQ      R1,R0
    00003432 893B                   BT          L2729
    00003434 912E                   MOV.W       L5141+16,R1; H'753A
    00003436 3010                   CMP/EQ      R1,R0
    00003438 8938                   BT          L2730
    0000343A 912C                   MOV.W       L5141+18,R1; H'753B
    0000343C 3010                   CMP/EQ      R1,R0
    0000343E 8935                   BT          L2731
    00003440 912A                   MOV.W       L5141+20,R1; H'753C
    00003442 3010                   CMP/EQ      R1,R0
    00003444 8932                   BT          L2732
    00003446 9128                   MOV.W       L5141+22,R1; H'753D
    00003448 3010                   CMP/EQ      R1,R0
    0000344A 892F                   BT          L2733
    0000344C 9126                   MOV.W       L5141+24,R1; H'753E
    0000344E 3010                   CMP/EQ      R1,R0
    00003450 892C                   BT          L2734
    00003452 9124                   MOV.W       L5141+26,R1; H'7532
    00003454 3010                   CMP/EQ      R1,R0
    00003456 8929                   BT          L2735
    00003458 9122                   MOV.W       L5141+28,R1; H'7555
    0000345A 3010                   CMP/EQ      R1,R0
    0000345C 8B01                   BF          L5142
    0000345E A5F3                   BRA         L2761
    00003460 0009                   NOP
    00003462              L5142:                            
    00003462 911E                   MOV.W       L5141+30,R1; H'7534
    00003464 3010                   CMP/EQ      R1,R0
    00003466 8B01                   BF          L5143
    00003468 A612                   BRA         L2762
    0000346A 0009                   NOP
    0000346C              L5143:                            
    0000346C 911A                   MOV.W       L5141+32,R1; H'7547
    0000346E 3010                   CMP/EQ      R1,R0
    00003470 8B01                   BF          L5144




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  164


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003472 A65D                   BRA         L2763
    00003474 0009                   NOP
    00003476              L5144:                            
    00003476 9116                   MOV.W       L5141+34,R1; H'7542
    00003478 3010                   CMP/EQ      R1,R0
    0000347A 8B01                   BF          L5145
    0000347C A69A                   BRA         L2764
    0000347E 0009                   NOP
    00003480              L5145:                            
    00003480 A6C7                   BRA         L4476
    00003482 0009                   NOP
    00003484              L5141:                            
    00003484 011C                   .DATA.W     H'011C
    00003486 0100                   .DATA.W     H'0100
    00003488 00FC                   .DATA.W     H'00FC
    0000348A 00C0                   .DATA.W     H'00C0
    0000348C 00BC                   .DATA.W     H'00BC
    0000348E 00A8                   .DATA.W     H'00A8
    00003490 010C                   .DATA.W     H'010C
    00003492 7539                   .DATA.W     H'7539
    00003494 753A                   .DATA.W     H'753A
    00003496 753B                   .DATA.W     H'753B
    00003498 753C                   .DATA.W     H'753C
    0000349A 753D                   .DATA.W     H'753D
    0000349C 753E                   .DATA.W     H'753E
    0000349E 7532                   .DATA.W     H'7532
    000034A0 7555                   .DATA.W     H'7555
    000034A2 7534                   .DATA.W     H'7534
    000034A4 7547                   .DATA.W     H'7547
    000034A6 7542                   .DATA.W     H'7542
    000034A8 <00000000>             .DATA.L     _MenuGetBar
    000034AC              L2729:                           ; case label 
          EDIT.c  2353        {
          EDIT.c  2354          //Process menu commands
          EDIT.c  2355          case KEY_CTRL_F1:
          EDIT.c  2356          case KEY_CTRL_F2:
    000034AC              L2730:                           ; case label 
          EDIT.c  2357          case KEY_CTRL_F3:
    000034AC              L2731:                           ; case label 
          EDIT.c  2358          case KEY_CTRL_F4:
    000034AC              L2732:                           ; case label 
          EDIT.c  2359          case KEY_CTRL_F5:
    000034AC              L2733:                           ; case label 
          EDIT.c  2360          case KEY_CTRL_F6:
    000034AC              L2734:                           ; case label 
          EDIT.c  2361          case KEY_CTRL_EXIT:
    000034AC              L2735:                           ; case label 
          EDIT.c  2362            iCode=MenuFunctionKey(iKey);
    000034AC 9075                   MOV.W       L5146,R0   ; H'00A8
    000034AE D33E                   MOV.L       L5146+14,R3; _MenuFunctionKey
    000034B0 430B                   JSR         @R3
    000034B2 04FE                   MOV.L       @(R0,R15),R4
    000034B4 9172                   MOV.W       L5146+2,R1 ; H'00B4
          EDIT.c  2363            if(iCode!=NODENOFUNCT)
    000034B6 2008                   TST         R0,R0
    000034B8 31FC                   ADD         R15,R1
    000034BA 8F02                   BF/S        L5147




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  165


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000034BC 2102                   MOV.L       R0,@R1
    000034BE A6A8                   BRA         L4476
    000034C0 0009                   NOP
    000034C2              L5147:                            
          EDIT.c  2364            {
          EDIT.c  2365              switch(iCode)
    000034C2 8807                   CMP/EQ      #7,R0
    000034C4 893B                   BT          L2736
    000034C6 882C                   CMP/EQ      #44,R0
    000034C8 8939                   BT          L2737
    000034CA 885A                   CMP/EQ      #90,R0
    000034CC 8B01                   BF          L5148
    000034CE A08C                   BRA         L2738
    000034D0 0009                   NOP
    000034D2              L5148:                            
    000034D2 8834                   CMP/EQ      #52,R0
    000034D4 8B01                   BF          L5149
    000034D6 A103                   BRA         L2739
    000034D8 0009                   NOP
    000034DA              L5149:                            
    000034DA 8831                   CMP/EQ      #49,R0
    000034DC 8B01                   BF          L5150
    000034DE A1BD                   BRA         L2741
    000034E0 0009                   NOP
    000034E2              L5150:                            
    000034E2 8833                   CMP/EQ      #51,R0
    000034E4 8B01                   BF          L5151
    000034E6 A280                   BRA         L2743
    000034E8 0009                   NOP
    000034EA              L5151:                            
    000034EA 8832                   CMP/EQ      #50,R0
    000034EC 8B01                   BF          L5152
    000034EE A2D9                   BRA         L2745
    000034F0 0009                   NOP
    000034F2              L5152:                            
    000034F2 8861                   CMP/EQ      #97,R0
    000034F4 8B01                   BF          L5153
    000034F6 A3D3                   BRA         L2747
    000034F8 0009                   NOP
    000034FA              L5153:                            
    000034FA 8862                   CMP/EQ      #98,R0
    000034FC 8B01                   BF          L5154
    000034FE A47D                   BRA         L2751
    00003500 0009                   NOP
    00003502              L5154:                            
    00003502 8818                   CMP/EQ      #24,R0
    00003504 8B01                   BF          L5155
    00003506 A4F3                   BRA         L2754
    00003508 0009                   NOP
    0000350A              L5155:                            
    0000350A 8819                   CMP/EQ      #25,R0
    0000350C 8B01                   BF          L5156
    0000350E A4F4                   BRA         L2755
    00003510 0009                   NOP
    00003512              L5156:                            
    00003512 882E                   CMP/EQ      #46,R0
    00003514 8B01                   BF          L5157




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  166


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003516 A519                   BRA         L2756
    00003518 0009                   NOP
    0000351A              L5157:                            
    0000351A 8843                   CMP/EQ      #67,R0
    0000351C 8B01                   BF          L5158
    0000351E A524                   BRA         L2757
    00003520 0009                   NOP
    00003522              L5158:                            
    00003522 885B                   CMP/EQ      #91,R0
    00003524 8B01                   BF          L5159
    00003526 A526                   BRA         L2758
    00003528 0009                   NOP
    0000352A              L5159:                            
    0000352A 8808                   CMP/EQ      #8,R0
    0000352C 8B01                   BF          L5160
    0000352E A545                   BRA         L2759
    00003530 0009                   NOP
    00003532              L5160:                            
    00003532 8809                   CMP/EQ      #9,R0
    00003534 8B01                   BF          L5161
    00003536 A564                   BRA         L2760
    00003538 0009                   NOP
    0000353A              L5161:                            
    0000353A A66A                   BRA         L4476
    0000353C 0009                   NOP
    0000353E              L2736:                           ; case label 
          EDIT.c  2366              {
          EDIT.c  2367              
          EDIT.c  2368                //File open / Save as / Auto set
          EDIT.c  2369                case NODEEXPLOPEN:
          EDIT.c  2370                case NODEAUTOSET:
    0000353E              L2737:                           ; case label 
          EDIT.c  2371                  if(_sFiles[iStart+iRow].iType==DT_DIRECTORY)
    0000353E 902E                   MOV.W       L5146+4,R0 ; H'00BC
    00003540 03FE                   MOV.L       @(R0,R15),R3
    00003542 902D                   MOV.W       L5146+6,R0 ; H'00C0
    00003544 02FE                   MOV.L       @(R0,R15),R2
    00003546 323C                   ADD         R3,R2
    00003548 6123                   MOV         R2,R1
    0000354A 4200                   SHLL        R2
    0000354C 321C                   ADD         R1,R2
    0000354E 4208                   SHLL2       R2
    00003550 D116                   MOV.L       L5146+18,R1; __sFiles
    00003552 4200                   SHLL        R2
    00003554 6012                   MOV.L       @R1,R0
    00003556 320C                   ADD         R0,R2
    00003558 8527                   MOV.W       @(14,R2),R0
    0000355A 2008                   TST         R0,R0
    0000355C 8B2A                   BF          L4479
          EDIT.c  2372                  {
          EDIT.c  2373                    strcpy(sFolder,_sFiles[iStart+iRow].sCName);
    0000355E 901E                   MOV.W       L5146+4,R0 ; H'00BC
    00003560 921E                   MOV.W       L5146+6,R2 ; H'00C0
    00003562 00FE                   MOV.L       @(R0,R15),R0
    00003564 32FC                   ADD         R15,R2
    00003566 6322                   MOV.L       @R2,R3
    00003568 6212                   MOV.L       @R1,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  167


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000356A 330C                   ADD         R0,R3
    0000356C 6033                   MOV         R3,R0
    0000356E 4300                   SHLL        R3
    00003570 330C                   ADD         R0,R3
    00003572 4308                   SHLL2       R3
    00003574 9015                   MOV.W       L5146+8,R0 ; H'011C
    00003576 4300                   SHLL        R3
    00003578 332C                   ADD         R2,R3
    0000357A 6133                   MOV         R3,R1
    0000357C D30C                   MOV.L       L5146+22,R3; __slow_strcpy
    0000357E 430B                   JSR         @R3
    00003580 00FE                   MOV.L       @(R0,R15),R0
          EDIT.c  2374                    iStart=0;
    00003582 E200                   MOV         #0,R2
    00003584 900C                   MOV.W       L5146+6,R0 ; H'00C0
          EDIT.c  2375                    iRow=0;
    00003586 6323                   MOV         R2,R3
    00003588 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2376                    iReadFiles=1;
    0000358A E201                   MOV         #1,R2
    0000358C 9007                   MOV.W       L5146+4,R0 ; H'00BC
    0000358E 0F36                   MOV.L       R3,@(R0,R15)
    00003590 9008                   MOV.W       L5146+10,R0; H'0100
          EDIT.c  2377                    iRefresh=1;
    00003592 6323                   MOV         R2,R3
    00003594 0F26                   MOV.L       R2,@(R0,R15)
    00003596 A5FC                   BRA         L4941
    00003598 0009                   NOP
    0000359A              L5146:                            
    0000359A 00A8                   .DATA.W     H'00A8
    0000359C 00B4                   .DATA.W     H'00B4
    0000359E 00BC                   .DATA.W     H'00BC
    000035A0 00C0                   .DATA.W     H'00C0
    000035A2 011C                   .DATA.W     H'011C
    000035A4 0100                   .DATA.W     H'0100
    000035A6 0000                   .DATA.W     0
    000035A8 <00000000>             .DATA.L     _MenuFunctionKey
    000035AC <00000000>             .DATA.L     __sFiles
    000035B0 <00000000>             .DATA.L     __slow_strcpy
    000035B4              L4479:                            
          EDIT.c  2378                  }
          EDIT.c  2379                  else
          EDIT.c  2380                  {
          EDIT.c  2381                    strcpy(sFile,_sFiles[iStart+iRow].sCName);
    000035B4 9077                   MOV.W       L5162,R0   ; H'00BC
    000035B6 00FE                   MOV.L       @(R0,R15),R0
    000035B8 9276                   MOV.W       L5162+2,R2 ; H'00C0
    000035BA 32FC                   ADD         R15,R2
    000035BC 6322                   MOV.L       @R2,R3
    000035BE 330C                   ADD         R0,R3
    000035C0 6212                   MOV.L       @R1,R2
    000035C2 6033                   MOV         R3,R0
    000035C4 4300                   SHLL        R3
    000035C6 330C                   ADD         R0,R3
    000035C8 906F                   MOV.W       L5162+4,R0 ; H'0118
    000035CA 4308                   SHLL2       R3
    000035CC 4300                   SHLL        R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  168


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000035CE 332C                   ADD         R2,R3
    000035D0 6133                   MOV         R3,R1
    000035D2 D339                   MOV.L       L5162+18,R3; __slow_strcpy
    000035D4 430B                   JSR         @R3
    000035D6 00FE                   MOV.L       @(R0,R15),R0
          EDIT.c  2382                    iExit=1;
    000035D8 9068                   MOV.W       L5162+6,R0 ; H'010C
    000035DA E201                   MOV         #1,R2
    000035DC 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2383                    *iNew=0;
    000035DE E200                   MOV         #0,R2
    000035E0 9065                   MOV.W       L5162+8,R0 ; H'0130
    000035E2 03FE                   MOV.L       @(R0,R15),R3
    000035E4 2322                   MOV.L       R2,@R3
          EDIT.c  2384                  }
          EDIT.c  2385                  break;
    000035E6 A614                   BRA         L4476
    000035E8 0009                   NOP
    000035EA              L2738:                           ; case label 
          EDIT.c  2386                
          EDIT.c  2387                  
          EDIT.c  2388                //New file
          EDIT.c  2389                case NODEEXPLNEW: 
          EDIT.c  2390                  if(iFiles!=0) 
    000035EA 9061                   MOV.W       L5162+10,R0; H'0108
    000035EC 01FE                   MOV.L       @(R0,R15),R1
    000035EE 2118                   TST         R1,R1
    000035F0 8914                   BT          L4481
          EDIT.c  2391                    strcpy(sFileAux,_sFiles[iStart+iRow].sCName);
    000035F2 9058                   MOV.W       L5162,R0   ; H'00BC
    000035F4 9158                   MOV.W       L5162+2,R1 ; H'00C0
    000035F6 00FE                   MOV.L       @(R0,R15),R0
    000035F8 31FC                   ADD         R15,R1
    000035FA 6312                   MOV.L       @R1,R3
    000035FC D12F                   MOV.L       L5162+22,R1; __sFiles
    000035FE 330C                   ADD         R0,R3
    00003600 6212                   MOV.L       @R1,R2
    00003602 6033                   MOV         R3,R0
    00003604 4300                   SHLL        R3
    00003606 330C                   ADD         R0,R3
    00003608 4308                   SHLL2       R3
    0000360A 4300                   SHLL        R3
    0000360C 332C                   ADD         R2,R3
    0000360E 6133                   MOV         R3,R1
    00003610 D329                   MOV.L       L5162+18,R3; __slow_strcpy
    00003612 60F3                   MOV         R15,R0
    00003614 430B                   JSR         @R3
    00003616 707C                   ADD         #124,R0
    00003618 A006                   BRA         L4482
    0000361A 0009                   NOP
    0000361C              L4481:                            
          EDIT.c  2392                  else
          EDIT.c  2393                    memset(sFileAux,0,MAXFNAME);
    0000361C D328                   MOV.L       L5162+26,R3; _memset
    0000361E E60D                   MOV         #13,R6
    00003620 E500                   MOV         #0,R5
    00003622 64F3                   MOV         R15,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  169


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003624 430B                   JSR         @R3
    00003626 747C                   ADD         #124,R4
    00003628              L4482:                            
          EDIT.c  2394                  iAnswer=GetFileName(sFileAux,FMAXLEN(sRoot));
    00003628 D526                   MOV.L       L5162+30,R5; L620
    0000362A 9042                   MOV.W       L5162+12,R0; H'0120
    0000362C D326                   MOV.L       L5162+34,R3; __slow_strcmp1
    0000362E 430B                   JSR         @R3
    00003630 04FE                   MOV.L       @(R0,R15),R4
    00003632 2008                   TST         R0,R0
    00003634 8B01                   BF          L4483
    00003636 A001                   BRA         L4484
    00003638 E508                   MOV         #8,R5
    0000363A              L4483:                            
    0000363A E50C                   MOV         #12,R5
    0000363C              L4484:                            
    0000363C D223                   MOV.L       L5162+38,R2; _GetFileName
    0000363E 64F3                   MOV         R15,R4
    00003640 420B                   JSR         @R2
    00003642 747C                   ADD         #124,R4
    00003644 9136                   MOV.W       L5162+14,R1; H'00F8
          EDIT.c  2395                  if(iAnswer==1)
    00003646 8801                   CMP/EQ      #1,R0
    00003648 31FC                   ADD         R15,R1
    0000364A 8D02                   BT/S        L5163
    0000364C 2102                   MOV.L       R0,@R1
    0000364E A5E0                   BRA         L4476
    00003650 0009                   NOP
    00003652              L5163:                            
          EDIT.c  2396                  {
          EDIT.c  2397                    if(FileExist(sRoot,sFolder,sFileAux)==1)
    00003652 66F3                   MOV         R15,R6
    00003654 902F                   MOV.W       L5162+16,R0; H'011C
    00003656 767C                   ADD         #124,R6
    00003658 D31D                   MOV.L       L5162+42,R3; _FileExist
    0000365A 05FE                   MOV.L       @(R0,R15),R5
    0000365C 9029                   MOV.W       L5162+12,R0; H'0120
    0000365E 430B                   JSR         @R3
    00003660 04FE                   MOV.L       @(R0,R15),R4
    00003662 8801                   CMP/EQ      #1,R0
    00003664 8B08                   BF          L4486
          EDIT.c  2398                    {
          EDIT.c  2399                      iAnswer=PopupContinueYesNo("File exists.","Continue?",NULL);
    00003666 D51B                   MOV.L       L5162+46,R5; L612
    00003668 D41B                   MOV.L       L5162+50,R4; L611
    0000366A D31C                   MOV.L       L5162+54,R3; _PopupContinueYesNo
    0000366C 430B                   JSR         @R3
    0000366E E600                   MOV         #0,R6
    00003670 9120                   MOV.W       L5162+14,R1; H'00F8
    00003672 31FC                   ADD         R15,R1
    00003674 A003                   BRA         L4487
    00003676 2102                   MOV.L       R0,@R1
    00003678              L4486:                            
          EDIT.c  2400                    }
          EDIT.c  2401                    else
          EDIT.c  2402                      iAnswer=1;
    00003678 901C                   MOV.W       L5162+14,R0; H'00F8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  170


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000367A E201                   MOV         #1,R2
    0000367C 0F26                   MOV.L       R2,@(R0,R15)
    0000367E              L4487:                            
          EDIT.c  2403                    if(iAnswer==1)
    0000367E 9019                   MOV.W       L5162+14,R0; H'00F8
    00003680 00FE                   MOV.L       @(R0,R15),R0
    00003682 8801                   CMP/EQ      #1,R0
    00003684 8901                   BT          L5164
    00003686 A5C4                   BRA         L4476
    00003688 0009                   NOP
    0000368A              L5164:                            
          EDIT.c  2404                    {
          EDIT.c  2405                      strcpy(sFile,sFileAux);
    0000368A 61F3                   MOV         R15,R1
    0000368C 900D                   MOV.W       L5162+4,R0 ; H'0118
    0000368E 717C                   ADD         #124,R1
    00003690 D209                   MOV.L       L5162+18,R2; __slow_strcpy
    00003692 420B                   JSR         @R2
    00003694 00FE                   MOV.L       @(R0,R15),R0
          EDIT.c  2406                      iExit=1;
    00003696 E301                   MOV         #1,R3
    00003698 9008                   MOV.W       L5162+6,R0 ; H'010C
    0000369A 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2407                      *iNew=1;
    0000369C 9007                   MOV.W       L5162+8,R0 ; H'0130
    0000369E 02FE                   MOV.L       @(R0,R15),R2
    000036A0 2232                   MOV.L       R3,@R2
          EDIT.c  2408                    }
          EDIT.c  2409                  }
          EDIT.c  2410                  break;
    000036A2 A5B6                   BRA         L4476
    000036A4 0009                   NOP
    000036A6              L5162:                            
    000036A6 00BC                   .DATA.W     H'00BC
    000036A8 00C0                   .DATA.W     H'00C0
    000036AA 0118                   .DATA.W     H'0118
    000036AC 010C                   .DATA.W     H'010C
    000036AE 0130                   .DATA.W     H'0130
    000036B0 0108                   .DATA.W     H'0108
    000036B2 0120                   .DATA.W     H'0120
    000036B4 00F8                   .DATA.W     H'00F8
    000036B6 011C                   .DATA.W     H'011C
    000036B8 <00000000>             .DATA.L     __slow_strcpy
    000036BC <00000000>             .DATA.L     __sFiles
    000036C0 <00000000>             .DATA.L     _memset
    000036C4 <00000000>             .DATA.L     L620
    000036C8 <00000000>             .DATA.L     __slow_strcmp1
    000036CC <00000000>             .DATA.L     _GetFileName
    000036D0 <00000000>             .DATA.L     _FileExist
    000036D4 <00000000>             .DATA.L     L612
    000036D8 <00000000>             .DATA.L     L611
    000036DC <00000000>             .DATA.L     _PopupContinueYesNo
    000036E0              L2739:                           ; case label 
          EDIT.c  2411                  
          EDIT.c  2412                //File rename
          EDIT.c  2413                case NODEEXPLREN:
          EDIT.c  2414                  if(_sFiles[iStart+iRow].iType!=DT_DIRECTORY)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  171


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000036E0 908D                   MOV.W       L5165,R0   ; H'00BC
    000036E2 03FE                   MOV.L       @(R0,R15),R3
    000036E4 908C                   MOV.W       L5165+2,R0 ; H'00C0
    000036E6 02FE                   MOV.L       @(R0,R15),R2
    000036E8 323C                   ADD         R3,R2
    000036EA 6123                   MOV         R2,R1
    000036EC 4200                   SHLL        R2
    000036EE 321C                   ADD         R1,R2
    000036F0 D147                   MOV.L       L5165+18,R1; __sFiles
    000036F2 4208                   SHLL2       R2
    000036F4 6012                   MOV.L       @R1,R0
    000036F6 4200                   SHLL        R2
    000036F8 320C                   ADD         R0,R2
    000036FA 8527                   MOV.W       @(14,R2),R0
    000036FC 2008                   TST         R0,R0
    000036FE 8B01                   BF          L5166
    00003700 A587                   BRA         L4476
    00003702 0009                   NOP
    00003704              L5166:                            
          EDIT.c  2415                  {
          EDIT.c  2416                    strcpy(sFileAux,_sFiles[iStart+iRow].sCName);
    00003704 907B                   MOV.W       L5165,R0   ; H'00BC
    00003706 00FE                   MOV.L       @(R0,R15),R0
    00003708 927A                   MOV.W       L5165+2,R2 ; H'00C0
    0000370A 32FC                   ADD         R15,R2
    0000370C 6322                   MOV.L       @R2,R3
    0000370E 330C                   ADD         R0,R3
    00003710 6212                   MOV.L       @R1,R2
    00003712 6033                   MOV         R3,R0
    00003714 4300                   SHLL        R3
    00003716 330C                   ADD         R0,R3
    00003718 4308                   SHLL2       R3
    0000371A 4300                   SHLL        R3
    0000371C 332C                   ADD         R2,R3
    0000371E 6133                   MOV         R3,R1
    00003720 D33C                   MOV.L       L5165+22,R3; __slow_strcpy
    00003722 60F3                   MOV         R15,R0
    00003724 430B                   JSR         @R3
    00003726 707C                   ADD         #124,R0
          EDIT.c  2417                    if(GetFileName(sFileAux,FMAXLEN(sRoot)))
    00003728 D53B                   MOV.L       L5165+26,R5; L620
    0000372A 906A                   MOV.W       L5165+4,R0 ; H'0120
    0000372C D33B                   MOV.L       L5165+30,R3; __slow_strcmp1
    0000372E 430B                   JSR         @R3
    00003730 04FE                   MOV.L       @(R0,R15),R4
    00003732 2008                   TST         R0,R0
    00003734 8B01                   BF          L4491
    00003736 A001                   BRA         L4492
    00003738 E508                   MOV         #8,R5
    0000373A              L4491:                            
    0000373A E50C                   MOV         #12,R5
    0000373C              L4492:                            
    0000373C D238                   MOV.L       L5165+34,R2; _GetFileName
    0000373E 64F3                   MOV         R15,R4
    00003740 420B                   JSR         @R2
    00003742 747C                   ADD         #124,R4
    00003744 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  172


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003746 8B01                   BF          L5167
    00003748 A084                   BRA         L4490
    0000374A 0009                   NOP
    0000374C              L5167:                            
          EDIT.c  2418                    {
          EDIT.c  2419                      if(FileExist(sRoot,sFolder,sFileAux)==1)
    0000374C 905A                   MOV.W       L5165+6,R0 ; H'011C
    0000374E 66F3                   MOV         R15,R6
    00003750 D334                   MOV.L       L5165+38,R3; _FileExist
    00003752 767C                   ADD         #124,R6
    00003754 05FE                   MOV.L       @(R0,R15),R5
    00003756 9054                   MOV.W       L5165+4,R0 ; H'0120
    00003758 430B                   JSR         @R3
    0000375A 04FE                   MOV.L       @(R0,R15),R4
    0000375C 8801                   CMP/EQ      #1,R0
    0000375E 8B08                   BF          L4493
          EDIT.c  2420                        iAnswer=PopupContinueYesNo("File exists.","Overwrite?",NULL);
    00003760 D531                   MOV.L       L5165+42,R5; L622
    00003762 D432                   MOV.L       L5165+46,R4; L611
    00003764 D332                   MOV.L       L5165+50,R3; _PopupContinueYesNo
    00003766 430B                   JSR         @R3
    00003768 E600                   MOV         #0,R6
    0000376A 914C                   MOV.W       L5165+8,R1 ; H'00F8
    0000376C 31FC                   ADD         R15,R1
    0000376E A003                   BRA         L4494
    00003770 2102                   MOV.L       R0,@R1
    00003772              L4493:                            
          EDIT.c  2421                      else
          EDIT.c  2422                        iAnswer=1;
    00003772 E201                   MOV         #1,R2
    00003774 9047                   MOV.W       L5165+8,R0 ; H'00F8
    00003776 0F26                   MOV.L       R2,@(R0,R15)
    00003778              L4494:                            
          EDIT.c  2423                      if(iAnswer==1)
    00003778 9045                   MOV.W       L5165+8,R0 ; H'00F8
    0000377A 00FE                   MOV.L       @(R0,R15),R0
    0000377C 8801                   CMP/EQ      #1,R0
    0000377E 8B69                   BF          L4490
          EDIT.c  2424                      {
          EDIT.c  2425                        strcpy(sFile,_sFiles[iStart+iRow].sCName);
    00003780 903D                   MOV.W       L5165,R0   ; H'00BC
    00003782 00FE                   MOV.L       @(R0,R15),R0
    00003784 913C                   MOV.W       L5165+2,R1 ; H'00C0
    00003786 31FC                   ADD         R15,R1
    00003788 6312                   MOV.L       @R1,R3
    0000378A 330C                   ADD         R0,R3
    0000378C D120                   MOV.L       L5165+18,R1; __sFiles
    0000378E 6033                   MOV         R3,R0
    00003790 6212                   MOV.L       @R1,R2
    00003792 4300                   SHLL        R3
    00003794 330C                   ADD         R0,R3
    00003796 4308                   SHLL2       R3
    00003798 9036                   MOV.W       L5165+10,R0; H'0118
    0000379A 4300                   SHLL        R3
    0000379C 332C                   ADD         R2,R3
    0000379E 6133                   MOV         R3,R1
    000037A0 D31C                   MOV.L       L5165+22,R3; __slow_strcpy




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  173


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000037A2 430B                   JSR         @R3
    000037A4 00FE                   MOV.L       @(R0,R15),R0
          EDIT.c  2426                        if(CopyFile(sRoot,sFolder,sFile,sRoot,sFolder,sFileAux)==1)
    000037A6 62F3                   MOV         R15,R2
    000037A8 902B                   MOV.W       L5165+4,R0 ; H'0120
    000037AA 727C                   ADD         #124,R2
    000037AC 2F26                   MOV.L       R2,@-R15
    000037AE 03FE                   MOV.L       @(R0,R15),R3
    000037B0 902B                   MOV.W       L5165+12,R0; H'0128
    000037B2 2F36                   MOV.L       R3,@-R15
    000037B4 07FE                   MOV.L       @(R0,R15),R7
    000037B6 9024                   MOV.W       L5165+4,R0 ; H'0120
    000037B8 D31E                   MOV.L       L5165+54,R3; _CopyFile
    000037BA 06FE                   MOV.L       @(R0,R15),R6
    000037BC 9026                   MOV.W       L5165+14,R0; H'0124
    000037BE 05FE                   MOV.L       @(R0,R15),R5
    000037C0 430B                   JSR         @R3
    000037C2 6473                   MOV         R7,R4
    000037C4 8801                   CMP/EQ      #1,R0
    000037C6 8F3B                   BF/S        L4496
    000037C8 7F08                   ADD         #8,R15
          EDIT.c  2427                        {
          EDIT.c  2428                          DeleteFile(sRoot,sFolder,sFile);
    000037CA 901D                   MOV.W       L5165+10,R0; H'0118
    000037CC D31A                   MOV.L       L5165+58,R3; _DeleteFile
    000037CE 06FE                   MOV.L       @(R0,R15),R6
    000037D0 9018                   MOV.W       L5165+6,R0 ; H'011C
    000037D2 05FE                   MOV.L       @(R0,R15),R5
    000037D4 9015                   MOV.W       L5165+4,R0 ; H'0120
    000037D6 430B                   JSR         @R3
    000037D8 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2429                          sprintf(sFile,sFileAux);
    000037DA 62F3                   MOV         R15,R2
    000037DC 9012                   MOV.W       L5165+6,R0 ; H'011C
    000037DE 727C                   ADD         #124,R2
    000037E0 D316                   MOV.L       L5165+62,R3; _sprintf
    000037E2 2F26                   MOV.L       R2,@-R15
    000037E4 430B                   JSR         @R3
    000037E6 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2430                          iStart=0;
    000037E8 900A                   MOV.W       L5165+2,R0 ; H'00C0
    000037EA 7F04                   ADD         #4,R15
    000037EC E200                   MOV         #0,R2
          EDIT.c  2431                          iRow=0;
    000037EE 6323                   MOV         R2,R3
    000037F0 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2432                          iReadFiles=1;
    000037F2 E201                   MOV         #1,R2
    000037F4 9003                   MOV.W       L5165,R0   ; H'00BC
    000037F6 0F36                   MOV.L       R3,@(R0,R15)
    000037F8 9009                   MOV.W       L5165+16,R0; H'0100
    000037FA A02B                   BRA         L4490
    000037FC 0F26                   MOV.L       R2,@(R0,R15)
    000037FE              L5165:                            
    000037FE 00BC                   .DATA.W     H'00BC
    00003800 00C0                   .DATA.W     H'00C0
    00003802 0120                   .DATA.W     H'0120




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  174


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003804 011C                   .DATA.W     H'011C
    00003806 00F8                   .DATA.W     H'00F8
    00003808 0118                   .DATA.W     H'0118
    0000380A 0128                   .DATA.W     H'0128
    0000380C 0124                   .DATA.W     H'0124
    0000380E 0100                   .DATA.W     H'0100
    00003810 <00000000>             .DATA.L     __sFiles
    00003814 <00000000>             .DATA.L     __slow_strcpy
    00003818 <00000000>             .DATA.L     L620
    0000381C <00000000>             .DATA.L     __slow_strcmp1
    00003820 <00000000>             .DATA.L     _GetFileName
    00003824 <00000000>             .DATA.L     _FileExist
    00003828 <00000000>             .DATA.L     L622
    0000382C <00000000>             .DATA.L     L611
    00003830 <00000000>             .DATA.L     _PopupContinueYesNo
    00003834 <00000000>             .DATA.L     _CopyFile
    00003838 <00000000>             .DATA.L     _DeleteFile
    0000383C <00000000>             .DATA.L     _sprintf
    00003840              L4496:                            
          EDIT.c  2433                        }
          EDIT.c  2434                        else
          EDIT.c  2435                          PopupMessage(1,"File rename error!",NULL,NULL,NULL,NULL);
    00003840 D53A                   MOV.L       L5168+18,R5; L1015
    00003842 E100                   MOV         #0,R1
    00003844 D33A                   MOV.L       L5168+22,R3; _PopupMessage
    00003846 6713                   MOV         R1,R7
    00003848 2F16                   MOV.L       R1,@-R15
    0000384A 6613                   MOV         R1,R6
    0000384C 2F16                   MOV.L       R1,@-R15
    0000384E 430B                   JSR         @R3
    00003850 E401                   MOV         #1,R4
    00003852 7F08                   ADD         #8,R15
    00003854              L4490:                            
          EDIT.c  2436                      }
          EDIT.c  2437                    }
          EDIT.c  2438                    iRefresh=1;
    00003854 9061                   MOV.W       L5168,R0   ; H'00FC
    00003856 E201                   MOV         #1,R2
          EDIT.c  2439                  }
          EDIT.c  2440                  break;
    00003858 A4DB                   BRA         L4476
    0000385A 0F26                   MOV.L       R2,@(R0,R15)
    0000385C              L2741:                           ; case label 
          EDIT.c  2441                
          EDIT.c  2442                //File copy
          EDIT.c  2443                case NODEEXPLCOPY:
          EDIT.c  2444                  if(_sFiles[iStart+iRow].iType!=DT_DIRECTORY)
    0000385C 905E                   MOV.W       L5168+2,R0 ; H'00BC
    0000385E 03FE                   MOV.L       @(R0,R15),R3
    00003860 905D                   MOV.W       L5168+4,R0 ; H'00C0
    00003862 01FE                   MOV.L       @(R0,R15),R1
    00003864 313C                   ADD         R3,R1
    00003866 6213                   MOV         R1,R2
    00003868 4100                   SHLL        R1
    0000386A 312C                   ADD         R2,R1
    0000386C D231                   MOV.L       L5168+26,R2; __sFiles
    0000386E 4108                   SHLL2       R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  175


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003870 6022                   MOV.L       @R2,R0
    00003872 4100                   SHLL        R1
    00003874 310C                   ADD         R0,R1
    00003876 8517                   MOV.W       @(14,R1),R0
    00003878 2008                   TST         R0,R0
    0000387A 8B01                   BF          L5169
    0000387C A4C9                   BRA         L4476
    0000387E 0009                   NOP
    00003880              L5169:                            
          EDIT.c  2445                  {
          EDIT.c  2446                    strcpy(sRootAux,sRoot);
    00003880 904E                   MOV.W       L5168+6,R0 ; H'0120
    00003882 01FE                   MOV.L       @(R0,R15),R1
    00003884 904D                   MOV.W       L5168+8,R0 ; H'009C
    00003886 D32C                   MOV.L       L5168+30,R3; __slow_strcpy
    00003888 430B                   JSR         @R3
    0000388A 30FC                   ADD         R15,R0
          EDIT.c  2447                    strcpy(sFolderAux,sFolder);
    0000388C 904A                   MOV.W       L5168+10,R0; H'011C
    0000388E 01FE                   MOV.L       @(R0,R15),R1
    00003890 9049                   MOV.W       L5168+12,R0; H'008C
    00003892 D329                   MOV.L       L5168+30,R3; __slow_strcpy
    00003894 430B                   JSR         @R3
    00003896 30FC                   ADD         R15,R0
          EDIT.c  2448                    if(GetFolder(sRootAux,sFolderAux,sConfig))
    00003898 9046                   MOV.W       L5168+14,R0; H'012C
    0000389A 06FE                   MOV.L       @(R0,R15),R6
    0000389C 9543                   MOV.W       L5168+12,R5; H'008C
    0000389E 35FC                   ADD         R15,R5
    000038A0 943F                   MOV.W       L5168+8,R4 ; H'009C
    000038A2 B54E                   BSR         _GetFolder
    000038A4 34FC                   ADD         R15,R4
    000038A6 2008                   TST         R0,R0
    000038A8 8B01                   BF          L5170
    000038AA A09A                   BRA         L4499
    000038AC 0009                   NOP
    000038AE              L5170:                            
          EDIT.c  2449                    {
          EDIT.c  2450                      strcpy(sFileAux,_sFiles[iStart+iRow].sCName);
    000038AE 9035                   MOV.W       L5168+2,R0 ; H'00BC
    000038B0 9135                   MOV.W       L5168+4,R1 ; H'00C0
    000038B2 00FE                   MOV.L       @(R0,R15),R0
    000038B4 31FC                   ADD         R15,R1
    000038B6 6312                   MOV.L       @R1,R3
    000038B8 D11E                   MOV.L       L5168+26,R1; __sFiles
    000038BA 330C                   ADD         R0,R3
    000038BC 6212                   MOV.L       @R1,R2
    000038BE 6033                   MOV         R3,R0
    000038C0 4300                   SHLL        R3
    000038C2 330C                   ADD         R0,R3
    000038C4 4308                   SHLL2       R3
    000038C6 4300                   SHLL        R3
    000038C8 332C                   ADD         R2,R3
    000038CA 6133                   MOV         R3,R1
    000038CC D31A                   MOV.L       L5168+30,R3; __slow_strcpy
    000038CE 60F3                   MOV         R15,R0
    000038D0 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  176


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000038D2 707C                   ADD         #124,R0
          EDIT.c  2451                      if(GetFileName(sFileAux,FMAXLEN(sRootAux)))
    000038D4 D519                   MOV.L       L5168+34,R5; L620
    000038D6 9424                   MOV.W       L5168+8,R4 ; H'009C
    000038D8 D219                   MOV.L       L5168+38,R2; __quick_strcmp1
    000038DA 420B                   JSR         @R2
    000038DC 34FC                   ADD         R15,R4
    000038DE 2008                   TST         R0,R0
    000038E0 8B01                   BF          L4501
    000038E2 A001                   BRA         L4502
    000038E4 E508                   MOV         #8,R5
    000038E6              L4501:                            
    000038E6 E50C                   MOV         #12,R5
    000038E8              L4502:                            
    000038E8 D316                   MOV.L       L5168+42,R3; _GetFileName
    000038EA 64F3                   MOV         R15,R4
    000038EC 430B                   JSR         @R3
    000038EE 747C                   ADD         #124,R4
    000038F0 2008                   TST         R0,R0
    000038F2 8976                   BT          L4499
          EDIT.c  2452                      {
          EDIT.c  2453                        if(FileExist(sRootAux,sFolderAux,sFileAux)==1)
    000038F4 9517                   MOV.W       L5168+12,R5; H'008C
    000038F6 66F3                   MOV         R15,R6
    000038F8 9413                   MOV.W       L5168+8,R4 ; H'009C
    000038FA 35FC                   ADD         R15,R5
    000038FC D312                   MOV.L       L5168+46,R3; _FileExist
    000038FE 767C                   ADD         #124,R6
    00003900 430B                   JSR         @R3
    00003902 34FC                   ADD         R15,R4
    00003904 8801                   CMP/EQ      #1,R0
    00003906 8B27                   BF          L4503
          EDIT.c  2454                          iAnswer=PopupContinueYesNo("File exists.","Overwrite?",NULL);
    00003908 D510                   MOV.L       L5168+50,R5; L622
    0000390A D411                   MOV.L       L5168+54,R4; L611
    0000390C D311                   MOV.L       L5168+58,R3; _PopupContinueYesNo
    0000390E 430B                   JSR         @R3
    00003910 E600                   MOV         #0,R6
    00003912 910A                   MOV.W       L5168+16,R1; H'00F8
    00003914 31FC                   ADD         R15,R1
    00003916 A022                   BRA         L4504
    00003918 2102                   MOV.L       R0,@R1
    0000391A              L5168:                            
    0000391A 00FC                   .DATA.W     H'00FC
    0000391C 00BC                   .DATA.W     H'00BC
    0000391E 00C0                   .DATA.W     H'00C0
    00003920 0120                   .DATA.W     H'0120
    00003922 009C                   .DATA.W     H'009C
    00003924 011C                   .DATA.W     H'011C
    00003926 008C                   .DATA.W     H'008C
    00003928 012C                   .DATA.W     H'012C
    0000392A 00F8                   .DATA.W     H'00F8
    0000392C <00000000>             .DATA.L     L1015
    00003930 <00000000>             .DATA.L     _PopupMessage
    00003934 <00000000>             .DATA.L     __sFiles
    00003938 <00000000>             .DATA.L     __slow_strcpy
    0000393C <00000000>             .DATA.L     L620




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  177


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003940 <00000000>             .DATA.L     __quick_strcmp1
    00003944 <00000000>             .DATA.L     _GetFileName
    00003948 <00000000>             .DATA.L     _FileExist
    0000394C <00000000>             .DATA.L     L622
    00003950 <00000000>             .DATA.L     L611
    00003954 <00000000>             .DATA.L     _PopupContinueYesNo
    00003958              L4503:                            
          EDIT.c  2455                        else
          EDIT.c  2456                          iAnswer=1;
    00003958 9087                   MOV.W       L5171,R0   ; H'00F8
    0000395A E201                   MOV         #1,R2
    0000395C 0F26                   MOV.L       R2,@(R0,R15)
    0000395E              L4504:                            
          EDIT.c  2457                        if(iAnswer==1)
    0000395E 9084                   MOV.W       L5171,R0   ; H'00F8
    00003960 00FE                   MOV.L       @(R0,R15),R0
    00003962 8801                   CMP/EQ      #1,R0
    00003964 8B3D                   BF          L4499
          EDIT.c  2458                        {
          EDIT.c  2459                          strcpy(sFile,_sFiles[iStart+iRow].sCName);
    00003966 9081                   MOV.W       L5171+2,R0 ; H'00BC
    00003968 9181                   MOV.W       L5171+4,R1 ; H'00C0
    0000396A 00FE                   MOV.L       @(R0,R15),R0
    0000396C 31FC                   ADD         R15,R1
    0000396E 6312                   MOV.L       @R1,R3
    00003970 D144                   MOV.L       L5171+26,R1; __sFiles
    00003972 330C                   ADD         R0,R3
    00003974 6212                   MOV.L       @R1,R2
    00003976 6033                   MOV         R3,R0
    00003978 4300                   SHLL        R3
    0000397A 330C                   ADD         R0,R3
    0000397C 9078                   MOV.W       L5171+6,R0 ; H'0118
    0000397E 4308                   SHLL2       R3
    00003980 4300                   SHLL        R3
    00003982 332C                   ADD         R2,R3
    00003984 6133                   MOV         R3,R1
    00003986 D340                   MOV.L       L5171+30,R3; __slow_strcpy
    00003988 430B                   JSR         @R3
    0000398A 00FE                   MOV.L       @(R0,R15),R0
          EDIT.c  2460                          if(CopyFile(sRoot,sFolder,sFile,sRootAux,sFolderAux,sFileAux)==1)
    0000398C 9371                   MOV.W       L5171+8,R3 ; H'0090
    0000398E 62F3                   MOV         R15,R2
    00003990 9770                   MOV.W       L5171+10,R7; H'00A4
    00003992 727C                   ADD         #124,R2
    00003994 906F                   MOV.W       L5171+12,R0; H'0120
    00003996 2F26                   MOV.L       R2,@-R15
    00003998 33FC                   ADD         R15,R3
    0000399A 2F36                   MOV.L       R3,@-R15
    0000399C 06FE                   MOV.L       @(R0,R15),R6
    0000399E 37FC                   ADD         R15,R7
    000039A0 D33A                   MOV.L       L5171+34,R3; _CopyFile
    000039A2 9069                   MOV.W       L5171+14,R0; H'0124
    000039A4 05FE                   MOV.L       @(R0,R15),R5
    000039A6 9068                   MOV.W       L5171+16,R0; H'0128
    000039A8 430B                   JSR         @R3
    000039AA 04FE                   MOV.L       @(R0,R15),R4
    000039AC 8801                   CMP/EQ      #1,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  178


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000039AE 8F0B                   BF/S        L4506
    000039B0 7F08                   ADD         #8,R15
          EDIT.c  2461                          {
          EDIT.c  2462                            iStart=0;
    000039B2 E300                   MOV         #0,R3
    000039B4 905B                   MOV.W       L5171+4,R0 ; H'00C0
          EDIT.c  2463                            iRow=0;
    000039B6 6233                   MOV         R3,R2
    000039B8 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2464                            iReadFiles=1;
    000039BA E301                   MOV         #1,R3
    000039BC 9056                   MOV.W       L5171+2,R0 ; H'00BC
    000039BE 0F26                   MOV.L       R2,@(R0,R15)
    000039C0 905C                   MOV.W       L5171+18,R0; H'0100
    000039C2 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2465                            iError=0;
    000039C4 A00B                   BRA         L4934
    000039C6 E200                   MOV         #0,R2
    000039C8              L4506:                            
          EDIT.c  2466                          }
          EDIT.c  2467                          else
          EDIT.c  2468                          {
          EDIT.c  2469                            PopupMessage(1,"File copy error!",NULL,NULL,NULL,NULL);
    000039C8 D531                   MOV.L       L5171+38,R5; L1022
    000039CA E100                   MOV         #0,R1
    000039CC D331                   MOV.L       L5171+42,R3; _PopupMessage
    000039CE 6713                   MOV         R1,R7
    000039D0 2F16                   MOV.L       R1,@-R15
    000039D2 6613                   MOV         R1,R6
    000039D4 2F16                   MOV.L       R1,@-R15
    000039D6 430B                   JSR         @R3
    000039D8 E401                   MOV         #1,R4
    000039DA 7F08                   ADD         #8,R15
          EDIT.c  2470                            iError=1;
    000039DC E201                   MOV         #1,R2
    000039DE              L4934:                            
    000039DE 904E                   MOV.W       L5171+20,R0; H'0110
    000039E0 0F26                   MOV.L       R2,@(R0,R15)
    000039E2              L4499:                            
          EDIT.c  2471                          }
          EDIT.c  2472                        }
          EDIT.c  2473                      }
          EDIT.c  2474                    }
          EDIT.c  2475                    iRefresh=1;
    000039E2 E301                   MOV         #1,R3
    000039E4 904C                   MOV.W       L5171+22,R0; H'00FC
          EDIT.c  2476                  }
          EDIT.c  2477                  break;
    000039E6 A414                   BRA         L4476
    000039E8 0F36                   MOV.L       R3,@(R0,R15)
    000039EA              L2743:                           ; case label 
          EDIT.c  2478                
          EDIT.c  2479                //File delete
          EDIT.c  2480                case NODEEXPLDEL:
          EDIT.c  2481                  if(_sFiles[iStart+iRow].iType!=DT_DIRECTORY)
    000039EA 903F                   MOV.W       L5171+2,R0 ; H'00BC
    000039EC 03FE                   MOV.L       @(R0,R15),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  179


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000039EE 903E                   MOV.W       L5171+4,R0 ; H'00C0
    000039F0 02FE                   MOV.L       @(R0,R15),R2
    000039F2 323C                   ADD         R3,R2
    000039F4 6123                   MOV         R2,R1
    000039F6 4200                   SHLL        R2
    000039F8 321C                   ADD         R1,R2
    000039FA 4208                   SHLL2       R2
    000039FC D121                   MOV.L       L5171+26,R1; __sFiles
    000039FE 4200                   SHLL        R2
    00003A00 6012                   MOV.L       @R1,R0
    00003A02 320C                   ADD         R0,R2
    00003A04 8527                   MOV.W       @(14,R2),R0
    00003A06 2008                   TST         R0,R0
    00003A08 892D                   BT          L4508
          EDIT.c  2482                  {
          EDIT.c  2483                    strcpy(sFileAux,_sFiles[iStart+iRow].sCName);
    00003A0A 902F                   MOV.W       L5171+2,R0 ; H'00BC
    00003A0C 922F                   MOV.W       L5171+4,R2 ; H'00C0
    00003A0E 00FE                   MOV.L       @(R0,R15),R0
    00003A10 32FC                   ADD         R15,R2
    00003A12 6322                   MOV.L       @R2,R3
    00003A14 6212                   MOV.L       @R1,R2
    00003A16 330C                   ADD         R0,R3
    00003A18 6033                   MOV         R3,R0
    00003A1A 4300                   SHLL        R3
    00003A1C 330C                   ADD         R0,R3
    00003A1E 4308                   SHLL2       R3
    00003A20 4300                   SHLL        R3
    00003A22 332C                   ADD         R2,R3
    00003A24 6133                   MOV         R3,R1
    00003A26 60F3                   MOV         R15,R0
    00003A28 D317                   MOV.L       L5171+30,R3; __slow_strcpy
    00003A2A 430B                   JSR         @R3
    00003A2C 707C                   ADD         #124,R0
          EDIT.c  2484                    iAnswer=PopupContinueYesNo("Delete this file?",sFileAux,NULL);
    00003A2E E600                   MOV         #0,R6
    00003A30 D419                   MOV.L       L5171+46,R4; L1024
    00003A32 65F3                   MOV         R15,R5
    00003A34 D219                   MOV.L       L5171+50,R2; _PopupContinueYesNo
    00003A36 420B                   JSR         @R2
    00003A38 757C                   ADD         #124,R5
          EDIT.c  2485                    if(iAnswer==1)
    00003A3A 8801                   CMP/EQ      #1,R0
    00003A3C 9115                   MOV.W       L5171,R1   ; H'00F8
    00003A3E 31FC                   ADD         R15,R1
    00003A40 8F11                   BF/S        L4508
    00003A42 2102                   MOV.L       R0,@R1
          EDIT.c  2486                    {
          EDIT.c  2487                      DeleteFile(sRoot,sFolder,sFileAux);
    00003A44 901D                   MOV.W       L5171+24,R0; H'011C
    00003A46 66F3                   MOV         R15,R6
    00003A48 D315                   MOV.L       L5171+54,R3; _DeleteFile
    00003A4A 767C                   ADD         #124,R6
    00003A4C 05FE                   MOV.L       @(R0,R15),R5
    00003A4E 9012                   MOV.W       L5171+12,R0; H'0120
    00003A50 430B                   JSR         @R3
    00003A52 04FE                   MOV.L       @(R0,R15),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  180


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2488                      iStart=0;
    00003A54 900B                   MOV.W       L5171+4,R0 ; H'00C0
    00003A56 E200                   MOV         #0,R2
    00003A58 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2489                      iRow=0;
    00003A5A 6323                   MOV         R2,R3
    00003A5C 9006                   MOV.W       L5171+2,R0 ; H'00BC
          EDIT.c  2490                      iReadFiles=1;
    00003A5E E201                   MOV         #1,R2
    00003A60 0F36                   MOV.L       R3,@(R0,R15)
    00003A62 900B                   MOV.W       L5171+18,R0; H'0100
    00003A64 0F26                   MOV.L       R2,@(R0,R15)
    00003A66              L4508:                            
          EDIT.c  2491                    }
          EDIT.c  2492                  }
          EDIT.c  2493                  iRefresh=1;
          EDIT.c  2494                  break;
    00003A66 A394                   BRA         L4941
    00003A68 E301                   MOV         #1,R3
    00003A6A              L5171:                            
    00003A6A 00F8                   .DATA.W     H'00F8
    00003A6C 00BC                   .DATA.W     H'00BC
    00003A6E 00C0                   .DATA.W     H'00C0
    00003A70 0118                   .DATA.W     H'0118
    00003A72 0090                   .DATA.W     H'0090
    00003A74 00A4                   .DATA.W     H'00A4
    00003A76 0120                   .DATA.W     H'0120
    00003A78 0124                   .DATA.W     H'0124
    00003A7A 0128                   .DATA.W     H'0128
    00003A7C 0100                   .DATA.W     H'0100
    00003A7E 0110                   .DATA.W     H'0110
    00003A80 00FC                   .DATA.W     H'00FC
    00003A82 011C                   .DATA.W     H'011C
    00003A84 <00000000>             .DATA.L     __sFiles
    00003A88 <00000000>             .DATA.L     __slow_strcpy
    00003A8C <00000000>             .DATA.L     _CopyFile
    00003A90 <00000000>             .DATA.L     L1022
    00003A94 <00000000>             .DATA.L     _PopupMessage
    00003A98 <00000000>             .DATA.L     L1024
    00003A9C <00000000>             .DATA.L     _PopupContinueYesNo
    00003AA0 <00000000>             .DATA.L     _DeleteFile
    00003AA4              L2745:                           ; case label 
          EDIT.c  2495                  
          EDIT.c  2496                //File move
          EDIT.c  2497                case NODEEXPLMOVE:
          EDIT.c  2498                  if(_sFiles[iStart+iRow].iType!=DT_DIRECTORY)
    00003AA4 9084                   MOV.W       L5172,R0   ; H'00BC
    00003AA6 03FE                   MOV.L       @(R0,R15),R3
    00003AA8 9083                   MOV.W       L5172+2,R0 ; H'00C0
    00003AAA 02FE                   MOV.L       @(R0,R15),R2
    00003AAC 323C                   ADD         R3,R2
    00003AAE 6123                   MOV         R2,R1
    00003AB0 4200                   SHLL        R2
    00003AB2 321C                   ADD         R1,R2
    00003AB4 D142                   MOV.L       L5172+16,R1; __sFiles
    00003AB6 4208                   SHLL2       R2
    00003AB8 6012                   MOV.L       @R1,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  181


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003ABA 4200                   SHLL        R2
    00003ABC 320C                   ADD         R0,R2
    00003ABE 8527                   MOV.W       @(14,R2),R0
    00003AC0 2008                   TST         R0,R0
    00003AC2 8B01                   BF          L5173
    00003AC4 A3A5                   BRA         L4476
    00003AC6 0009                   NOP
    00003AC8              L5173:                            
          EDIT.c  2499                  {
          EDIT.c  2500                    strcpy(sRootAux,sRoot);
    00003AC8 9074                   MOV.W       L5172+4,R0 ; H'0120
    00003ACA 01FE                   MOV.L       @(R0,R15),R1
    00003ACC 9073                   MOV.W       L5172+6,R0 ; H'009C
    00003ACE D23D                   MOV.L       L5172+20,R2; __slow_strcpy
    00003AD0 420B                   JSR         @R2
    00003AD2 30FC                   ADD         R15,R0
          EDIT.c  2501                    strcpy(sFolderAux,sFolder);
    00003AD4 9070                   MOV.W       L5172+8,R0 ; H'011C
    00003AD6 01FE                   MOV.L       @(R0,R15),R1
    00003AD8 906F                   MOV.W       L5172+10,R0; H'008C
    00003ADA D33A                   MOV.L       L5172+20,R3; __slow_strcpy
    00003ADC 430B                   JSR         @R3
    00003ADE 30FC                   ADD         R15,R0
          EDIT.c  2502                    if(GetFolder(sRootAux,sFolderAux,sConfig))
    00003AE0 906C                   MOV.W       L5172+12,R0; H'012C
    00003AE2 06FE                   MOV.L       @(R0,R15),R6
    00003AE4 9569                   MOV.W       L5172+10,R5; H'008C
    00003AE6 35FC                   ADD         R15,R5
    00003AE8 9465                   MOV.W       L5172+6,R4 ; H'009C
    00003AEA B42A                   BSR         _GetFolder
    00003AEC 34FC                   ADD         R15,R4
    00003AEE 2008                   TST         R0,R0
    00003AF0 8B01                   BF          L5174
    00003AF2 A0D1                   BRA         L4511
    00003AF4 0009                   NOP
    00003AF6              L5174:                            
          EDIT.c  2503                    {
          EDIT.c  2504                      strcpy(sFileAux,_sFiles[iStart+iRow].sCName);
    00003AF6 905B                   MOV.W       L5172,R0   ; H'00BC
    00003AF8 915B                   MOV.W       L5172+2,R1 ; H'00C0
    00003AFA 00FE                   MOV.L       @(R0,R15),R0
    00003AFC 31FC                   ADD         R15,R1
    00003AFE 6312                   MOV.L       @R1,R3
    00003B00 D12F                   MOV.L       L5172+16,R1; __sFiles
    00003B02 330C                   ADD         R0,R3
    00003B04 6212                   MOV.L       @R1,R2
    00003B06 6033                   MOV         R3,R0
    00003B08 4300                   SHLL        R3
    00003B0A 330C                   ADD         R0,R3
    00003B0C 4308                   SHLL2       R3
    00003B0E 4300                   SHLL        R3
    00003B10 332C                   ADD         R2,R3
    00003B12 6133                   MOV         R3,R1
    00003B14 D32B                   MOV.L       L5172+20,R3; __slow_strcpy
    00003B16 60F3                   MOV         R15,R0
    00003B18 430B                   JSR         @R3
    00003B1A 707C                   ADD         #124,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  182


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2505                      if(GetFileName(sFileAux,FMAXLEN(sRootAux)))
    00003B1C D52A                   MOV.L       L5172+24,R5; L620
    00003B1E 944A                   MOV.W       L5172+6,R4 ; H'009C
    00003B20 D22A                   MOV.L       L5172+28,R2; __quick_strcmp1
    00003B22 420B                   JSR         @R2
    00003B24 34FC                   ADD         R15,R4
    00003B26 2008                   TST         R0,R0
    00003B28 8B01                   BF          L4513
    00003B2A A001                   BRA         L4514
    00003B2C E508                   MOV         #8,R5
    00003B2E              L4513:                            
    00003B2E E50C                   MOV         #12,R5
    00003B30              L4514:                            
    00003B30 D327                   MOV.L       L5172+32,R3; _GetFileName
    00003B32 64F3                   MOV         R15,R4
    00003B34 430B                   JSR         @R3
    00003B36 747C                   ADD         #124,R4
    00003B38 2008                   TST         R0,R0
    00003B3A 8B01                   BF          L5175
    00003B3C A0AC                   BRA         L4511
    00003B3E 0009                   NOP
    00003B40              L5175:                            
          EDIT.c  2506                      {
          EDIT.c  2507                        if(strcmp(sRoot,"main")==0 
          EDIT.c  2508                        && strcmp(sRootAux,"main")==0
          EDIT.c  2509                        && strcmp(sFileAux,_sFiles[iStart+iRow].sCName)==0)
    00003B40 D521                   MOV.L       L5172+24,R5; L620
    00003B42 9037                   MOV.W       L5172+4,R0 ; H'0120
    00003B44 D323                   MOV.L       L5172+36,R3; __slow_strcmp1
    00003B46 430B                   JSR         @R3
    00003B48 04FE                   MOV.L       @(R0,R15),R4
    00003B4A 2008                   TST         R0,R0
    00003B4C 8B48                   BF          L4515
    00003B4E D51E                   MOV.L       L5172+24,R5; L620
    00003B50 9431                   MOV.W       L5172+6,R4 ; H'009C
    00003B52 D31E                   MOV.L       L5172+28,R3; __quick_strcmp1
    00003B54 430B                   JSR         @R3
    00003B56 34FC                   ADD         R15,R4
    00003B58 2008                   TST         R0,R0
    00003B5A 8B41                   BF          L4515
    00003B5C 9028                   MOV.W       L5172,R0   ; H'00BC
    00003B5E 64F3                   MOV         R15,R4
    00003B60 03FE                   MOV.L       @(R0,R15),R3
    00003B62 9026                   MOV.W       L5172+2,R0 ; H'00C0
    00003B64 05FE                   MOV.L       @(R0,R15),R5
    00003B66 353C                   ADD         R3,R5
    00003B68 D015                   MOV.L       L5172+16,R0; __sFiles
    00003B6A 6253                   MOV         R5,R2
    00003B6C D319                   MOV.L       L5172+36,R3; __slow_strcmp1
    00003B6E 4500                   SHLL        R5
    00003B70 6102                   MOV.L       @R0,R1
    00003B72 352C                   ADD         R2,R5
    00003B74 4508                   SHLL2       R5
    00003B76 4500                   SHLL        R5
    00003B78 351C                   ADD         R1,R5
    00003B7A 430B                   JSR         @R3
    00003B7C 747C                   ADD         #124,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  183


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003B7E 2008                   TST         R0,R0
    00003B80 8B2E                   BF          L4515
          EDIT.c  2510                        {
          EDIT.c  2511                          MainDirectory(DELETE,sFileAux,"");
    00003B82 65F3                   MOV         R15,R5
    00003B84 D315                   MOV.L       L5172+44,R3; _MainDirectory
    00003B86 757C                   ADD         #124,R5
    00003B88 D613                   MOV.L       L5172+40,R6; L500
    00003B8A 430B                   JSR         @R3
    00003B8C E404                   MOV         #4,R4
          EDIT.c  2512                          MainDirectory(CREATE,sFileAux,sFolderAux);
    00003B8E 65F3                   MOV         R15,R5
    00003B90 D212                   MOV.L       L5172+44,R2; _MainDirectory
    00003B92 757C                   ADD         #124,R5
    00003B94 9611                   MOV.W       L5172+10,R6; H'008C
    00003B96 36FC                   ADD         R15,R6
    00003B98 420B                   JSR         @R2
    00003B9A E403                   MOV         #3,R4
          EDIT.c  2513                          iStart=0;
    00003B9C 9009                   MOV.W       L5172+2,R0 ; H'00C0
    00003B9E E300                   MOV         #0,R3
    00003BA0 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2514                          iRow=0;
    00003BA2 6233                   MOV         R3,R2
    00003BA4 9004                   MOV.W       L5172,R0   ; H'00BC
          EDIT.c  2515                          iReadFiles=1;
    00003BA6 E301                   MOV         #1,R3
    00003BA8 0F26                   MOV.L       R2,@(R0,R15)
    00003BAA 9008                   MOV.W       L5172+14,R0; H'0100
    00003BAC A074                   BRA         L4511
    00003BAE 0F36                   MOV.L       R3,@(R0,R15)
    00003BB0              L5172:                            
    00003BB0 00BC                   .DATA.W     H'00BC
    00003BB2 00C0                   .DATA.W     H'00C0
    00003BB4 0120                   .DATA.W     H'0120
    00003BB6 009C                   .DATA.W     H'009C
    00003BB8 011C                   .DATA.W     H'011C
    00003BBA 008C                   .DATA.W     H'008C
    00003BBC 012C                   .DATA.W     H'012C
    00003BBE 0100                   .DATA.W     H'0100
    00003BC0 <00000000>             .DATA.L     __sFiles
    00003BC4 <00000000>             .DATA.L     __slow_strcpy
    00003BC8 <00000000>             .DATA.L     L620
    00003BCC <00000000>             .DATA.L     __quick_strcmp1
    00003BD0 <00000000>             .DATA.L     _GetFileName
    00003BD4 <00000000>             .DATA.L     __slow_strcmp1
    00003BD8 <00000000>             .DATA.L     L500
    00003BDC <00000000>             .DATA.L     _MainDirectory
    00003BE0              L4515:                            
          EDIT.c  2516                        }
          EDIT.c  2517                        else
          EDIT.c  2518                        {
          EDIT.c  2519                          if(FileExist(sRootAux,sFolderAux,sFileAux)==1)
    00003BE0 9581                   MOV.W       L5176,R5   ; H'008C
    00003BE2 66F3                   MOV         R15,R6
    00003BE4 9480                   MOV.W       L5176+2,R4 ; H'009C
    00003BE6 35FC                   ADD         R15,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  184


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003BE8 D346                   MOV.L       L5176+30,R3; _FileExist
    00003BEA 767C                   ADD         #124,R6
    00003BEC 430B                   JSR         @R3
    00003BEE 34FC                   ADD         R15,R4
    00003BF0 8801                   CMP/EQ      #1,R0
    00003BF2 8B08                   BF          L4517
          EDIT.c  2520                            iAnswer=PopupContinueYesNo("File exists.","Overwrite?",NULL);
    00003BF4 D544                   MOV.L       L5176+34,R5; L622
    00003BF6 D445                   MOV.L       L5176+38,R4; L611
    00003BF8 D345                   MOV.L       L5176+42,R3; _PopupContinueYesNo
    00003BFA 430B                   JSR         @R3
    00003BFC E600                   MOV         #0,R6
    00003BFE 9174                   MOV.W       L5176+4,R1 ; H'00F8
    00003C00 31FC                   ADD         R15,R1
    00003C02 A003                   BRA         L4518
    00003C04 2102                   MOV.L       R0,@R1
    00003C06              L4517:                            
          EDIT.c  2521                          else
          EDIT.c  2522                            iAnswer=1;
    00003C06 E201                   MOV         #1,R2
    00003C08 906F                   MOV.W       L5176+4,R0 ; H'00F8
    00003C0A 0F26                   MOV.L       R2,@(R0,R15)
    00003C0C              L4518:                            
          EDIT.c  2523                          if(iAnswer==1)
    00003C0C 906D                   MOV.W       L5176+4,R0 ; H'00F8
    00003C0E 00FE                   MOV.L       @(R0,R15),R0
    00003C10 8801                   CMP/EQ      #1,R0
    00003C12 8B41                   BF          L4511
          EDIT.c  2524                          {
          EDIT.c  2525                            strcpy(sFile,_sFiles[iStart+iRow].sCName);
    00003C14 906A                   MOV.W       L5176+6,R0 ; H'00BC
    00003C16 00FE                   MOV.L       @(R0,R15),R0
    00003C18 9169                   MOV.W       L5176+8,R1 ; H'00C0
    00003C1A 31FC                   ADD         R15,R1
    00003C1C 6312                   MOV.L       @R1,R3
    00003C1E 330C                   ADD         R0,R3
    00003C20 D13C                   MOV.L       L5176+46,R1; __sFiles
    00003C22 6033                   MOV         R3,R0
    00003C24 6212                   MOV.L       @R1,R2
    00003C26 4300                   SHLL        R3
    00003C28 330C                   ADD         R0,R3
    00003C2A 4308                   SHLL2       R3
    00003C2C 9060                   MOV.W       L5176+10,R0; H'0118
    00003C2E 4300                   SHLL        R3
    00003C30 332C                   ADD         R2,R3
    00003C32 6133                   MOV         R3,R1
    00003C34 D338                   MOV.L       L5176+50,R3; __slow_strcpy
    00003C36 430B                   JSR         @R3
    00003C38 00FE                   MOV.L       @(R0,R15),R0
          EDIT.c  2526                            if(CopyFile(sRoot,sFolder,sFile,sRootAux,sFolderAux,sFileAux)==1)
    00003C3A 62F3                   MOV         R15,R2
    00003C3C 9359                   MOV.W       L5176+12,R3; H'0090
    00003C3E 727C                   ADD         #124,R2
    00003C40 9758                   MOV.W       L5176+14,R7; H'00A4
    00003C42 2F26                   MOV.L       R2,@-R15
    00003C44 9057                   MOV.W       L5176+16,R0; H'0120
    00003C46 33FC                   ADD         R15,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  185


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003C48 2F36                   MOV.L       R3,@-R15
    00003C4A 37FC                   ADD         R15,R7
    00003C4C 06FE                   MOV.L       @(R0,R15),R6
    00003C4E 9053                   MOV.W       L5176+18,R0; H'0124
    00003C50 D332                   MOV.L       L5176+54,R3; _CopyFile
    00003C52 05FE                   MOV.L       @(R0,R15),R5
    00003C54 9051                   MOV.W       L5176+20,R0; H'0128
    00003C56 430B                   JSR         @R3
    00003C58 04FE                   MOV.L       @(R0,R15),R4
    00003C5A 8801                   CMP/EQ      #1,R0
    00003C5C 8F12                   BF/S        L4520
    00003C5E 7F08                   ADD         #8,R15
          EDIT.c  2527                            {
          EDIT.c  2528                              DeleteFile(sRoot,sFolder,sFile);
    00003C60 9046                   MOV.W       L5176+10,R0; H'0118
    00003C62 06FE                   MOV.L       @(R0,R15),R6
    00003C64 904A                   MOV.W       L5176+22,R0; H'011C
    00003C66 05FE                   MOV.L       @(R0,R15),R5
    00003C68 9045                   MOV.W       L5176+16,R0; H'0120
    00003C6A D32D                   MOV.L       L5176+58,R3; _DeleteFile
    00003C6C 430B                   JSR         @R3
    00003C6E 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2529                              iStart=0;
    00003C70 903D                   MOV.W       L5176+8,R0 ; H'00C0
    00003C72 E200                   MOV         #0,R2
    00003C74 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2530                              iRow=0;
    00003C76 6323                   MOV         R2,R3
    00003C78 9038                   MOV.W       L5176+6,R0 ; H'00BC
          EDIT.c  2531                              iReadFiles=1;
    00003C7A E201                   MOV         #1,R2
    00003C7C 0F36                   MOV.L       R3,@(R0,R15)
    00003C7E 903E                   MOV.W       L5176+24,R0; H'0100
    00003C80 A00A                   BRA         L4511
    00003C82 0F26                   MOV.L       R2,@(R0,R15)
    00003C84              L4520:                            
          EDIT.c  2532                            }
          EDIT.c  2533                            else
          EDIT.c  2534                              PopupMessage(1,"File move error!",NULL,NULL,NULL,NULL);
    00003C84 D527                   MOV.L       L5176+62,R5; L1033
    00003C86 E100                   MOV         #0,R1
    00003C88 D327                   MOV.L       L5176+66,R3; _PopupMessage
    00003C8A 6713                   MOV         R1,R7
    00003C8C 2F16                   MOV.L       R1,@-R15
    00003C8E 6613                   MOV         R1,R6
    00003C90 2F16                   MOV.L       R1,@-R15
    00003C92 430B                   JSR         @R3
    00003C94 E401                   MOV         #1,R4
    00003C96 7F08                   ADD         #8,R15
    00003C98              L4511:                            
          EDIT.c  2535                          }
          EDIT.c  2536                        }
          EDIT.c  2537                      }
          EDIT.c  2538                    }
          EDIT.c  2539                    iRefresh=1;
    00003C98 9032                   MOV.W       L5176+26,R0; H'00FC
    00003C9A E201                   MOV         #1,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  186


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2540                  }
          EDIT.c  2541                  break;
    00003C9C A2B9                   BRA         L4476
    00003C9E 0F26                   MOV.L       R2,@(R0,R15)
    00003CA0              L2747:                           ; case label 
          EDIT.c  2542                
          EDIT.c  2543                //New folder
          EDIT.c  2544                case NODEEXPLNEWF: 
          EDIT.c  2545                  memset(sFolderAux,0,MAXFNAME);
    00003CA0 9421                   MOV.W       L5176,R4   ; H'008C
    00003CA2 E60D                   MOV         #13,R6
    00003CA4 D221                   MOV.L       L5176+70,R2; _memset
    00003CA6 E500                   MOV         #0,R5
    00003CA8 420B                   JSR         @R2
    00003CAA 34FC                   ADD         R15,R4
          EDIT.c  2546                  iAnswer=GetFolderName(sFolderAux);
    00003CAC 941B                   MOV.W       L5176,R4   ; H'008C
    00003CAE D320                   MOV.L       L5176+74,R3; _GetFolderName
    00003CB0 430B                   JSR         @R3
    00003CB2 34FC                   ADD         R15,R4
    00003CB4 9119                   MOV.W       L5176+4,R1 ; H'00F8
          EDIT.c  2547                  if(iAnswer==1)
    00003CB6 8801                   CMP/EQ      #1,R0
    00003CB8 31FC                   ADD         R15,R1
    00003CBA 8D02                   BT/S        L5177
    00003CBC 2102                   MOV.L       R0,@R1
    00003CBE A2A5                   BRA         L4942
    00003CC0 0009                   NOP
    00003CC2              L5177:                            
          EDIT.c  2548                  {
          EDIT.c  2549                    if(FolderExist(sRoot,sFolderAux,sConfig)==1)
    00003CC2 901E                   MOV.W       L5176+28,R0; H'012C
    00003CC4 950F                   MOV.W       L5176,R5   ; H'008C
    00003CC6 06FE                   MOV.L       @(R0,R15),R6
    00003CC8 9015                   MOV.W       L5176+16,R0; H'0120
    00003CCA 35FC                   ADD         R15,R5
    00003CCC D319                   MOV.L       L5176+78,R3; _FolderExist
    00003CCE 430B                   JSR         @R3
    00003CD0 04FE                   MOV.L       @(R0,R15),R4
    00003CD2 8801                   CMP/EQ      #1,R0
    00003CD4 8B32                   BF          L4523
          EDIT.c  2550                      PopupMessage(1,"Folder exists!",NULL,NULL,NULL,NULL);
    00003CD6 E300                   MOV         #0,R3
    00003CD8 D517                   MOV.L       L5176+82,R5; L1035
    00003CDA 6733                   MOV         R3,R7
    00003CDC 2F36                   MOV.L       R3,@-R15
    00003CDE 6633                   MOV         R3,R6
    00003CE0 2F36                   MOV.L       R3,@-R15
    00003CE2 A040                   BRA         L4944
    00003CE4 0009                   NOP
    00003CE6              L5176:                            
    00003CE6 008C                   .DATA.W     H'008C
    00003CE8 009C                   .DATA.W     H'009C
    00003CEA 00F8                   .DATA.W     H'00F8
    00003CEC 00BC                   .DATA.W     H'00BC
    00003CEE 00C0                   .DATA.W     H'00C0
    00003CF0 0118                   .DATA.W     H'0118




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  187


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003CF2 0090                   .DATA.W     H'0090
    00003CF4 00A4                   .DATA.W     H'00A4
    00003CF6 0120                   .DATA.W     H'0120
    00003CF8 0124                   .DATA.W     H'0124
    00003CFA 0128                   .DATA.W     H'0128
    00003CFC 011C                   .DATA.W     H'011C
    00003CFE 0100                   .DATA.W     H'0100
    00003D00 00FC                   .DATA.W     H'00FC
    00003D02 012C                   .DATA.W     H'012C
    00003D04 <00000000>             .DATA.L     _FileExist
    00003D08 <00000000>             .DATA.L     L622
    00003D0C <00000000>             .DATA.L     L611
    00003D10 <00000000>             .DATA.L     _PopupContinueYesNo
    00003D14 <00000000>             .DATA.L     __sFiles
    00003D18 <00000000>             .DATA.L     __slow_strcpy
    00003D1C <00000000>             .DATA.L     _CopyFile
    00003D20 <00000000>             .DATA.L     _DeleteFile
    00003D24 <00000000>             .DATA.L     L1033
    00003D28 <00000000>             .DATA.L     _PopupMessage
    00003D2C <00000000>             .DATA.L     _memset
    00003D30 <00000000>             .DATA.L     _GetFolderName
    00003D34 <00000000>             .DATA.L     _FolderExist
    00003D38 <00000000>             .DATA.L     L1035
    00003D3C              L4523:                            
          EDIT.c  2551                    else
          EDIT.c  2552                    {
          EDIT.c  2553                      if(strcmp(sRoot,"main")==0)
    00003D3C D526                   MOV.L       L5178+10,R5; L620
    00003D3E 9046                   MOV.W       L5178,R0   ; H'0120
    00003D40 D326                   MOV.L       L5178+14,R3; __slow_strcmp1
    00003D42 430B                   JSR         @R3
    00003D44 04FE                   MOV.L       @(R0,R15),R4
    00003D46 2008                   TST         R0,R0
    00003D48 8B1C                   BF          L4525
          EDIT.c  2554                      {
          EDIT.c  2555                        if(MainDirectory(CREATE,"",sFolderAux)<0)
    00003D4A 9641                   MOV.W       L5178+2,R6 ; H'008C
    00003D4C D524                   MOV.L       L5178+18,R5; L500
    00003D4E 36FC                   ADD         R15,R6
    00003D50 D324                   MOV.L       L5178+22,R3; _MainDirectory
    00003D52 430B                   JSR         @R3
    00003D54 E403                   MOV         #3,R4
    00003D56 4011                   CMP/PZ      R0
    00003D58 890A                   BT          L4526
          EDIT.c  2556                          PopupMessage(1,"Error while","creating folder!",NULL,NULL,NULL);
    00003D5A E300                   MOV         #0,R3
    00003D5C D622                   MOV.L       L5178+26,R6; L1039
    00003D5E 6733                   MOV         R3,R7
    00003D60 D522                   MOV.L       L5178+30,R5; L1038
    00003D62 2F36                   MOV.L       R3,@-R15
    00003D64 2F36                   MOV.L       R3,@-R15
    00003D66              L4944:                            
    00003D66 D222                   MOV.L       L5178+34,R2; _PopupMessage
    00003D68 420B                   JSR         @R2
    00003D6A E401                   MOV         #1,R4
    00003D6C A0B3                   BRA         L4947
    00003D6E 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  188


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003D70              L4526:                            
          EDIT.c  2557                        else
          EDIT.c  2558                        {
          EDIT.c  2559                          iStart=0;
    00003D70 902F                   MOV.W       L5178+4,R0 ; H'00C0
    00003D72 E200                   MOV         #0,R2
    00003D74 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2560                          iRow=0;
    00003D76 6323                   MOV         R2,R3
    00003D78 902C                   MOV.W       L5178+6,R0 ; H'00BC
          EDIT.c  2561                          iReadFiles=1;
    00003D7A E201                   MOV         #1,R2
    00003D7C 0F36                   MOV.L       R3,@(R0,R15)
    00003D7E 902A                   MOV.W       L5178+8,R0 ; H'0100
    00003D80 A244                   BRA         L4942
    00003D82 0F26                   MOV.L       R2,@(R0,R15)
    00003D84              L4525:                            
          EDIT.c  2562                        }
          EDIT.c  2563                      }
          EDIT.c  2564                      else
          EDIT.c  2565                      {
          EDIT.c  2566                        FilePath(sRoot,sFolderAux,"",sFont);
    00003D84 D616                   MOV.L       L5178+18,R6; L500
    00003D86 67F3                   MOV         R15,R7
    00003D88 9522                   MOV.W       L5178+2,R5 ; H'008C
    00003D8A 7718                   ADD         #24,R7
    00003D8C 901F                   MOV.W       L5178,R0   ; H'0120
    00003D8E 35FC                   ADD         R15,R5
    00003D90 D318                   MOV.L       L5178+38,R3; _FilePath
    00003D92 430B                   JSR         @R3
    00003D94 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2567                        if(Bfile_CreateDirectory(sFont)<0)
    00003D96 64F3                   MOV         R15,R4
    00003D98 D217                   MOV.L       L5178+42,R2; _Bfile_CreateDirectory
    00003D9A 420B                   JSR         @R2
    00003D9C 7418                   ADD         #24,R4
    00003D9E 4011                   CMP/PZ      R0
    00003DA0 890A                   BT          L4529
          EDIT.c  2568                          PopupMessage(1,"Error while","creating folder!",NULL,NULL,NULL);
    00003DA2 E200                   MOV         #0,R2
    00003DA4 D610                   MOV.L       L5178+26,R6; L1039
    00003DA6 6723                   MOV         R2,R7
    00003DA8 D510                   MOV.L       L5178+30,R5; L1038
    00003DAA 2F26                   MOV.L       R2,@-R15
    00003DAC 2F26                   MOV.L       R2,@-R15
    00003DAE D310                   MOV.L       L5178+34,R3; _PopupMessage
    00003DB0 430B                   JSR         @R3
    00003DB2 E401                   MOV         #1,R4
    00003DB4 A08F                   BRA         L4947
    00003DB6 0009                   NOP
    00003DB8              L4529:                            
          EDIT.c  2569                        else
          EDIT.c  2570                        {
          EDIT.c  2571                          iStart=0;
    00003DB8 900B                   MOV.W       L5178+4,R0 ; H'00C0
    00003DBA E300                   MOV         #0,R3
    00003DBC 0F36                   MOV.L       R3,@(R0,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  189


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2572                          iRow=0;
    00003DBE 6233                   MOV         R3,R2
    00003DC0 9008                   MOV.W       L5178+6,R0 ; H'00BC
          EDIT.c  2573                          iReadFiles=1;
    00003DC2 E301                   MOV         #1,R3
    00003DC4 0F26                   MOV.L       R2,@(R0,R15)
    00003DC6 9006                   MOV.W       L5178+8,R0 ; H'0100
    00003DC8 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2574                        }
          EDIT.c  2575                      }
          EDIT.c  2576                    }
          EDIT.c  2577                  }
          EDIT.c  2578                  iRefresh=1;
          EDIT.c  2579                  //iReadFiles=1;
          EDIT.c  2580                  break;
    00003DCA A21F                   BRA         L4942
    00003DCC 0009                   NOP
    00003DCE              L5178:                            
    00003DCE 0120                   .DATA.W     H'0120
    00003DD0 008C                   .DATA.W     H'008C
    00003DD2 00C0                   .DATA.W     H'00C0
    00003DD4 00BC                   .DATA.W     H'00BC
    00003DD6 0100                   .DATA.W     H'0100
    00003DD8 <00000000>             .DATA.L     L620
    00003DDC <00000000>             .DATA.L     __slow_strcmp1
    00003DE0 <00000000>             .DATA.L     L500
    00003DE4 <00000000>             .DATA.L     _MainDirectory
    00003DE8 <00000000>             .DATA.L     L1039
    00003DEC <00000000>             .DATA.L     L1038
    00003DF0 <00000000>             .DATA.L     _PopupMessage
    00003DF4 <00000000>             .DATA.L     _FilePath
    00003DF8 <00000000>             .DATA.L     _Bfile_CreateDirectory
    00003DFC              L2751:                           ; case label 
          EDIT.c  2581                  
          EDIT.c  2582                //File delete
          EDIT.c  2583                case NODEEXPLDELF:
          EDIT.c  2584                  if(_sFiles[iStart+iRow].iType==DT_DIRECTORY)
    00003DFC 9082                   MOV.W       L5179,R0   ; H'00BC
    00003DFE 03FE                   MOV.L       @(R0,R15),R3
    00003E00 9081                   MOV.W       L5179+2,R0 ; H'00C0
    00003E02 01FE                   MOV.L       @(R0,R15),R1
    00003E04 313C                   ADD         R3,R1
    00003E06 6213                   MOV         R1,R2
    00003E08 4100                   SHLL        R1
    00003E0A 312C                   ADD         R2,R1
    00003E0C D240                   MOV.L       L5179+12,R2; __sFiles
    00003E0E 4108                   SHLL2       R1
    00003E10 6022                   MOV.L       @R2,R0
    00003E12 4100                   SHLL        R1
    00003E14 310C                   ADD         R0,R1
    00003E16 8517                   MOV.W       @(14,R1),R0
    00003E18 2008                   TST         R0,R0
    00003E1A 8901                   BT          L5180
    00003E1C A1F6                   BRA         L4942
    00003E1E 0009                   NOP
    00003E20              L5180:                            
          EDIT.c  2585                  {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  190


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2586                    strcpy(sFolderAux,_sFiles[iStart+iRow].sCName);
    00003E20 9070                   MOV.W       L5179,R0   ; H'00BC
    00003E22 00FE                   MOV.L       @(R0,R15),R0
    00003E24 916F                   MOV.W       L5179+2,R1 ; H'00C0
    00003E26 31FC                   ADD         R15,R1
    00003E28 6312                   MOV.L       @R1,R3
    00003E2A 330C                   ADD         R0,R3
    00003E2C 6122                   MOV.L       @R2,R1
    00003E2E 6033                   MOV         R3,R0
    00003E30 4300                   SHLL        R3
    00003E32 330C                   ADD         R0,R3
    00003E34 9068                   MOV.W       L5179+4,R0 ; H'008C
    00003E36 4308                   SHLL2       R3
    00003E38 4300                   SHLL        R3
    00003E3A 331C                   ADD         R1,R3
    00003E3C 6133                   MOV         R3,R1
    00003E3E D335                   MOV.L       L5179+16,R3; __slow_strcpy
    00003E40 430B                   JSR         @R3
    00003E42 30FC                   ADD         R15,R0
          EDIT.c  2587                    iAnswer=PopupContinueYesNo("Delete folder?",sFolderAux,NULL);
    00003E44 9560                   MOV.W       L5179+4,R5 ; H'008C
    00003E46 E600                   MOV         #0,R6
    00003E48 D433                   MOV.L       L5179+20,R4; L1044
    00003E4A D134                   MOV.L       L5179+24,R1; _PopupContinueYesNo
    00003E4C 410B                   JSR         @R1
    00003E4E 35FC                   ADD         R15,R5
    00003E50 915B                   MOV.W       L5179+6,R1 ; H'00F8
          EDIT.c  2588                    if(iAnswer==1)
    00003E52 8801                   CMP/EQ      #1,R0
    00003E54 31FC                   ADD         R15,R1
    00003E56 8D02                   BT/S        L5181
    00003E58 2102                   MOV.L       R0,@R1
    00003E5A A1D7                   BRA         L4942
    00003E5C 0009                   NOP
    00003E5E              L5181:                            
          EDIT.c  2589                    {
          EDIT.c  2590                      if(strcmp(sRoot,"main")==0)
    00003E5E D530                   MOV.L       L5179+28,R5; L620
    00003E60 9054                   MOV.W       L5179+8,R0 ; H'0120
    00003E62 D330                   MOV.L       L5179+32,R3; __slow_strcmp1
    00003E64 430B                   JSR         @R3
    00003E66 04FE                   MOV.L       @(R0,R15),R4
    00003E68 2008                   TST         R0,R0
    00003E6A 8B1C                   BF          L4533
          EDIT.c  2591                      {
          EDIT.c  2592                        if(MainDirectory(DELETEFOLDER,"",sFolderAux)<0)
    00003E6C 964C                   MOV.W       L5179+4,R6 ; H'008C
    00003E6E 36FC                   ADD         R15,R6
    00003E70 D52D                   MOV.L       L5179+36,R5; L500
    00003E72 D32E                   MOV.L       L5179+40,R3; _MainDirectory
    00003E74 430B                   JSR         @R3
    00003E76 E405                   MOV         #5,R4
    00003E78 4011                   CMP/PZ      R0
    00003E7A 890A                   BT          L4534
          EDIT.c  2593                          PopupMessage(1,"Error while","deleting folder!",NULL,NULL,NULL);
    00003E7C D62C                   MOV.L       L5179+44,R6; L1047
    00003E7E E300                   MOV         #0,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  191


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003E80 D52C                   MOV.L       L5179+48,R5; L1038
    00003E82 6733                   MOV         R3,R7
    00003E84 D22C                   MOV.L       L5179+52,R2; _PopupMessage
    00003E86 2F36                   MOV.L       R3,@-R15
    00003E88 2F36                   MOV.L       R3,@-R15
    00003E8A 420B                   JSR         @R2
    00003E8C E401                   MOV         #1,R4
    00003E8E A022                   BRA         L4947
    00003E90 0009                   NOP
    00003E92              L4534:                            
          EDIT.c  2594                        else
          EDIT.c  2595                        {
          EDIT.c  2596                          iStart=0;
    00003E92 E200                   MOV         #0,R2
    00003E94 9037                   MOV.W       L5179+2,R0 ; H'00C0
          EDIT.c  2597                          iRow=0;
    00003E96 6323                   MOV         R2,R3
    00003E98 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2598                          iReadFiles=1;
    00003E9A E201                   MOV         #1,R2
    00003E9C 9032                   MOV.W       L5179,R0   ; H'00BC
    00003E9E 0F36                   MOV.L       R3,@(R0,R15)
    00003EA0 9035                   MOV.W       L5179+10,R0; H'0100
    00003EA2 A1B3                   BRA         L4942
    00003EA4 0F26                   MOV.L       R2,@(R0,R15)
    00003EA6              L4533:                            
          EDIT.c  2599                        }
          EDIT.c  2600                      }
          EDIT.c  2601                      else
          EDIT.c  2602                      {
          EDIT.c  2603                        FilePath(sRoot,sFolderAux,"",sFont);
    00003EA6 67F3                   MOV         R15,R7
    00003EA8 D61F                   MOV.L       L5179+36,R6; L500
    00003EAA 7718                   ADD         #24,R7
    00003EAC 952C                   MOV.W       L5179+4,R5 ; H'008C
    00003EAE 35FC                   ADD         R15,R5
    00003EB0 902C                   MOV.W       L5179+8,R0 ; H'0120
    00003EB2 D322                   MOV.L       L5179+56,R3; _FilePath
    00003EB4 430B                   JSR         @R3
    00003EB6 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2604                        if(Bfile_DeleteDirectory(sFont)<0)
    00003EB8 D221                   MOV.L       L5179+60,R2; _Bfile_DeleteDirectory
    00003EBA 64F3                   MOV         R15,R4
    00003EBC 420B                   JSR         @R2
    00003EBE 7418                   ADD         #24,R4
    00003EC0 4011                   CMP/PZ      R0
    00003EC2 890A                   BT          L4537
          EDIT.c  2605                          PopupMessage(1,"Error while","deleting folder!",NULL,NULL,NULL);
    00003EC4 D61A                   MOV.L       L5179+44,R6; L1047
    00003EC6 E200                   MOV         #0,R2
    00003EC8 D51A                   MOV.L       L5179+48,R5; L1038
    00003ECA 6723                   MOV         R2,R7
    00003ECC D31A                   MOV.L       L5179+52,R3; _PopupMessage
    00003ECE 2F26                   MOV.L       R2,@-R15
    00003ED0 2F26                   MOV.L       R2,@-R15
    00003ED2 430B                   JSR         @R3
    00003ED4 E401                   MOV         #1,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  192


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003ED6              L4947:                            
    00003ED6 A199                   BRA         L4942
    00003ED8 7F08                   ADD         #8,R15
    00003EDA              L4537:                            
          EDIT.c  2606                        else
          EDIT.c  2607                        {
          EDIT.c  2608                          iStart=0;
    00003EDA E300                   MOV         #0,R3
    00003EDC 9013                   MOV.W       L5179+2,R0 ; H'00C0
          EDIT.c  2609                          iRow=0;
    00003EDE 6233                   MOV         R3,R2
    00003EE0 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2610                          iReadFiles=1;
    00003EE2 E301                   MOV         #1,R3
    00003EE4 900E                   MOV.W       L5179,R0   ; H'00BC
    00003EE6 0F26                   MOV.L       R2,@(R0,R15)
    00003EE8 9011                   MOV.W       L5179+10,R0; H'0100
    00003EEA 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2611                        }
          EDIT.c  2612                      }
          EDIT.c  2613                    }
          EDIT.c  2614                  }
          EDIT.c  2615                  iRefresh=1;
          EDIT.c  2616                  break;
    00003EEC A18E                   BRA         L4942
    00003EEE 0009                   NOP
    00003EF0              L2754:                           ; case label 
          EDIT.c  2617                  
          EDIT.c  2618                //Help text
          EDIT.c  2619                case NODEHELPHELP: 
          EDIT.c  2620                  HelpText();
    00003EF0 D114                   MOV.L       L5179+64,R1; _HelpText
    00003EF2 410B                   JSR         @R1
    00003EF4 0009                   NOP
          EDIT.c  2621                  iRefresh=1;
          EDIT.c  2622                  break;
    00003EF6 A14C                   BRA         L4941
    00003EF8 E301                   MOV         #1,R3
    00003EFA              L2755:                           ; case label 
          EDIT.c  2623                    
          EDIT.c  2624                //About
          EDIT.c  2625                case NODEHELPABOU: 
          EDIT.c  2626                  AboutPopup();
    00003EFA D113                   MOV.L       L5179+68,R1; _AboutPopup
    00003EFC 410B                   JSR         @R1
    00003EFE 0009                   NOP
          EDIT.c  2627                  break;
    00003F00 A187                   BRA         L4476
    00003F02 0009                   NOP
    00003F04              L5179:                            
    00003F04 00BC                   .DATA.W     H'00BC
    00003F06 00C0                   .DATA.W     H'00C0
    00003F08 008C                   .DATA.W     H'008C
    00003F0A 00F8                   .DATA.W     H'00F8
    00003F0C 0120                   .DATA.W     H'0120
    00003F0E 0100                   .DATA.W     H'0100
    00003F10 <00000000>             .DATA.L     __sFiles




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  193


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003F14 <00000000>             .DATA.L     __slow_strcpy
    00003F18 <00000000>             .DATA.L     L1044
    00003F1C <00000000>             .DATA.L     _PopupContinueYesNo
    00003F20 <00000000>             .DATA.L     L620
    00003F24 <00000000>             .DATA.L     __slow_strcmp1
    00003F28 <00000000>             .DATA.L     L500
    00003F2C <00000000>             .DATA.L     _MainDirectory
    00003F30 <00000000>             .DATA.L     L1047
    00003F34 <00000000>             .DATA.L     L1038
    00003F38 <00000000>             .DATA.L     _PopupMessage
    00003F3C <00000000>             .DATA.L     _FilePath
    00003F40 <00000000>             .DATA.L     _Bfile_DeleteDirectory
    00003F44 <00000000>             .DATA.L     _HelpText
    00003F48 <00000000>             .DATA.L     _AboutPopup
    00003F4C              L2756:                           ; case label 
          EDIT.c  2628                  
          EDIT.c  2629                 //Set up
          EDIT.c  2630                case NODEHELPOPTN:
          EDIT.c  2631                  Configuration(sConfig);
    00003F4C 908B                   MOV.W       L5182,R0   ; H'012C
    00003F4E B491                   BSR         _Configuration
    00003F50 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2632                  iStart=0;
    00003F52 E200                   MOV         #0,R2
    00003F54 9088                   MOV.W       L5182+2,R0 ; H'00C0
          EDIT.c  2633                  iRow=0;
    00003F56 6323                   MOV         R2,R3
    00003F58 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2634                  iReadFiles=1;
    00003F5A E201                   MOV         #1,R2
    00003F5C 9085                   MOV.W       L5182+4,R0 ; H'00BC
    00003F5E 0F36                   MOV.L       R3,@(R0,R15)
    00003F60 9084                   MOV.W       L5182+6,R0 ; H'0100
          EDIT.c  2635                  iRefresh=1;
    00003F62 6323                   MOV         R2,R3
    00003F64 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2636                  break;
    00003F66 A114                   BRA         L4941
    00003F68 0009                   NOP
    00003F6A              L2757:                           ; case label 
          EDIT.c  2637                  
          EDIT.c  2638                //Memory status
          EDIT.c  2639                case NODEHELPMEMO: 
          EDIT.c  2640                  PopupMemory(sConfig);
    00003F6A 907C                   MOV.W       L5182,R0   ; H'012C
    00003F6C D341                   MOV.L       L5182+14,R3; _PopupMemory
    00003F6E 430B                   JSR         @R3
    00003F70 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2641                  break;
    00003F72 A14E                   BRA         L4476
    00003F74 0009                   NOP
    00003F76              L2758:                           ; case label 
          EDIT.c  2642                
          EDIT.c  2643                //Select main memory
          EDIT.c  2644                case NODEEXPLMAIN:
          EDIT.c  2645                  if(strcmp(sRoot,"main")!=0)
    00003F76 D540                   MOV.L       L5182+18,R5; L620




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  194


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003F78 9079                   MOV.W       L5182+8,R0 ; H'0120
    00003F7A D340                   MOV.L       L5182+22,R3; __slow_strcmp1
    00003F7C 430B                   JSR         @R3
    00003F7E 04FE                   MOV.L       @(R0,R15),R4
    00003F80 2008                   TST         R0,R0
    00003F82 8B01                   BF          L5183
    00003F84 A145                   BRA         L4476
    00003F86 0009                   NOP
    00003F88              L5183:                            
          EDIT.c  2646                  {
          EDIT.c  2647                    sprintf(sRoot,"main");
    00003F88 D33B                   MOV.L       L5182+18,R3; L620
    00003F8A 2F36                   MOV.L       R3,@-R15
    00003F8C 9070                   MOV.W       L5182+10,R0; H'0124
    00003F8E D23C                   MOV.L       L5182+26,R2; _sprintf
    00003F90 420B                   JSR         @R2
    00003F92 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2648                    sprintf(sFolder,"");
    00003F94 D33B                   MOV.L       L5182+30,R3; L500
    00003F96 2F36                   MOV.L       R3,@-R15
    00003F98 906A                   MOV.W       L5182+10,R0; H'0124
    00003F9A D239                   MOV.L       L5182+26,R2; _sprintf
    00003F9C 420B                   JSR         @R2
    00003F9E 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2649                    iStart=0;
    00003FA0 9062                   MOV.W       L5182+2,R0 ; H'00C0
    00003FA2 7F08                   ADD         #8,R15
    00003FA4 E300                   MOV         #0,R3
          EDIT.c  2650                    iRow=0;
    00003FA6 6233                   MOV         R3,R2
    00003FA8 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2651                    iReadFiles=1;
    00003FAA E301                   MOV         #1,R3
    00003FAC 905D                   MOV.W       L5182+4,R0 ; H'00BC
    00003FAE 0F26                   MOV.L       R2,@(R0,R15)
    00003FB0 905C                   MOV.W       L5182+6,R0 ; H'0100
          EDIT.c  2652                    iRefresh=1;
    00003FB2 6233                   MOV         R3,R2
    00003FB4 0F36                   MOV.L       R3,@(R0,R15)
    00003FB6 905C                   MOV.W       L5182+12,R0; H'00FC
          EDIT.c  2653                  }
          EDIT.c  2654                  break;
    00003FB8 A12B                   BRA         L4476
    00003FBA 0F26                   MOV.L       R2,@(R0,R15)
    00003FBC              L2759:                           ; case label 
          EDIT.c  2655              
          EDIT.c  2656                //Select storage memory
          EDIT.c  2657                case NODEEXPLFLS:
          EDIT.c  2658                  if(strcmp(sRoot,"fls0")!=0)
    00003FBC D532                   MOV.L       L5182+34,R5; L813
    00003FBE 9056                   MOV.W       L5182+8,R0 ; H'0120
    00003FC0 D32E                   MOV.L       L5182+22,R3; __slow_strcmp1
    00003FC2 430B                   JSR         @R3
    00003FC4 04FE                   MOV.L       @(R0,R15),R4
    00003FC6 2008                   TST         R0,R0
    00003FC8 8B01                   BF          L5184
    00003FCA A122                   BRA         L4476




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  195


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003FCC 0009                   NOP
    00003FCE              L5184:                            
          EDIT.c  2659                  {
          EDIT.c  2660                    sprintf(sRoot,"fls0");
    00003FCE D32E                   MOV.L       L5182+34,R3; L813
    00003FD0 904E                   MOV.W       L5182+10,R0; H'0124
    00003FD2 2F36                   MOV.L       R3,@-R15
    00003FD4 D22A                   MOV.L       L5182+26,R2; _sprintf
    00003FD6 420B                   JSR         @R2
    00003FD8 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2661                    sprintf(sFolder,"");
    00003FDA D32A                   MOV.L       L5182+30,R3; L500
    00003FDC 9048                   MOV.W       L5182+10,R0; H'0124
    00003FDE 2F36                   MOV.L       R3,@-R15
    00003FE0 D227                   MOV.L       L5182+26,R2; _sprintf
    00003FE2 420B                   JSR         @R2
    00003FE4 04FE                   MOV.L       @(R0,R15),R4
    00003FE6 7F08                   ADD         #8,R15
          EDIT.c  2662                    iStart=0;
    00003FE8 903E                   MOV.W       L5182+2,R0 ; H'00C0
    00003FEA E300                   MOV         #0,R3
    00003FEC 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2663                    iRow=0;
    00003FEE 6233                   MOV         R3,R2
    00003FF0 903B                   MOV.W       L5182+4,R0 ; H'00BC
          EDIT.c  2664                    iReadFiles=1;
    00003FF2 E301                   MOV         #1,R3
    00003FF4 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2665                    iRefresh=1;
    00003FF6 6233                   MOV         R3,R2
    00003FF8 9038                   MOV.W       L5182+6,R0 ; H'0100
    00003FFA 0F36                   MOV.L       R3,@(R0,R15)
    00003FFC 9039                   MOV.W       L5182+12,R0; H'00FC
          EDIT.c  2666                  }
          EDIT.c  2667                  break;
    00003FFE A108                   BRA         L4476
    00004000 0F26                   MOV.L       R2,@(R0,R15)
    00004002              L2760:                           ; case label 
          EDIT.c  2668              
          EDIT.c  2669                //Select SD card
          EDIT.c  2670                case NODEEXPLCRD:
          EDIT.c  2671                  if(strcmp(sRoot,"crd0")!=0)
    00004002 D522                   MOV.L       L5182+38,R5; L815
    00004004 9033                   MOV.W       L5182+8,R0 ; H'0120
    00004006 D31D                   MOV.L       L5182+22,R3; __slow_strcmp1
    00004008 430B                   JSR         @R3
    0000400A 04FE                   MOV.L       @(R0,R15),R4
    0000400C 2008                   TST         R0,R0
    0000400E 8B01                   BF          L5185
    00004010 A0FF                   BRA         L4476
    00004012 0009                   NOP
    00004014              L5185:                            
          EDIT.c  2672                  {
          EDIT.c  2673                    sprintf(sRoot,"crd0");
    00004014 D31D                   MOV.L       L5182+38,R3; L815
    00004016 2F36                   MOV.L       R3,@-R15
    00004018 902A                   MOV.W       L5182+10,R0; H'0124




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  196


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000401A D219                   MOV.L       L5182+26,R2; _sprintf
    0000401C 420B                   JSR         @R2
    0000401E 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2674                    sprintf(sFolder,"");
    00004020 D318                   MOV.L       L5182+30,R3; L500
    00004022 2F36                   MOV.L       R3,@-R15
    00004024 9024                   MOV.W       L5182+10,R0; H'0124
    00004026 D216                   MOV.L       L5182+26,R2; _sprintf
    00004028 420B                   JSR         @R2
    0000402A 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2675                    iStart=0;
    0000402C 901C                   MOV.W       L5182+2,R0 ; H'00C0
    0000402E 7F08                   ADD         #8,R15
    00004030 E300                   MOV         #0,R3
          EDIT.c  2676                    iRow=0;
    00004032 6233                   MOV         R3,R2
    00004034 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2677                    iReadFiles=1;
    00004036 E301                   MOV         #1,R3
    00004038 9017                   MOV.W       L5182+4,R0 ; H'00BC
    0000403A 0F26                   MOV.L       R2,@(R0,R15)
    0000403C 9016                   MOV.W       L5182+6,R0 ; H'0100
          EDIT.c  2678                    iRefresh=1;
    0000403E 6233                   MOV         R3,R2
    00004040 0F36                   MOV.L       R3,@(R0,R15)
    00004042 9016                   MOV.W       L5182+12,R0; H'00FC
          EDIT.c  2679                  }
          EDIT.c  2680                  break;
          EDIT.c  2681              
          EDIT.c  2682              }
          EDIT.c  2683              break;
    00004044 A0E5                   BRA         L4476
    00004046 0F26                   MOV.L       R2,@(R0,R15)
    00004048              L2761:                           ; case label 
          EDIT.c  2684            }
          EDIT.c  2685            break;
          EDIT.c  2686           
          EDIT.c  2687            //Set up
          EDIT.c  2688            case KEY_CTRL_SETUP:
          EDIT.c  2689              Configuration(sConfig);
    00004048 900D                   MOV.W       L5182,R0   ; H'012C
    0000404A B413                   BSR         _Configuration
    0000404C 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  2690              iStart=0;
    0000404E E200                   MOV         #0,R2
    00004050 900A                   MOV.W       L5182+2,R0 ; H'00C0
          EDIT.c  2691              iRow=0;
    00004052 6323                   MOV         R2,R3
    00004054 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2692              iReadFiles=1;
    00004056 E201                   MOV         #1,R2
    00004058 9007                   MOV.W       L5182+4,R0 ; H'00BC
    0000405A 0F36                   MOV.L       R3,@(R0,R15)
    0000405C 9006                   MOV.W       L5182+6,R0 ; H'0100
          EDIT.c  2693              iRefresh=1;
    0000405E 6323                   MOV         R2,R3
    00004060 0F26                   MOV.L       R2,@(R0,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  197


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2694              break;
    00004062 A096                   BRA         L4941
    00004064 0009                   NOP
    00004066              L5182:                            
    00004066 012C                   .DATA.W     H'012C
    00004068 00C0                   .DATA.W     H'00C0
    0000406A 00BC                   .DATA.W     H'00BC
    0000406C 0100                   .DATA.W     H'0100
    0000406E 0120                   .DATA.W     H'0120
    00004070 0124                   .DATA.W     H'0124
    00004072 00FC                   .DATA.W     H'00FC
    00004074 <00000000>             .DATA.L     _PopupMemory
    00004078 <00000000>             .DATA.L     L620
    0000407C <00000000>             .DATA.L     __slow_strcmp1
    00004080 <00000000>             .DATA.L     _sprintf
    00004084 <00000000>             .DATA.L     L500
    00004088 <00000000>             .DATA.L     L813
    0000408C <00000000>             .DATA.L     L815
    00004090              L2762:                           ; case label 
          EDIT.c  2695            
          EDIT.c  2696            //Enter
          EDIT.c  2697            case KEY_CTRL_EXE:
          EDIT.c  2698              if(iFiles==0)
    00004090 9082                   MOV.W       L5186,R0   ; H'0108
    00004092 01FE                   MOV.L       @(R0,R15),R1
    00004094 2118                   TST         R1,R1
    00004096 8B02                   BF          L4542
          EDIT.c  2699              {
          EDIT.c  2700                iExit=1;
    00004098 907F                   MOV.W       L5186+2,R0 ; H'010C
    0000409A E201                   MOV         #1,R2
    0000409C 0F26                   MOV.L       R2,@(R0,R15)
    0000409E              L4542:                            
          EDIT.c  2701              }
          EDIT.c  2702              if(_sFiles[iStart+iRow].iType==DT_DIRECTORY)
    0000409E 907D                   MOV.W       L5186+4,R0 ; H'00BC
    000040A0 03FE                   MOV.L       @(R0,R15),R3
    000040A2 907C                   MOV.W       L5186+6,R0 ; H'00C0
    000040A4 01FE                   MOV.L       @(R0,R15),R1
    000040A6 313C                   ADD         R3,R1
    000040A8 6213                   MOV         R1,R2
    000040AA 4100                   SHLL        R1
    000040AC 312C                   ADD         R2,R1
    000040AE 4108                   SHLL2       R1
    000040B0 D23E                   MOV.L       L5186+20,R2; __sFiles
    000040B2 4100                   SHLL        R1
    000040B4 6022                   MOV.L       @R2,R0
    000040B6 310C                   ADD         R0,R1
    000040B8 8517                   MOV.W       @(14,R1),R0
    000040BA 2008                   TST         R0,R0
    000040BC 8B1D                   BF          L4543
          EDIT.c  2703              {
          EDIT.c  2704                strcpy(sFolder,_sFiles[iStart+iRow].sCName);
    000040BE 906D                   MOV.W       L5186+4,R0 ; H'00BC
    000040C0 916D                   MOV.W       L5186+6,R1 ; H'00C0
    000040C2 00FE                   MOV.L       @(R0,R15),R0
    000040C4 31FC                   ADD         R15,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  198


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000040C6 6312                   MOV.L       @R1,R3
    000040C8 6122                   MOV.L       @R2,R1
    000040CA 330C                   ADD         R0,R3
    000040CC 6033                   MOV         R3,R0
    000040CE 4300                   SHLL        R3
    000040D0 330C                   ADD         R0,R3
    000040D2 4308                   SHLL2       R3
    000040D4 9064                   MOV.W       L5186+8,R0 ; H'011C
    000040D6 4300                   SHLL        R3
    000040D8 331C                   ADD         R1,R3
    000040DA 6133                   MOV         R3,R1
    000040DC D334                   MOV.L       L5186+24,R3; __slow_strcpy
    000040DE 430B                   JSR         @R3
    000040E0 00FE                   MOV.L       @(R0,R15),R0
          EDIT.c  2705                iStart=0;
    000040E2 E100                   MOV         #0,R1
    000040E4 905B                   MOV.W       L5186+6,R0 ; H'00C0
          EDIT.c  2706                iRow=0;
    000040E6 6313                   MOV         R1,R3
    000040E8 0F16                   MOV.L       R1,@(R0,R15)
          EDIT.c  2707                iReadFiles=1;
    000040EA E101                   MOV         #1,R1
    000040EC 9056                   MOV.W       L5186+4,R0 ; H'00BC
    000040EE 0F36                   MOV.L       R3,@(R0,R15)
    000040F0 9057                   MOV.W       L5186+10,R0; H'0100
          EDIT.c  2708                iRefresh=1;
    000040F2 6313                   MOV         R1,R3
    000040F4 0F16                   MOV.L       R1,@(R0,R15)
    000040F6 A04C                   BRA         L4941
    000040F8 0009                   NOP
    000040FA              L4543:                            
          EDIT.c  2709              }
          EDIT.c  2710              else
          EDIT.c  2711              {
          EDIT.c  2712                strcpy(sFile,_sFiles[iStart+iRow].sCName);
    000040FA 904F                   MOV.W       L5186+4,R0 ; H'00BC
    000040FC 914F                   MOV.W       L5186+6,R1 ; H'00C0
    000040FE 00FE                   MOV.L       @(R0,R15),R0
    00004100 31FC                   ADD         R15,R1
    00004102 6312                   MOV.L       @R1,R3
    00004104 6122                   MOV.L       @R2,R1
    00004106 330C                   ADD         R0,R3
    00004108 6033                   MOV         R3,R0
    0000410A 4300                   SHLL        R3
    0000410C 330C                   ADD         R0,R3
    0000410E 4308                   SHLL2       R3
    00004110 9048                   MOV.W       L5186+12,R0; H'0118
    00004112 4300                   SHLL        R3
    00004114 331C                   ADD         R1,R3
    00004116 6133                   MOV         R3,R1
    00004118 D325                   MOV.L       L5186+24,R3; __slow_strcpy
    0000411A 430B                   JSR         @R3
    0000411C 00FE                   MOV.L       @(R0,R15),R0
          EDIT.c  2713                iExit=1;
    0000411E E101                   MOV         #1,R1
    00004120 903B                   MOV.W       L5186+2,R0 ; H'010C
    00004122 0F16                   MOV.L       R1,@(R0,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  199


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2714                *iNew=0;
    00004124 903F                   MOV.W       L5186+14,R0; H'0130
    00004126 E100                   MOV         #0,R1
    00004128 03FE                   MOV.L       @(R0,R15),R3
    0000412A 2312                   MOV.L       R1,@R3
          EDIT.c  2715              }
          EDIT.c  2716              break;
    0000412C A071                   BRA         L4476
    0000412E 0009                   NOP
    00004130              L2763:                           ; case label 
          EDIT.c  2717          
          EDIT.c  2718          //Cursor y++
          EDIT.c  2719          case KEY_CTRL_DOWN:
          EDIT.c  2720            iRow++;
    00004130 9034                   MOV.W       L5186+4,R0 ; H'00BC
    00004132 02FE                   MOV.L       @(R0,R15),R2
    00004134 9032                   MOV.W       L5186+4,R0 ; H'00BC
    00004136 7201                   ADD         #1,R2
    00004138 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2721            if(iStart+iRow>iFiles-1)
    0000413A 9030                   MOV.W       L5186+6,R0 ; H'00C0
    0000413C 03FE                   MOV.L       @(R0,R15),R3
    0000413E 323C                   ADD         R3,R2
    00004140 902A                   MOV.W       L5186,R0   ; H'0108
    00004142 01FE                   MOV.L       @(R0,R15),R1
    00004144 71FF                   ADD         #-1,R1
    00004146 3217                   CMP/GT      R1,R2
    00004148 8B06                   BF          L4545
          EDIT.c  2722            {
          EDIT.c  2723              iStart=0;
    0000414A E200                   MOV         #0,R2
    0000414C 9027                   MOV.W       L5186+6,R0 ; H'00C0
          EDIT.c  2724              iRow=0;
    0000414E 6323                   MOV         R2,R3
    00004150 0F26                   MOV.L       R2,@(R0,R15)
    00004152 9023                   MOV.W       L5186+4,R0 ; H'00BC
    00004154 A01C                   BRA         L4546
    00004156 0F36                   MOV.L       R3,@(R0,R15)
    00004158              L4545:                            
          EDIT.c  2725            }
          EDIT.c  2726            else if(iRow>iLines-1)
    00004158 9026                   MOV.W       L5186+16,R0; H'00AC
    0000415A 01FE                   MOV.L       @(R0,R15),R1
    0000415C 901E                   MOV.W       L5186+4,R0 ; H'00BC
    0000415E 71FF                   ADD         #-1,R1
    00004160 03FE                   MOV.L       @(R0,R15),R3
    00004162 3317                   CMP/GT      R1,R3
    00004164 8B14                   BF          L4546
          EDIT.c  2727            {
          EDIT.c  2728              iRow=iLines-1;
    00004166 901F                   MOV.W       L5186+16,R0; H'00AC
    00004168 01FE                   MOV.L       @(R0,R15),R1
    0000416A 71FF                   ADD         #-1,R1
    0000416C 9016                   MOV.W       L5186+4,R0 ; H'00BC
    0000416E 0F16                   MOV.L       R1,@(R0,R15)
          EDIT.c  2729              iStart++;
    00004170 9015                   MOV.W       L5186+6,R0 ; H'00C0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  200


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004172 03FE                   MOV.L       @(R0,R15),R3
    00004174 9013                   MOV.W       L5186+6,R0 ; H'00C0
    00004176 7301                   ADD         #1,R3
    00004178 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2730              if(iStart+iRow>=iFiles)
    0000417A 331C                   ADD         R1,R3
    0000417C 900C                   MOV.W       L5186,R0   ; H'0108
    0000417E 02FE                   MOV.L       @(R0,R15),R2
    00004180 3323                   CMP/GE      R2,R3
    00004182 8B05                   BF          L4546
          EDIT.c  2731              { 
          EDIT.c  2732                iStart=0;
    00004184 900B                   MOV.W       L5186+6,R0 ; H'00C0
    00004186 E300                   MOV         #0,R3
    00004188 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2733                iRow=0;
    0000418A 6233                   MOV         R3,R2
    0000418C 9006                   MOV.W       L5186+4,R0 ; H'00BC
    0000418E 0F26                   MOV.L       R2,@(R0,R15)
    00004190              L4546:                            
          EDIT.c  2734              }
          EDIT.c  2735            }
          EDIT.c  2736            iRefresh=1;
    00004190 E301                   MOV         #1,R3
          EDIT.c  2737            break;
    00004192              L4941:                            
    00004192 900A                   MOV.W       L5186+18,R0; H'00FC
    00004194 A03D                   BRA         L4476
    00004196 0F36                   MOV.L       R3,@(R0,R15)
    00004198              L5186:                            
    00004198 0108                   .DATA.W     H'0108
    0000419A 010C                   .DATA.W     H'010C
    0000419C 00BC                   .DATA.W     H'00BC
    0000419E 00C0                   .DATA.W     H'00C0
    000041A0 011C                   .DATA.W     H'011C
    000041A2 0100                   .DATA.W     H'0100
    000041A4 0118                   .DATA.W     H'0118
    000041A6 0130                   .DATA.W     H'0130
    000041A8 00AC                   .DATA.W     H'00AC
    000041AA 00FC                   .DATA.W     H'00FC
    000041AC <00000000>             .DATA.L     __sFiles
    000041B0 <00000000>             .DATA.L     __slow_strcpy
    000041B4              L2764:                           ; case label 
          EDIT.c  2738              
          EDIT.c  2739          //Cursor y--
          EDIT.c  2740          case KEY_CTRL_UP:    
          EDIT.c  2741            iRow--;
    000041B4 908B                   MOV.W       L5187,R0   ; H'00BC
    000041B6 01FE                   MOV.L       @(R0,R15),R1
    000041B8 9089                   MOV.W       L5187,R0   ; H'00BC
    000041BA 71FF                   ADD         #-1,R1
          EDIT.c  2742            if(iRow<0)
    000041BC 4111                   CMP/PZ      R1
    000041BE 8D25                   BT/S        L4942
    000041C0 0F16                   MOV.L       R1,@(R0,R15)
          EDIT.c  2743            {
          EDIT.c  2744              iRow=0;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  201


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000041C2 E200                   MOV         #0,R2
    000041C4 9083                   MOV.W       L5187,R0   ; H'00BC
    000041C6 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  2745              iStart--;
    000041C8 9082                   MOV.W       L5187+2,R0 ; H'00C0
    000041CA 03FE                   MOV.L       @(R0,R15),R3
    000041CC 9080                   MOV.W       L5187+2,R0 ; H'00C0
    000041CE 73FF                   ADD         #-1,R3
          EDIT.c  2746              if(iStart<0)
    000041D0 4311                   CMP/PZ      R3
    000041D2 8D1B                   BT/S        L4942
    000041D4 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  2747              { 
          EDIT.c  2748                if(iFiles-1>iLines-1)
    000041D6 907C                   MOV.W       L5187+4,R0 ; H'0108
    000041D8 01FE                   MOV.L       @(R0,R15),R1
    000041DA 71FF                   ADD         #-1,R1
    000041DC 907A                   MOV.W       L5187+6,R0 ; H'00AC
    000041DE 02FE                   MOV.L       @(R0,R15),R2
    000041E0 72FF                   ADD         #-1,R2
    000041E2 3127                   CMP/GT      R2,R1
    000041E4 8B0A                   BF          L4551
          EDIT.c  2749                {
          EDIT.c  2750                  iStart=iFiles-1-(iLines-1);
    000041E6 9075                   MOV.W       L5187+6,R0 ; H'00AC
    000041E8 02FE                   MOV.L       @(R0,R15),R2
    000041EA 9072                   MOV.W       L5187+4,R0 ; H'0108
    000041EC 01FE                   MOV.L       @(R0,R15),R1
    000041EE 3128                   SUB         R2,R1
    000041F0 906E                   MOV.W       L5187+2,R0 ; H'00C0
          EDIT.c  2751                  iRow=iLines-1;
    000041F2 72FF                   ADD         #-1,R2
    000041F4 0F16                   MOV.L       R1,@(R0,R15)
    000041F6 906A                   MOV.W       L5187,R0   ; H'00BC
    000041F8 A008                   BRA         L4942
    000041FA 0F26                   MOV.L       R2,@(R0,R15)
    000041FC              L4551:                            
          EDIT.c  2752                }
          EDIT.c  2753                else
          EDIT.c  2754                {
          EDIT.c  2755                  iStart=0;
    000041FC 9068                   MOV.W       L5187+2,R0 ; H'00C0
    000041FE E100                   MOV         #0,R1
    00004200 0F16                   MOV.L       R1,@(R0,R15)
          EDIT.c  2756                  iRow=iFiles-1;
    00004202 9066                   MOV.W       L5187+4,R0 ; H'0108
    00004204 03FE                   MOV.L       @(R0,R15),R3
    00004206 73FF                   ADD         #-1,R3
    00004208 9061                   MOV.W       L5187,R0   ; H'00BC
    0000420A 0F36                   MOV.L       R3,@(R0,R15)
    0000420C              L4942:                            
          EDIT.c  2757                }
          EDIT.c  2758              }
          EDIT.c  2759            }
          EDIT.c  2760            iRefresh=1;
    0000420C 9063                   MOV.W       L5187+8,R0 ; H'00FC
    0000420E E201                   MOV         #1,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  202


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004210 0F26                   MOV.L       R2,@(R0,R15)
    00004212              L4476:                            
          EDIT.c  2761            break;
          EDIT.c  2762        }
          EDIT.c  2763      
          EDIT.c  2764      }while(iExit==0);
    00004212 9061                   MOV.W       L5187+10,R0; H'010C
    00004214 01FE                   MOV.L       @(R0,R15),R1
    00004216 2118                   TST         R1,R1
    00004218 8B02                   BF          L5188
    0000421A D130                   MOV.L       L5187+14,R1; L4439
    0000421C 412B                   JMP         @R1
    0000421E 0009                   NOP
    00004220              L5188:                            
          EDIT.c  2765    
          EDIT.c  2766      //Unhide keyboard status
          EDIT.c  2767      KeyboardStatusHide(0);
    00004220 D32F                   MOV.L       L5187+18,R3; _KeyboardStatusHide
    00004222 430B                   JSR         @R3
    00004224 E400                   MOV         #0,R4
          EDIT.c  2768      
          EDIT.c  2769      //Return code
          EDIT.c  2770      if(iExit==1) 
    00004226 9057                   MOV.W       L5187+10,R0; H'010C
          EDIT.c  2771        return(1);
          EDIT.c  2772      else
          EDIT.c  2773        return(0);
          EDIT.c  2774    
          EDIT.c  2775    }
    00004228 9157                   MOV.W       L5187+12,R1; H'0128
    0000422A 00FE                   MOV.L       @(R0,R15),R0
    0000422C 8801                   CMP/EQ      #1,R0
    0000422E 0029                   MOVT        R0
    00004230 3F1C                   ADD         R1,R15
    00004232 4F26                   LDS.L       @R15+,PR
    00004234 000B                   RTS
    00004236 0009                   NOP
          EDIT.c  2776    
          EDIT.c  2777    // ----------------------------------------------------------------
          EDIT.c  2778    // Print file entry
          EDIT.c  2779    void PrintFileEntry(int iRow,int iStart,int iFiles,int iLines,
    00004238              _PrintFileEntry:                 ; function: PrintFileEntry
                                                           ; frame size=120
    00004238 2FE6                   MOV.L       R14,@-R15
    0000423A E068                   MOV         #104,R0
    0000423C 2FD6                   MOV.L       R13,@-R15
    0000423E 2FC6                   MOV.L       R12,@-R15
    00004240 2FB6                   MOV.L       R11,@-R15
    00004242 6C43                   MOV         R4,R12
    00004244 2FA6                   MOV.L       R10,@-R15
    00004246 2F96                   MOV.L       R9,@-R15
    00004248 4F22                   STS.L       PR,@-R15
    0000424A 7FB4                   ADD         #-76,R15
    0000424C 2F52                   MOV.L       R5,@R15
    0000424E 1F61                   MOV.L       R6,@(4,R15)
    00004250 0EFE                   MOV.L       @(R0,R15),R14
    00004252 E06C                   MOV         #108,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  203


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004254 0DFE                   MOV.L       @(R0,R15),R13
          EDIT.c  2780                        struct Direc *sDirec, int iColor)
          EDIT.c  2781    {
          EDIT.c  2782      
          EDIT.c  2783      //Variables
          EDIT.c  2784      char sDir[13];
          EDIT.c  2785      char sLine[50];
          EDIT.c  2786      
          EDIT.c  2787      //Color
          EDIT.c  2788      switch(iColor)
    00004256 60D3                   MOV         R13,R0
    00004258 8801                   CMP/EQ      #1,R0
    0000425A 8D04                   BT/S        L2765
    0000425C 6A73                   MOV         R7,R10
    0000425E 8800                   CMP/EQ      #0,R0
    00004260 8903                   BT          L2766
    00004262 A006                   BRA         L4556
    00004264 0009                   NOP
    00004266              L2765:                           ; case label 
          EDIT.c  2789      {
          EDIT.c  2790        case 1: SetColor(COLNOR); break;
    00004266 A001                   BRA         L4949
    00004268 E400                   MOV         #0,R4
    0000426A              L2766:                           ; case label 
          EDIT.c  2791        case 0: SetColor(COLREV); break;
    0000426A E401                   MOV         #1,R4
    0000426C              L4949:                            
    0000426C D31D                   MOV.L       L5187+22,R3; _SetColor
    0000426E 430B                   JSR         @R3
    00004270 0009                   NOP
    00004272              L4556:                            
          EDIT.c  2792      }
          EDIT.c  2793      
          EDIT.c  2794      //Switch depending on file type
          EDIT.c  2795      switch(sDirec->iType)
    00004272 69F3                   MOV         R15,R9
    00004274 DB1C                   MOV.L       L5187+26,R11; _sprintf
    00004276 85E7                   MOV.W       @(14,R14),R0
    00004278 600D                   EXTU.W      R0,R0
    0000427A 8800                   CMP/EQ      #0,R0
    0000427C 8F0F                   BF/S        L2770
    0000427E 7908                   ADD         #8,R9
    00004280              L2767:                           ; case label 
          EDIT.c  2796      {
          EDIT.c  2797        //Folders
          EDIT.c  2798        case DT_DIRECTORY:
          EDIT.c  2799          sprintf(sDir,"[%s]",sDirec->sCName);
    00004280 2FE6                   MOV.L       R14,@-R15
    00004282 D31A                   MOV.L       L5187+30,R3; L1075
    00004284 2F36                   MOV.L       R3,@-R15
    00004286 64F3                   MOV         R15,R4
    00004288 4B0B                   JSR         @R11
    0000428A 7444                   ADD         #68,R4
          EDIT.c  2800          sprintf(sLine," %-12s        ",sDir);
    0000428C D318                   MOV.L       L5187+34,R3; L1076
    0000428E 62F3                   MOV         R15,R2
    00004290 7244                   ADD         #68,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  204


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004292 2F26                   MOV.L       R2,@-R15
    00004294 2F36                   MOV.L       R3,@-R15
    00004296 4B0B                   JSR         @R11
    00004298 6493                   MOV         R9,R4
    0000429A A008                   BRA         L1826
    0000429C 7F10                   ADD         #16,R15
    0000429E              L2770:                           ; default label 
          EDIT.c  2801          PrintStr(0,iRow,sLine);
          EDIT.c  2802          break;
          EDIT.c  2803        
          EDIT.c  2804        //Files
          EDIT.c  2805        default:
          EDIT.c  2806          sprintf(sLine," %-12s:%6i ",sDirec->sCName,sDirec->iSize);
    0000429E 52E4                   MOV.L       @(16,R14),R2
    000042A0 D314                   MOV.L       L5187+38,R3; L1077
    000042A2 2F26                   MOV.L       R2,@-R15
    000042A4 2FE6                   MOV.L       R14,@-R15
    000042A6 2F36                   MOV.L       R3,@-R15
    000042A8 4B0B                   JSR         @R11
    000042AA 6493                   MOV         R9,R4
    000042AC 7F0C                   ADD         #12,R15
    000042AE              L1826:
          EDIT.c  2807          PrintStr(0,iRow,sLine);
    000042AE 6693                   MOV         R9,R6
    000042B0 D211                   MOV.L       L5187+42,R2; _PrintStr
    000042B2 65C3                   MOV         R12,R5
    000042B4 420B                   JSR         @R2
    000042B6 E400                   MOV         #0,R4
          EDIT.c  2808          break;
          EDIT.c  2809      }
          EDIT.c  2810    
          EDIT.c  2811      //Arrows
          EDIT.c  2812      if(iRow==1 && iStart>0) PrintXY(20*6,1*8,ARROWUP,iColor==1?0:1);
    000042B8 60C3                   MOV         R12,R0
    000042BA 8801                   CMP/EQ      #1,R0
    000042BC 8B24                   BF          L4558
    000042BE 63F2                   MOV.L       @R15,R3
    000042C0 4315                   CMP/PL      R3
    000042C2 8B21                   BF          L4558
    000042C4 60D3                   MOV         R13,R0
    000042C6 8801                   CMP/EQ      #1,R0
    000042C8 8B18                   BF          L4559
    000042CA A018                   BRA         L4560
    000042CC E700                   MOV         #0,R7
    000042CE              L5187:                            
    000042CE 00BC                   .DATA.W     H'00BC
    000042D0 00C0                   .DATA.W     H'00C0
    000042D2 0108                   .DATA.W     H'0108
    000042D4 00AC                   .DATA.W     H'00AC
    000042D6 00FC                   .DATA.W     H'00FC
    000042D8 010C                   .DATA.W     H'010C
    000042DA 0128                   .DATA.W     H'0128
    000042DC <00000000>             .DATA.L     L4439
    000042E0 <00000000>             .DATA.L     _KeyboardStatusHide
    000042E4 <00000000>             .DATA.L     _SetColor
    000042E8 <00000000>             .DATA.L     _sprintf
    000042EC <00000000>             .DATA.L     L1075




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  205


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000042F0 <00000000>             .DATA.L     L1076
    000042F4 <00000000>             .DATA.L     L1077
    000042F8 <00000000>             .DATA.L     _PrintStr
    000042FC              L4559:                            
    000042FC E701                   MOV         #1,R7
    000042FE              L4560:                            
    000042FE E508                   MOV         #8,R5
    00004300 D22C                   MOV.L       L5189+6,R2 ; _PrintXY
    00004302 D62B                   MOV.L       L5189+2,R6 ; L1078
    00004304 420B                   JSR         @R2
    00004306 E478                   MOV         #120,R4
    00004308              L4558:                            
          EDIT.c  2813      if(iRow==iLines && iStart<iFiles-iLines) PrintXY(20*6,iLines*8,ARROWDOWN,iColor==1?0:1);
    00004308 3CA0                   CMP/EQ      R10,R12
    0000430A 8B11                   BF          L4561
    0000430C 52F1                   MOV.L       @(4,R15),R2
    0000430E 32A8                   SUB         R10,R2
    00004310 63F2                   MOV.L       @R15,R3
    00004312 3323                   CMP/GE      R2,R3
    00004314 890C                   BT          L4561
    00004316 60D3                   MOV         R13,R0
    00004318 8801                   CMP/EQ      #1,R0
    0000431A 8B01                   BF          L4562
    0000431C A001                   BRA         L4563
    0000431E E700                   MOV         #0,R7
    00004320              L4562:                            
    00004320 E701                   MOV         #1,R7
    00004322              L4563:                            
    00004322 65A3                   MOV         R10,R5
    00004324 D223                   MOV.L       L5189+6,R2 ; _PrintXY
    00004326 4508                   SHLL2       R5
    00004328 D623                   MOV.L       L5189+10,R6; L1079
    0000432A 4500                   SHLL        R5
    0000432C 420B                   JSR         @R2
    0000432E E478                   MOV         #120,R4
    00004330              L4561:                            
          EDIT.c  2814    
          EDIT.c  2815    }
    00004330 7F4C                   ADD         #76,R15
    00004332 4F26                   LDS.L       @R15+,PR
    00004334 69F6                   MOV.L       @R15+,R9
    00004336 6AF6                   MOV.L       @R15+,R10
    00004338 6BF6                   MOV.L       @R15+,R11
    0000433A 6CF6                   MOV.L       @R15+,R12
    0000433C 6DF6                   MOV.L       @R15+,R13
    0000433E 000B                   RTS
    00004340 6EF6                   MOV.L       @R15+,R14
          EDIT.c  2816    
          EDIT.c  2817    // ----------------------------------------------------------------
          EDIT.c  2818    // Get folder
          EDIT.c  2819    int GetFolder(char *sRoot, char *sFolder,struct Config *sConfig)
    00004342              _GetFolder:                      ; function: GetFolder
                                                           ; frame size=324
                                                           ; used runtime library name:
                                                           ; __slow_strcpy
    00004342 2FE6                   MOV.L       R14,@-R15
    00004344 2FD6                   MOV.L       R13,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  206


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004346 EE00                   MOV         #0,R14
          EDIT.c  2820    {
          EDIT.c  2821      
          EDIT.c  2822      //Constants
          EDIT.c  2823      #define MAXROWS 4
          EDIT.c  2824      
          EDIT.c  2825      //Variables
          EDIT.c  2826      int i,j;
          EDIT.c  2827      int iError;
          EDIT.c  2828      int iExit;
          EDIT.c  2829      int iFolders;
          EDIT.c  2830      unsigned char cSort;
          EDIT.c  2831      int iHandle;
          EDIT.c  2832      int iRefresh=1;
          EDIT.c  2833      char sStr1[50];
          EDIT.c  2834      char sStr2[50];
          EDIT.c  2835      int iStart=0;
          EDIT.c  2836      int iRow=0;
          EDIT.c  2837      int iARow=0;
          EDIT.c  2838      int iCode;
          EDIT.c  2839      int iSDPresent;
          EDIT.c  2840      unsigned int iKey;
          EDIT.c  2841      char sRoot0[5];
          EDIT.c  2842      FONTCHARACTER sFont[MAXPATH];
          EDIT.c  2843      struct Direc sDirec0;
          EDIT.c  2844      
          EDIT.c  2845      //Prepare display
          EDIT.c  2846      KeyboardStatusHide(1);
    00004348 D31E                   MOV.L       L5189+22,R3; _KeyboardStatusHide
    0000434A 2FC6                   MOV.L       R12,@-R15
    0000434C 2FB6                   MOV.L       R11,@-R15
    0000434E 6CE3                   MOV         R14,R12
    00004350 902D                   MOV.W       L5189,R0   ; H'FEF0
    00004352 EB01                   MOV         #1,R11
    00004354 DD1A                   MOV.L       L5189+18,R13; __sFolders
    00004356 2FA6                   MOV.L       R10,@-R15
    00004358 2F96                   MOV.L       R9,@-R15
    0000435A 6AE3                   MOV         R14,R10
    0000435C 2F86                   MOV.L       R8,@-R15
    0000435E E903                   MOV         #3,R9
    00004360 4F22                   STS.L       PR,@-R15
    00004362 3F0C                   ADD         R0,R15
    00004364 D815                   MOV.L       L5189+14,R8; L500
    00004366 1F44                   MOV.L       R4,@(16,R15)
    00004368 1F57                   MOV.L       R5,@(28,R15)
    0000436A 1F62                   MOV.L       R6,@(8,R15)
    0000436C 1FB6                   MOV.L       R11,@(24,R15)
    0000436E 1FE5                   MOV.L       R14,@(20,R15)
    00004370 430B                   JSR         @R3
    00004372 64B3                   MOV         R11,R4
          EDIT.c  2847      SaveDisp(SAVEDISP_PAGE1);
    00004374 D214                   MOV.L       L5189+26,R2; _SaveDisp
    00004376 420B                   JSR         @R2
    00004378 64B3                   MOV         R11,R4
          EDIT.c  2848      MenuStoreBar();
    0000437A D314                   MOV.L       L5189+30,R3; _MenuStoreBar
    0000437C 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  207


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000437E 0009                   NOP
          EDIT.c  2849      PopUpWin(5);
    00004380 D213                   MOV.L       L5189+34,R2; _PopUpWin
    00004382 420B                   JSR         @R2
    00004384 E405                   MOV         #5,R4
          EDIT.c  2850      SetFont(FONTL);
    00004386 D313                   MOV.L       L5189+38,R3; _SetFont
    00004388 430B                   JSR         @R3
    0000438A 6493                   MOV         R9,R4
          EDIT.c  2851      SetColor(COLNOR);
    0000438C D212                   MOV.L       L5189+42,R2; _SetColor
    0000438E 420B                   JSR         @R2
    00004390 64C3                   MOV         R12,R4
          EDIT.c  2852      PrintStr(2,1,"Select folder:");
    00004392 65B3                   MOV         R11,R5
    00004394 D312                   MOV.L       L5189+50,R3; _PrintStr
    00004396 D611                   MOV.L       L5189+46,R6; L1103
    00004398 430B                   JSR         @R3
    0000439A E402                   MOV         #2,R4
          EDIT.c  2853      MenuSetBar(MENUBAROKAY);
    0000439C D211                   MOV.L       L5189+54,R2; _MenuSetBar
    0000439E 420B                   JSR         @R2
    000043A0 E405                   MOV         #5,R4
          EDIT.c  2854    
          EDIT.c  2855      //Detect SD Card
          EDIT.c  2856      if(sConfig->iTrySD==0)
    000043A2 53F2                   MOV.L       @(8,R15),R3
    000043A4 5232                   MOV.L       @(8,R3),R2
    000043A6 2228                   TST         R2,R2
    000043A8 8B1E                   BF          L4564
          EDIT.c  2857        iSDPresent=0;
    000043AA A021                   BRA         L4565
    000043AC 1FE3                   MOV.L       R14,@(12,R15)
    000043AE              L5189:                            
    000043AE FEF0                   .DATA.W     H'FEF0
    000043B0 <00000000>             .DATA.L     L1078
    000043B4 <00000000>             .DATA.L     _PrintXY
    000043B8 <00000000>             .DATA.L     L1079
    000043BC <00000000>             .DATA.L     L500
    000043C0 <00000000>             .DATA.L     __sFolders
    000043C4 <00000000>             .DATA.L     _KeyboardStatusHide
    000043C8 <00000000>             .DATA.L     _SaveDisp
    000043CC <00000000>             .DATA.L     _MenuStoreBar
    000043D0 <00000000>             .DATA.L     _PopUpWin
    000043D4 <00000000>             .DATA.L     _SetFont
    000043D8 <00000000>             .DATA.L     _SetColor
    000043DC <00000000>             .DATA.L     L1103
    000043E0 <00000000>             .DATA.L     _PrintStr
    000043E4 <00000000>             .DATA.L     _MenuSetBar
    000043E8              L4564:                            
          EDIT.c  2858      else
          EDIT.c  2859        iSDPresent=SDCardPresent();
    000043E8 D256                   MOV.L       L5190+6,R2 ; _SDCardPresent
    000043EA 420B                   JSR         @R2
    000043EC 0009                   NOP
    000043EE 1F03                   MOV.L       R0,@(12,R15)
    000043F0              L4565:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  208


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2860      
          EDIT.c  2861      //Get folder list
          EDIT.c  2862      iFolders=0;
    000043F0 2FE2                   MOV.L       R14,@R15
          EDIT.c  2863      for(j=0;j<3;j++)
    000043F2 1FE1                   MOV.L       R14,@(4,R15)
    000043F4              L4567:                            
          EDIT.c  2864      {
          EDIT.c  2865        if(j==0) 
    000043F4 53F1                   MOV.L       @(4,R15),R3
    000043F6 2338                   TST         R3,R3
    000043F8 8B2D                   BF          L4568
          EDIT.c  2866        { 
          EDIT.c  2867          sDirec0.cSort=0;
    000043FA E038                   MOV         #56,R0
          EDIT.c  2868          strcpy(sDirec0.sCName,"MM\\");
    000043FC D152                   MOV.L       L5190+10,R1; L1106
    000043FE 0FE4                   MOV.B       R14,@(R0,R15)
    00004400 D352                   MOV.L       L5190+14,R3; __slow_strcpy
    00004402 60F3                   MOV         R15,R0
    00004404 430B                   JSR         @R3
    00004406 7024                   ADD         #36,R0
          EDIT.c  2869          AppendDirEntry(iFolders,_sFolders,&sDirec0);
    00004408 65D2                   MOV.L       @R13,R5
    0000440A 66F3                   MOV         R15,R6
    0000440C D350                   MOV.L       L5190+18,R3; _AppendDirEntry
    0000440E 7624                   ADD         #36,R6
    00004410 430B                   JSR         @R3
    00004412 64F2                   MOV.L       @R15,R4
          EDIT.c  2870          cSort=1;
          EDIT.c  2871          iFolders++;
    00004414 62F2                   MOV.L       @R15,R2
          EDIT.c  2872          FilePath("main","","*.*",sFont);
    00004416 67F3                   MOV         R15,R7
    00004418 D64E                   MOV.L       L5190+22,R6; L928
    0000441A 7201                   ADD         #1,R2
    0000441C D44E                   MOV.L       L5190+26,R4; L620
    0000441E 773C                   ADD         #60,R7
    00004420 D34E                   MOV.L       L5190+30,R3; _FilePath
    00004422 2F22                   MOV.L       R2,@R15
    00004424 430B                   JSR         @R3
    00004426 6583                   MOV         R8,R5
          EDIT.c  2873          sprintf(sRoot0,"main");
    00004428 D24B                   MOV.L       L5190+26,R2; L620
    0000442A 2F26                   MOV.L       R2,@-R15
    0000442C 9487                   MOV.W       L5190,R4   ; H'00A4
    0000442E D34C                   MOV.L       L5190+34,R3; _sprintf
    00004430 430B                   JSR         @R3
    00004432 34FC                   ADD         R15,R4
          EDIT.c  2874          ReadDirectory(sRoot0,"",_sFolders,&iFolders,sConfig->iMaxFolders,cSort,1,0); 
    00004434 2FE6                   MOV.L       R14,@-R15
    00004436 E201                   MOV         #1,R2
    00004438 9482                   MOV.W       L5190+2,R4 ; H'00B4
    0000443A E05C                   MOV         #92,R0
    0000443C 2FB6                   MOV.L       R11,@-R15
    0000443E 6583                   MOV         R8,R5
    00004440 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  209


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004442 53F6                   MOV.L       @(24,R15),R3
    00004444 013E                   MOV.L       @(R0,R3),R1
    00004446 2F16                   MOV.L       R1,@-R15
    00004448 66D2                   MOV.L       @R13,R6
    0000444A 67F3                   MOV         R15,R7
    0000444C D345                   MOV.L       L5190+38,R3; _ReadDirectory
    0000444E 7714                   ADD         #20,R7
    00004450 430B                   JSR         @R3
    00004452 34FC                   ADD         R15,R4
    00004454 7F14                   ADD         #20,R15
    00004456              L4568:                            
          EDIT.c  2875        }
          EDIT.c  2876        if(j==1) 
    00004456 50F1                   MOV.L       @(4,R15),R0
    00004458 8801                   CMP/EQ      #1,R0
    0000445A 8B2E                   BF          L4569
          EDIT.c  2877        { 
          EDIT.c  2878          sDirec0.cSort=2;
          EDIT.c  2879          strcpy(sDirec0.sCName,"SM\\");
    0000445C D142                   MOV.L       L5190+42,R1; L1108
    0000445E E202                   MOV         #2,R2
    00004460 D33A                   MOV.L       L5190+14,R3; __slow_strcpy
    00004462 E038                   MOV         #56,R0
    00004464 0F24                   MOV.B       R2,@(R0,R15)
    00004466 60F3                   MOV         R15,R0
    00004468 430B                   JSR         @R3
    0000446A 7024                   ADD         #36,R0
          EDIT.c  2880          AppendDirEntry(iFolders,_sFolders,&sDirec0);
    0000446C 65D2                   MOV.L       @R13,R5
    0000446E 66F3                   MOV         R15,R6
    00004470 D337                   MOV.L       L5190+18,R3; _AppendDirEntry
    00004472 7624                   ADD         #36,R6
    00004474 430B                   JSR         @R3
    00004476 64F2                   MOV.L       @R15,R4
          EDIT.c  2881          cSort=3;
          EDIT.c  2882          iFolders++;
    00004478 62F2                   MOV.L       @R15,R2
          EDIT.c  2883          FilePath("fls0","","*.*",sFont);
    0000447A 67F3                   MOV         R15,R7
    0000447C D635                   MOV.L       L5190+22,R6; L928
    0000447E 7201                   ADD         #1,R2
    00004480 D43A                   MOV.L       L5190+46,R4; L813
    00004482 773C                   ADD         #60,R7
    00004484 D335                   MOV.L       L5190+30,R3; _FilePath
    00004486 2F22                   MOV.L       R2,@R15
    00004488 430B                   JSR         @R3
    0000448A 6583                   MOV         R8,R5
          EDIT.c  2884          sprintf(sRoot0,"fls0");
    0000448C D237                   MOV.L       L5190+46,R2; L813
    0000448E 2F26                   MOV.L       R2,@-R15
    00004490 9455                   MOV.W       L5190,R4   ; H'00A4
    00004492 D333                   MOV.L       L5190+34,R3; _sprintf
    00004494 430B                   JSR         @R3
    00004496 34FC                   ADD         R15,R4
          EDIT.c  2885          ReadDirectory(sRoot0,"",_sFolders,&iFolders,sConfig->iMaxFolders,cSort,1,0); 
    00004498 2FE6                   MOV.L       R14,@-R15
    0000449A E203                   MOV         #3,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  210


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000449C 9450                   MOV.W       L5190+2,R4 ; H'00B4
    0000449E E05C                   MOV         #92,R0
    000044A0 2FB6                   MOV.L       R11,@-R15
    000044A2 6583                   MOV         R8,R5
    000044A4 2F26                   MOV.L       R2,@-R15
    000044A6 53F6                   MOV.L       @(24,R15),R3
    000044A8 013E                   MOV.L       @(R0,R3),R1
    000044AA 2F16                   MOV.L       R1,@-R15
    000044AC 66D2                   MOV.L       @R13,R6
    000044AE 67F3                   MOV         R15,R7
    000044B0 D32C                   MOV.L       L5190+38,R3; _ReadDirectory
    000044B2 7714                   ADD         #20,R7
    000044B4 430B                   JSR         @R3
    000044B6 34FC                   ADD         R15,R4
    000044B8 7F14                   ADD         #20,R15
    000044BA              L4569:                            
          EDIT.c  2886        }
          EDIT.c  2887        if(j==2) 
    000044BA 50F1                   MOV.L       @(4,R15),R0
    000044BC 8802                   CMP/EQ      #2,R0
    000044BE 8B31                   BF          L4570
          EDIT.c  2888        {
          EDIT.c  2889          if(iSDPresent==0) break;
    000044C0 52F3                   MOV.L       @(12,R15),R2
    000044C2 2228                   TST         R2,R2
    000044C4 8935                   BT          L4566
          EDIT.c  2890          sDirec0.cSort=4;
    000044C6 E204                   MOV         #4,R2
          EDIT.c  2891          strcpy(sDirec0.sCName,"SD\\");
    000044C8 D129                   MOV.L       L5190+50,R1; L1110
    000044CA E038                   MOV         #56,R0
    000044CC D31F                   MOV.L       L5190+14,R3; __slow_strcpy
    000044CE 0F24                   MOV.B       R2,@(R0,R15)
    000044D0 60F3                   MOV         R15,R0
    000044D2 430B                   JSR         @R3
    000044D4 7024                   ADD         #36,R0
          EDIT.c  2892          AppendDirEntry(iFolders,_sFolders,&sDirec0);
    000044D6 66F3                   MOV         R15,R6
    000044D8 65D2                   MOV.L       @R13,R5
    000044DA 7624                   ADD         #36,R6
    000044DC D31C                   MOV.L       L5190+18,R3; _AppendDirEntry
    000044DE 430B                   JSR         @R3
    000044E0 64F2                   MOV.L       @R15,R4
          EDIT.c  2893          cSort=5;
          EDIT.c  2894          iFolders++;
          EDIT.c  2895          FilePath("crd0","","*.*",sFont);
    000044E2 67F3                   MOV         R15,R7
    000044E4 D61B                   MOV.L       L5190+22,R6; L928
    000044E6 773C                   ADD         #60,R7
    000044E8 D422                   MOV.L       L5190+54,R4; L815
    000044EA 62F2                   MOV.L       @R15,R2
    000044EC D31B                   MOV.L       L5190+30,R3; _FilePath
    000044EE 7201                   ADD         #1,R2
    000044F0 2F22                   MOV.L       R2,@R15
    000044F2 430B                   JSR         @R3
    000044F4 6583                   MOV         R8,R5
          EDIT.c  2896          sprintf(sRoot0,"crd0");




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  211


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000044F6 D21F                   MOV.L       L5190+54,R2; L815
    000044F8 9421                   MOV.W       L5190,R4   ; H'00A4
    000044FA 2F26                   MOV.L       R2,@-R15
    000044FC D318                   MOV.L       L5190+34,R3; _sprintf
    000044FE 430B                   JSR         @R3
    00004500 34FC                   ADD         R15,R4
          EDIT.c  2897          ReadDirectory(sRoot0,"",_sFolders,&iFolders,sConfig->iMaxFolders,cSort,1,0); 
    00004502 E205                   MOV         #5,R2
    00004504 941C                   MOV.W       L5190+2,R4 ; H'00B4
    00004506 E05C                   MOV         #92,R0
    00004508 2FE6                   MOV.L       R14,@-R15
    0000450A 6583                   MOV         R8,R5
    0000450C 2FB6                   MOV.L       R11,@-R15
    0000450E 2F26                   MOV.L       R2,@-R15
    00004510 53F6                   MOV.L       @(24,R15),R3
    00004512 013E                   MOV.L       @(R0,R3),R1
    00004514 D313                   MOV.L       L5190+38,R3; _ReadDirectory
    00004516 2F16                   MOV.L       R1,@-R15
    00004518 66D2                   MOV.L       @R13,R6
    0000451A 67F3                   MOV         R15,R7
    0000451C 7714                   ADD         #20,R7
    0000451E 430B                   JSR         @R3
    00004520 34FC                   ADD         R15,R4
    00004522 7F14                   ADD         #20,R15
    00004524              L4570:                            
    00004524 52F1                   MOV.L       @(4,R15),R2
    00004526 7201                   ADD         #1,R2
    00004528 3293                   CMP/GE      R9,R2
    0000452A 8D02                   BT/S        L5191
    0000452C 1F21                   MOV.L       R2,@(4,R15)
    0000452E AF61                   BRA         L4567
    00004530 0009                   NOP
    00004532              L5191:                            
    00004532              L4566:                            
          EDIT.c  2898        }
          EDIT.c  2899      }
          EDIT.c  2900      
          EDIT.c  2901      //Main loop
          EDIT.c  2902      iExit=0;
    00004532 1FE2                   MOV.L       R14,@(8,R15)
          EDIT.c  2903      do{
    00004534              L4573:                            
          EDIT.c  2904          
          EDIT.c  2905        //Rewrite screen
          EDIT.c  2906        if(iRefresh==1)
    00004534 50F6                   MOV.L       @(24,R15),R0
    00004536 8801                   CMP/EQ      #1,R0
    00004538 8B4E                   BF          L4574
          EDIT.c  2907        {
          EDIT.c  2908          SetFont(FONTL);
    0000453A A01D                   BRA         L4954
    0000453C E403                   MOV         #3,R4
    0000453E              L5190:                            
    0000453E 00A4                   .DATA.W     H'00A4
    00004540 00B4                   .DATA.W     H'00B4
    00004542 0000                   .DATA.W     0
    00004544 <00000000>             .DATA.L     _SDCardPresent




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  212


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004548 <00000000>             .DATA.L     L1106
    0000454C <00000000>             .DATA.L     __slow_strcpy
    00004550 <00000000>             .DATA.L     _AppendDirEntry
    00004554 <00000000>             .DATA.L     L928
    00004558 <00000000>             .DATA.L     L620
    0000455C <00000000>             .DATA.L     _FilePath
    00004560 <00000000>             .DATA.L     _sprintf
    00004564 <00000000>             .DATA.L     _ReadDirectory
    00004568 <00000000>             .DATA.L     L1108
    0000456C <00000000>             .DATA.L     L813
    00004570 <00000000>             .DATA.L     L1110
    00004574 <00000000>             .DATA.L     L815
    00004578              L4954:                            
    00004578 D20F                   MOV.L       L5192+2,R2 ; _SetFont
    0000457A 420B                   JSR         @R2
    0000457C 0009                   NOP
          EDIT.c  2909          SetColor(COLNOR);
    0000457E D30F                   MOV.L       L5192+6,R3 ; _SetColor
    00004580 430B                   JSR         @R3
    00004582 E400                   MOV         #0,R4
          EDIT.c  2910          for(i=0;i<MAXROWS;i++)
    00004584 E200                   MOV         #0,R2
    00004586 A023                   BRA         L4575
    00004588 1F21                   MOV.L       R2,@(4,R15)
    0000458A              L4576:                            
    0000458A 51F1                   MOV.L       @(4,R15),R1
    0000458C 31AC                   ADD         R10,R1
    0000458E 1F18                   MOV.L       R1,@(32,R15)
    00004590 53F1                   MOV.L       @(4,R15),R3
    00004592 7302                   ADD         #2,R3
    00004594 1F33                   MOV.L       R3,@(12,R15)
    00004596 62F2                   MOV.L       @R15,R2
    00004598 3123                   CMP/GE      R2,R1
    0000459A 8911                   BT          L4577
          EDIT.c  2911          {
          EDIT.c  2912            if(i+iStart<iFolders)
          EDIT.c  2913              PrintFolderEntry(2+i,&_sFolders[iStart+i],COLNOR);
    0000459C 60D2                   MOV.L       @R13,R0
    0000459E E600                   MOV         #0,R6
    000045A0 6513                   MOV         R1,R5
    000045A2 6213                   MOV         R1,R2
    000045A4 4500                   SHLL        R5
    000045A6 352C                   ADD         R2,R5
    000045A8 4508                   SHLL2       R5
    000045AA 4500                   SHLL        R5
    000045AC 350C                   ADD         R0,R5
    000045AE B127                   BSR         _PrintFolderEntry
    000045B0 6433                   MOV         R3,R4
    000045B2 A00A                   BRA         L4578
    000045B4 0009                   NOP
    000045B6              L5192:                            
    000045B6 0000                   .DATA.W     0
    000045B8 <00000000>             .DATA.L     _SetFont
    000045BC <00000000>             .DATA.L     _SetColor
    000045C0              L4577:                            
          EDIT.c  2914            else
          EDIT.c  2915              PrintStr(2,2+i,"                 ");




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  213


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000045C0 D639                   MOV.L       L5193+20,R6; L1114
    000045C2 6533                   MOV         R3,R5
    000045C4 D239                   MOV.L       L5193+24,R2; _PrintStr
    000045C6 420B                   JSR         @R2
    000045C8 E402                   MOV         #2,R4
    000045CA              L4578:                            
    000045CA 53F1                   MOV.L       @(4,R15),R3
    000045CC 7301                   ADD         #1,R3
    000045CE 1F31                   MOV.L       R3,@(4,R15)
    000045D0              L4575:                            
    000045D0 51F1                   MOV.L       @(4,R15),R1
    000045D2 E204                   MOV         #4,R2
    000045D4 3123                   CMP/GE      R2,R1
    000045D6 8BD8                   BF          L4576
    000045D8              L4574:                            
    000045D8 63A3                   MOV         R10,R3
    000045DA 33CC                   ADD         R12,R3
    000045DC 1F33                   MOV.L       R3,@(12,R15)
    000045DE 52F5                   MOV.L       @(20,R15),R2
    000045E0 3C20                   CMP/EQ      R2,R12
    000045E2 8B02                   BF          L4580
    000045E4 52F6                   MOV.L       @(24,R15),R2
    000045E6 2228                   TST         R2,R2
    000045E8 891E                   BT          L4581
    000045EA              L4580:                            
          EDIT.c  2916          }
          EDIT.c  2917        }
          EDIT.c  2918        
          EDIT.c  2919        //Cursor position
          EDIT.c  2920        if(iRow!=iARow || iRefresh!=0)
          EDIT.c  2921        {
          EDIT.c  2922          PrintFolderEntry(2+iARow,&_sFolders[iStart+iARow],COLNOR);
    000045EA E600                   MOV         #0,R6
    000045EC 55F5                   MOV.L       @(20,R15),R5
    000045EE 35AC                   ADD         R10,R5
    000045F0 62D2                   MOV.L       @R13,R2
    000045F2 6353                   MOV         R5,R3
    000045F4 54F5                   MOV.L       @(20,R15),R4
    000045F6 4500                   SHLL        R5
    000045F8 353C                   ADD         R3,R5
    000045FA 4508                   SHLL2       R5
    000045FC 4500                   SHLL        R5
    000045FE 352C                   ADD         R2,R5
    00004600 B0FE                   BSR         _PrintFolderEntry
    00004602 7402                   ADD         #2,R4
          EDIT.c  2923          PrintFolderEntry(2+iRow ,&_sFolders[iStart+iRow ],COLREV);
    00004604 55F3                   MOV.L       @(12,R15),R5
    00004606 64C3                   MOV         R12,R4
    00004608 62D2                   MOV.L       @R13,R2
    0000460A E601                   MOV         #1,R6
    0000460C 6353                   MOV         R5,R3
    0000460E 4500                   SHLL        R5
    00004610 353C                   ADD         R3,R5
    00004612 4508                   SHLL2       R5
    00004614 4500                   SHLL        R5
    00004616 352C                   ADD         R2,R5
    00004618 B0F2                   BSR         _PrintFolderEntry




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  214


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000461A 7402                   ADD         #2,R4
          EDIT.c  2924        }    
          EDIT.c  2925        
          EDIT.c  2926        //Flush screen
          EDIT.c  2927        if(iRefresh!=0) Bdisp_PutDisp_DD();
    0000461C 52F6                   MOV.L       @(24,R15),R2
    0000461E 2228                   TST         R2,R2
    00004620 8902                   BT          L4581
    00004622 D323                   MOV.L       L5193+28,R3; _Bdisp_PutDisp_DD
    00004624 430B                   JSR         @R3
    00004626 0009                   NOP
    00004628              L4581:                            
          EDIT.c  2928        
          EDIT.c  2929        //Clear flags
          EDIT.c  2930        iRefresh=0;
    00004628 1FE6                   MOV.L       R14,@(24,R15)
          EDIT.c  2931        
          EDIT.c  2932        //Previous cursor position
          EDIT.c  2933        iARow=iRow;
          EDIT.c  2934        
          EDIT.c  2935        //Get Key
          EDIT.c  2936        iKey=GetKeyb();
    0000462A D322                   MOV.L       L5193+32,R3; _GetKeyb
    0000462C 430B                   JSR         @R3
    0000462E 1FC5                   MOV.L       R12,@(20,R15)
    00004630 65F2                   MOV.L       @R15,R5
    00004632 6403                   MOV         R0,R4
    00004634 912E                   MOV.W       L5193,R1   ; H'7539
    00004636 6043                   MOV         R4,R0
    00004638 3010                   CMP/EQ      R1,R0
    0000463A 8D1D                   BT/S        L2779
    0000463C 75FF                   ADD         #-1,R5
    0000463E 912A                   MOV.W       L5193+2,R1 ; H'753A
    00004640 3010                   CMP/EQ      R1,R0
    00004642 8919                   BT          L2780
    00004644 9128                   MOV.W       L5193+4,R1 ; H'753B
    00004646 3010                   CMP/EQ      R1,R0
    00004648 8916                   BT          L2781
    0000464A 9126                   MOV.W       L5193+6,R1 ; H'753C
    0000464C 3010                   CMP/EQ      R1,R0
    0000464E 8913                   BT          L2782
    00004650 9124                   MOV.W       L5193+8,R1 ; H'753D
    00004652 3010                   CMP/EQ      R1,R0
    00004654 8910                   BT          L2783
    00004656 9122                   MOV.W       L5193+10,R1; H'753E
    00004658 3010                   CMP/EQ      R1,R0
    0000465A 890D                   BT          L2784
    0000465C 9120                   MOV.W       L5193+12,R1; H'7532
    0000465E 3010                   CMP/EQ      R1,R0
    00004660 892C                   BT          L2787
    00004662 911E                   MOV.W       L5193+14,R1; H'7534
    00004664 3010                   CMP/EQ      R1,R0
    00004666 892C                   BT          L2788
    00004668 911C                   MOV.W       L5193+16,R1; H'7547
    0000466A 3010                   CMP/EQ      R1,R0
    0000466C 892D                   BT          L2789
    0000466E 911A                   MOV.W       L5193+18,R1; H'7542




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  215


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004670 3010                   CMP/EQ      R1,R0
    00004672 893B                   BT          L2790
    00004674 A04A                   BRA         L4582
    00004676 0009                   NOP
    00004678              L2779:                           ; case label 
          EDIT.c  2937          
          EDIT.c  2938        //Process keys
          EDIT.c  2939        switch(iKey)
          EDIT.c  2940        {
          EDIT.c  2941          //Process menu commands
          EDIT.c  2942          case KEY_CTRL_F1:
          EDIT.c  2943          case KEY_CTRL_F2:
    00004678              L2780:                           ; case label 
          EDIT.c  2944          case KEY_CTRL_F3:
    00004678              L2781:                           ; case label 
          EDIT.c  2945          case KEY_CTRL_F4:
    00004678              L2782:                           ; case label 
          EDIT.c  2946          case KEY_CTRL_F5:
    00004678              L2783:                           ; case label 
          EDIT.c  2947          case KEY_CTRL_F6:
    00004678              L2784:                           ; case label 
          EDIT.c  2948            iCode=MenuFunctionKey(iKey);
    00004678 D30F                   MOV.L       L5193+36,R3; _MenuFunctionKey
    0000467A 430B                   JSR         @R3
    0000467C 0009                   NOP
    0000467E 6403                   MOV         R0,R4
          EDIT.c  2949            if(iCode!=NODENOFUNCT)
    00004680 2448                   TST         R4,R4
    00004682 8943                   BT          L4582
          EDIT.c  2950            {
          EDIT.c  2951              switch(iCode)
    00004684 6043                   MOV         R4,R0
    00004686 880C                   CMP/EQ      #12,R0
    00004688 891B                   BT          L4950
    0000468A 880D                   CMP/EQ      #13,R0
    0000468C 8B3E                   BF          L4582
    0000468E              L2786:                           ; case label 
          EDIT.c  2952              {
          EDIT.c  2953              
          EDIT.c  2954                //Ok
          EDIT.c  2955                case NODEOKAYOK:
          EDIT.c  2956                  iExit=1;
          EDIT.c  2957                  i=iStart+iRow;
          EDIT.c  2958                  break;
          EDIT.c  2959                
          EDIT.c  2960                //Exit
          EDIT.c  2961                case NODEOKAYEX:
          EDIT.c  2962                  iExit=2;
    0000468E E302                   MOV         #2,R3
          EDIT.c  2963                  break;
          EDIT.c  2964              }
          EDIT.c  2965              break;
    00004690 A03C                   BRA         L4582
    00004692 1F32                   MOV.L       R3,@(8,R15)
    00004694              L5193:                            
    00004694 7539                   .DATA.W     H'7539
    00004696 753A                   .DATA.W     H'753A




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  216


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004698 753B                   .DATA.W     H'753B
    0000469A 753C                   .DATA.W     H'753C
    0000469C 753D                   .DATA.W     H'753D
    0000469E 753E                   .DATA.W     H'753E
    000046A0 7532                   .DATA.W     H'7532
    000046A2 7534                   .DATA.W     H'7534
    000046A4 7547                   .DATA.W     H'7547
    000046A6 7542                   .DATA.W     H'7542
    000046A8 <00000000>             .DATA.L     L1114
    000046AC <00000000>             .DATA.L     _PrintStr
    000046B0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000046B4 <00000000>             .DATA.L     _GetKeyb
    000046B8 <00000000>             .DATA.L     _MenuFunctionKey
    000046BC              L2787:                           ; case label 
          EDIT.c  2966            }
          EDIT.c  2967            break;
          EDIT.c  2968           
          EDIT.c  2969            //Exit
          EDIT.c  2970            case KEY_CTRL_EXIT:
          EDIT.c  2971              iExit=2;
    000046BC E102                   MOV         #2,R1
          EDIT.c  2972              break;
    000046BE A025                   BRA         L4582
    000046C0 1F12                   MOV.L       R1,@(8,R15)
    000046C2              L2788:                           ; case label 
    000046C2              L4950:                            
    000046C2 1FB2                   MOV.L       R11,@(8,R15)
          EDIT.c  2973              
          EDIT.c  2974            //Enter
          EDIT.c  2975            case KEY_CTRL_EXE:
          EDIT.c  2976              iExit=1;
          EDIT.c  2977              i=iStart+iRow;
    000046C4 53F3                   MOV.L       @(12,R15),R3
          EDIT.c  2978              break;
    000046C6 A021                   BRA         L4582
    000046C8 1F31                   MOV.L       R3,@(4,R15)
    000046CA              L2789:                           ; case label 
          EDIT.c  2979          
          EDIT.c  2980          //Cursor y++
          EDIT.c  2981          case KEY_CTRL_DOWN:
          EDIT.c  2982            iRow++;
    000046CA 7C01                   ADD         #1,R12
          EDIT.c  2983            if(iStart+iRow>iFolders-1)
    000046CC 63A3                   MOV         R10,R3
    000046CE 33CC                   ADD         R12,R3
    000046D0 3357                   CMP/GT      R5,R3
    000046D2 8908                   BT          L1833
          EDIT.c  2984            {
          EDIT.c  2985              iStart=0;
          EDIT.c  2986              iRow=0;
          EDIT.c  2987            }
          EDIT.c  2988            else if(iRow>MAXROWS-1)
    000046D4 3C97                   CMP/GT      R9,R12
    000046D6 8B18                   BF          L1827
          EDIT.c  2989            {
          EDIT.c  2990              iRow=MAXROWS-1;
          EDIT.c  2991              iStart++;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  217


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  2992              if(iStart+iRow>=iFolders)
    000046D8 63F2                   MOV.L       @R15,R3
    000046DA 7A01                   ADD         #1,R10
    000046DC 62A3                   MOV         R10,R2
    000046DE 7203                   ADD         #3,R2
    000046E0 3233                   CMP/GE      R3,R2
    000046E2 8F12                   BF/S        L1827
    000046E4 6C93                   MOV         R9,R12
    000046E6              L1833:
          EDIT.c  2993              { 
          EDIT.c  2994                iStart=0;
    000046E6 6AE3                   MOV         R14,R10
    000046E8 A00F                   BRA         L1827
          EDIT.c  2995                iRow=0;
    000046EA 6CE3                   MOV         R14,R12
    000046EC              L2790:                           ; case label 
          EDIT.c  2996              }
          EDIT.c  2997            }
          EDIT.c  2998            iRefresh=1;
          EDIT.c  2999            break;
          EDIT.c  3000              
          EDIT.c  3001          //Cursor y--
          EDIT.c  3002          case KEY_CTRL_UP:    
          EDIT.c  3003            iRow--;
    000046EC 7CFF                   ADD         #-1,R12
          EDIT.c  3004            if(iRow<0)
    000046EE 4C11                   CMP/PZ      R12
    000046F0 890B                   BT          L1827
          EDIT.c  3005            {
          EDIT.c  3006              iRow=0;
          EDIT.c  3007              iStart--;
    000046F2 7AFF                   ADD         #-1,R10
          EDIT.c  3008              if(iStart<0)
    000046F4 4A11                   CMP/PZ      R10
    000046F6 8D08                   BT/S        L1827
    000046F8 6CE3                   MOV         R14,R12
          EDIT.c  3009              { 
          EDIT.c  3010                if(iFolders-1>MAXROWS-1)
    000046FA 3597                   CMP/GT      R9,R5
    000046FC 8B03                   BF          L4591
          EDIT.c  3011                {
          EDIT.c  3012                  iStart=iFolders-1-(MAXROWS-1);
    000046FE 6AF2                   MOV.L       @R15,R10
    00004700 7AFC                   ADD         #-4,R10
          EDIT.c  3013                  iRow=MAXROWS-1;
    00004702 A002                   BRA         L1827
    00004704 6C93                   MOV         R9,R12
    00004706              L4591:                            
          EDIT.c  3014                }
          EDIT.c  3015                else
          EDIT.c  3016                {
          EDIT.c  3017                  iStart=0;
    00004706 6AE3                   MOV         R14,R10
          EDIT.c  3018                  iRow=iFolders-1;
    00004708 6C53                   MOV         R5,R12
    0000470A              L1827:
          EDIT.c  3019                }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  218


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3020              }
          EDIT.c  3021            }
          EDIT.c  3022            iRefresh=1;
    0000470A 1FB6                   MOV.L       R11,@(24,R15)
          EDIT.c  3023            break;
    0000470C              L4582:                            
          EDIT.c  3024        }
          EDIT.c  3025      
          EDIT.c  3026      }while(iExit==0);
    0000470C 52F2                   MOV.L       @(8,R15),R2
    0000470E 2228                   TST         R2,R2
    00004710 8B01                   BF          L5194
    00004712 AF0F                   BRA         L4573
    00004714 0009                   NOP
    00004716              L5194:                            
          EDIT.c  3027    
          EDIT.c  3028      //Restore display
          EDIT.c  3029      KeyboardStatusHide(0);
    00004716 D32D                   MOV.L       L5195,R3   ; _KeyboardStatusHide
    00004718 430B                   JSR         @R3
    0000471A E400                   MOV         #0,R4
          EDIT.c  3030      RestoreDisp(SAVEDISP_PAGE1);
    0000471C D22C                   MOV.L       L5195+4,R2 ; _RestoreDisp
    0000471E 420B                   JSR         @R2
    00004720 E401                   MOV         #1,R4
          EDIT.c  3031      MenuRestoreBar();
    00004722 D32C                   MOV.L       L5195+8,R3 ; _MenuRestoreBar
    00004724 430B                   JSR         @R3
    00004726 0009                   NOP
          EDIT.c  3032      
          EDIT.c  3033      //Return code
          EDIT.c  3034      if(iExit==1) 
    00004728 50F2                   MOV.L       @(8,R15),R0
    0000472A 8801                   CMP/EQ      #1,R0
    0000472C 8B5C                   BF          L4593
          EDIT.c  3035      {
          EDIT.c  3036        switch(_sFolders[i].cSort)
    0000472E E114                   MOV         #20,R1
    00004730 50F1                   MOV.L       @(4,R15),R0
    00004732 6303                   MOV         R0,R3
    00004734 62D2                   MOV.L       @R13,R2
    00004736 4000                   SHLL        R0
    00004738 303C                   ADD         R3,R0
    0000473A 4008                   SHLL2       R0
    0000473C 4000                   SHLL        R0
    0000473E 302C                   ADD         R2,R0
    00004740 001C                   MOV.B       @(R0,R1),R0
    00004742 600C                   EXTU.B      R0,R0
    00004744 8800                   CMP/EQ      #0,R0
    00004746 890B                   BT          L2791
    00004748 8801                   CMP/EQ      #1,R0
    0000474A 890D                   BT          L2792
    0000474C 8802                   CMP/EQ      #2,R0
    0000474E 8912                   BT          L2793
    00004750 8803                   CMP/EQ      #3,R0
    00004752 8917                   BT          L2794
    00004754 8804                   CMP/EQ      #4,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  219


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004756 891C                   BT          L2795
    00004758 8805                   CMP/EQ      #5,R0
    0000475A 8922                   BT          L2796
    0000475C A034                   BRA         L4594
    0000475E 0009                   NOP
    00004760              L2791:                           ; case label 
          EDIT.c  3037        {
          EDIT.c  3038          case 0: sprintf(sRoot,"main");     
    00004760 D31D                   MOV.L       L5195+12,R3; L620
    00004762 2F36                   MOV.L       R3,@-R15
    00004764 A009                   BRA         L4951
    00004766 0009                   NOP
    00004768              L2792:                           ; case label 
          EDIT.c  3039                  sprintf(sFolder,"");
          EDIT.c  3040                  break;
          EDIT.c  3041          case 1: sprintf(sRoot,"main");     
    00004768 D21B                   MOV.L       L5195+12,R2; L620
    0000476A 2F26                   MOV.L       R2,@-R15
    0000476C D31B                   MOV.L       L5195+16,R3; _sprintf
    0000476E 430B                   JSR         @R3
    00004770 54F5                   MOV.L       @(20,R15),R4
    00004772 A00C                   BRA         L4952
    00004774 0009                   NOP
    00004776              L2793:                           ; case label 
          EDIT.c  3042                  sprintf(sFolder,_sFolders[i].sCName);
          EDIT.c  3043                  break;
          EDIT.c  3044          case 2: sprintf(sRoot,"fls0");     
    00004776 D31A                   MOV.L       L5195+20,R3; L813
    00004778 2F36                   MOV.L       R3,@-R15
    0000477A              L4951:                            
    0000477A D218                   MOV.L       L5195+16,R2; _sprintf
    0000477C 420B                   JSR         @R2
    0000477E 54F5                   MOV.L       @(20,R15),R4
    00004780 A00D                   BRA         L1832
    00004782 7F04                   ADD         #4,R15
    00004784              L2794:                           ; case label 
          EDIT.c  3045                  sprintf(sFolder,"");
          EDIT.c  3046                  break;
          EDIT.c  3047          case 3: sprintf(sRoot,"fls0");     
    00004784 D316                   MOV.L       L5195+20,R3; L813
    00004786 2F36                   MOV.L       R3,@-R15
    00004788 D214                   MOV.L       L5195+16,R2; _sprintf
    0000478A 420B                   JSR         @R2
    0000478C 54F5                   MOV.L       @(20,R15),R4
    0000478E              L4952:                            
    0000478E A00E                   BRA         L1835
    00004790 7F04                   ADD         #4,R15
    00004792              L2795:                           ; case label 
          EDIT.c  3048                  sprintf(sFolder,_sFolders[i].sCName);
          EDIT.c  3049                  break;
          EDIT.c  3050          case 4: sprintf(sRoot,"crd0");     
    00004792 D314                   MOV.L       L5195+24,R3; L815
    00004794 D211                   MOV.L       L5195+16,R2; _sprintf
    00004796 2F36                   MOV.L       R3,@-R15
    00004798 420B                   JSR         @R2
    0000479A 54F5                   MOV.L       @(20,R15),R4
    0000479C 7F04                   ADD         #4,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  220


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000479E              L1832:
          EDIT.c  3051                  sprintf(sFolder,"");
          EDIT.c  3052                  break;
    0000479E A00F                   BRA         L4953
    000047A0 2F86                   MOV.L       R8,@-R15
    000047A2              L2796:                           ; case label 
          EDIT.c  3053          case 5: sprintf(sRoot,"crd0");     
    000047A2 D310                   MOV.L       L5195+24,R3; L815
    000047A4 D20D                   MOV.L       L5195+16,R2; _sprintf
    000047A6 2F36                   MOV.L       R3,@-R15
    000047A8 420B                   JSR         @R2
    000047AA 54F5                   MOV.L       @(20,R15),R4
    000047AC 7F04                   ADD         #4,R15
    000047AE              L1835:
          EDIT.c  3054                  sprintf(sFolder,_sFolders[i].sCName);
    000047AE 53F1                   MOV.L       @(4,R15),R3
    000047B0 61D2                   MOV.L       @R13,R1
    000047B2 6233                   MOV         R3,R2
    000047B4 4300                   SHLL        R3
    000047B6 332C                   ADD         R2,R3
    000047B8 4308                   SHLL2       R3
    000047BA 4300                   SHLL        R3
    000047BC 331C                   ADD         R1,R3
    000047BE 2F36                   MOV.L       R3,@-R15
          EDIT.c  3055                  break;
    000047C0              L4953:                            
    000047C0 D306                   MOV.L       L5195+16,R3; _sprintf
    000047C2 430B                   JSR         @R3
    000047C4 54F8                   MOV.L       @(32,R15),R4
    000047C6 7F04                   ADD         #4,R15
    000047C8              L4594:                            
          EDIT.c  3056        }
          EDIT.c  3057        return(1);
    000047C8 A00F                   BRA         L4595
    000047CA E001                   MOV         #1,R0
    000047CC              L5195:                            
    000047CC <00000000>             .DATA.L     _KeyboardStatusHide
    000047D0 <00000000>             .DATA.L     _RestoreDisp
    000047D4 <00000000>             .DATA.L     _MenuRestoreBar
    000047D8 <00000000>             .DATA.L     L620
    000047DC <00000000>             .DATA.L     _sprintf
    000047E0 <00000000>             .DATA.L     L813
    000047E4 <00000000>             .DATA.L     L815
    000047E8              L4593:                            
          EDIT.c  3058      }
          EDIT.c  3059      else
          EDIT.c  3060      {
          EDIT.c  3061        return(0);
    000047E8 E000                   MOV         #0,R0
          EDIT.c  3062      }
          EDIT.c  3063    
          EDIT.c  3064    }
    000047EA              L4595:                            
    000047EA 9177                   MOV.W       L5196,R1   ; H'0110
    000047EC 3F1C                   ADD         R1,R15
    000047EE 4F26                   LDS.L       @R15+,PR
    000047F0 68F6                   MOV.L       @R15+,R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  221


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000047F2 69F6                   MOV.L       @R15+,R9
    000047F4 6AF6                   MOV.L       @R15+,R10
    000047F6 6BF6                   MOV.L       @R15+,R11
    000047F8 6CF6                   MOV.L       @R15+,R12
    000047FA 6DF6                   MOV.L       @R15+,R13
    000047FC 000B                   RTS
    000047FE 6EF6                   MOV.L       @R15+,R14
          EDIT.c  3065    
          EDIT.c  3066    // ----------------------------------------------------------------
          EDIT.c  3067    // Print file entry
          EDIT.c  3068    void PrintFolderEntry(int iRow,struct Direc *sDirec, int iColor)
    00004800              _PrintFolderEntry:               ; function: PrintFolderEntry
                                                           ; frame size=136
    00004800 2FE6                   MOV.L       R14,@-R15
          EDIT.c  3069    {
          EDIT.c  3070      //Variables
          EDIT.c  3071      char sStr1[50];
          EDIT.c  3072      char sStr2[50];
          EDIT.c  3073      
          EDIT.c  3074      //Format
          EDIT.c  3075      switch(sDirec->cSort)
    00004802 E014                   MOV         #20,R0
    00004804 2FD6                   MOV.L       R13,@-R15
    00004806 6E53                   MOV         R5,R14
    00004808 2FC6                   MOV.L       R12,@-R15
    0000480A 4F22                   STS.L       PR,@-R15
    0000480C DC34                   MOV.L       L5196+4,R12; _sprintf
    0000480E 7F90                   ADD         #-112,R15
    00004810 2F42                   MOV.L       R4,@R15
    00004812 6DF3                   MOV         R15,R13
    00004814 1F61                   MOV.L       R6,@(4,R15)
    00004816 00EC                   MOV.B       @(R0,R14),R0
    00004818 600C                   EXTU.B      R0,R0
    0000481A 8800                   CMP/EQ      #0,R0
    0000481C 8D0C                   BT/S        L2797
    0000481E 7D08                   ADD         #8,R13
    00004820 8802                   CMP/EQ      #2,R0
    00004822 8909                   BT          L2798
    00004824 8804                   CMP/EQ      #4,R0
    00004826 8907                   BT          L2799
    00004828 8801                   CMP/EQ      #1,R0
    0000482A 8908                   BT          L2801
    0000482C 8803                   CMP/EQ      #3,R0
    0000482E 8906                   BT          L2802
    00004830 8805                   CMP/EQ      #5,R0
    00004832 8904                   BT          L2803
    00004834 A009                   BRA         L4597
    00004836 0009                   NOP
    00004838              L2797:                           ; case label 
          EDIT.c  3076      {
          EDIT.c  3077        case 0:
          EDIT.c  3078        case 2:
    00004838              L2798:                           ; case label 
          EDIT.c  3079        case 4:
    00004838              L2799:                           ; case label 
          EDIT.c  3080          sprintf(sStr2,"%s",sDirec->sCName);
    00004838 D32A                   MOV.L       L5196+8,R3 ; L1136




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  222


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3081          break;
    0000483A A002                   BRA         L4955
    0000483C 2FE6                   MOV.L       R14,@-R15
    0000483E              L2801:                           ; case label 
          EDIT.c  3082        case 1:
          EDIT.c  3083        case 3:
    0000483E              L2802:                           ; case label 
          EDIT.c  3084        case 5:
    0000483E              L2803:                           ; case label 
          EDIT.c  3085          sprintf(sStr2," %s",sDirec->sCName);
    0000483E 2FE6                   MOV.L       R14,@-R15
    00004840 D329                   MOV.L       L5196+12,R3; L1137
          EDIT.c  3086          break;
    00004842              L4955:                            
    00004842 2F36                   MOV.L       R3,@-R15
    00004844 4C0B                   JSR         @R12
    00004846 64D3                   MOV         R13,R4
    00004848 7F08                   ADD         #8,R15
    0000484A              L4597:                            
          EDIT.c  3087      }
          EDIT.c  3088      
          EDIT.c  3089      //Print
          EDIT.c  3090      SetColor(iColor);
    0000484A D328                   MOV.L       L5196+16,R3; _SetColor
    0000484C 430B                   JSR         @R3
    0000484E 54F1                   MOV.L       @(4,R15),R4
          EDIT.c  3091      sprintf(sStr1,"%-9s        ",sStr2);
    00004850 2FD6                   MOV.L       R13,@-R15
    00004852 D227                   MOV.L       L5196+20,R2; L1138
    00004854 2F26                   MOV.L       R2,@-R15
    00004856 64F3                   MOV         R15,R4
    00004858 4C0B                   JSR         @R12
    0000485A 7444                   ADD         #68,R4
          EDIT.c  3092      PrintStr(2,iRow,sStr1);
    0000485C 55F2                   MOV.L       @(8,R15),R5
    0000485E 66F3                   MOV         R15,R6
    00004860 D324                   MOV.L       L5196+24,R3; _PrintStr
    00004862 7644                   ADD         #68,R6
    00004864 430B                   JSR         @R3
    00004866 E402                   MOV         #2,R4
          EDIT.c  3093      
          EDIT.c  3094    }
    00004868 7F78                   ADD         #120,R15
    0000486A 4F26                   LDS.L       @R15+,PR
    0000486C 6CF6                   MOV.L       @R15+,R12
    0000486E 6DF6                   MOV.L       @R15+,R13
    00004870 000B                   RTS
    00004872 6EF6                   MOV.L       @R15+,R14
          EDIT.c  3095    
          EDIT.c  3096    // ----------------------------------------------------------------
          EDIT.c  3097    // Configuration 
          EDIT.c  3098    void Configuration(struct Config *sConfig)
    00004874              _Configuration:                  ; function: Configuration
                                                           ; frame size=88
                                                           ; used runtime library name:
                                                           ; __slow_mvn, __slow_strcpy, __slow_strcmp1
    00004874 4F22                   STS.L       PR,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  223


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3099    {
          EDIT.c  3100      //Constants
          EDIT.c  3101      #define CONFIGLINES 16
          EDIT.c  3102      
          EDIT.c  3103      //Variables
          EDIT.c  3104      int i;
          EDIT.c  3105      int iExit;
          EDIT.c  3106      int iRefresh=1;
    00004876 E201                   MOV         #1,R2
    00004878 7FBC                   ADD         #-68,R15
    0000487A 63F3                   MOV         R15,R3
    0000487C 7340                   ADD         #64,R3
          EDIT.c  3107      static int iStart=0;
          EDIT.c  3108      static int iRow=0;
          EDIT.c  3109      static int iARow=0;
          EDIT.c  3110      int iCode;
          EDIT.c  3111      int iNew;
          EDIT.c  3112      unsigned int iKey;
          EDIT.c  3113      char sRoot[5]="";          
    0000487E 61F3                   MOV         R15,R1
    00004880 2342                   MOV.L       R4,@R3
    00004882 7120                   ADD         #32,R1
    00004884 1F2D                   MOV.L       R2,@(52,R15)
    00004886 D21C                   MOV.L       L5196+28,R2; L1151
    00004888 D31C                   MOV.L       L5196+32,R3; __slow_mvn
    0000488A 430B                   JSR         @R3
    0000488C E005                   MOV         #5,R0
          EDIT.c  3114      char sFolder[MAXFNAME]=""; 
    0000488E 61F3                   MOV         R15,R1
    00004890 D21B                   MOV.L       L5196+36,R2; L1153
    00004892 7110                   ADD         #16,R1
    00004894 D319                   MOV.L       L5196+32,R3; __slow_mvn
    00004896 430B                   JSR         @R3
    00004898 E00D                   MOV         #13,R0
          EDIT.c  3115      char sFile[MAXFNAME]="";   
    0000489A 61F3                   MOV         R15,R1
    0000489C D219                   MOV.L       L5196+40,R2; L1155
    0000489E D317                   MOV.L       L5196+32,R3; __slow_mvn
    000048A0 430B                   JSR         @R3
    000048A2 E00D                   MOV         #13,R0
          EDIT.c  3116      
          EDIT.c  3117      //Init screen
          EDIT.c  3118      MenuStoreBar();
    000048A4 D118                   MOV.L       L5196+44,R1; _MenuStoreBar
    000048A6 410B                   JSR         @R1
    000048A8 0009                   NOP
          EDIT.c  3119      KeyboardStatusHideStore();
    000048AA D218                   MOV.L       L5196+48,R2; _KeyboardStatusHideStore
    000048AC 420B                   JSR         @R2
    000048AE 0009                   NOP
          EDIT.c  3120      KeyboardStatusHide(1);
    000048B0 D317                   MOV.L       L5196+52,R3; _KeyboardStatusHide
    000048B2 430B                   JSR         @R3
    000048B4 E401                   MOV         #1,R4
          EDIT.c  3121      Bdisp_AllClr_DDVRAM();
    000048B6 D217                   MOV.L       L5196+56,R2; _Bdisp_AllClr_DDVRAM
    000048B8 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  224


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000048BA 0009                   NOP
          EDIT.c  3122      MenuSetBar(MENUBAREXPL); 
    000048BC D316                   MOV.L       L5196+60,R3; _MenuSetBar
    000048BE 430B                   JSR         @R3
    000048C0 E403                   MOV         #3,R4
          EDIT.c  3123      
          EDIT.c  3124      //Main loop
          EDIT.c  3125      iExit=0;
    000048C2 E200                   MOV         #0,R2
    000048C4 1F2E                   MOV.L       R2,@(56,R15)
          EDIT.c  3126      do{
    000048C6              L4598:                            
          EDIT.c  3127          
          EDIT.c  3128        //Rewrite screen
          EDIT.c  3129        if(iRefresh==1)
    000048C6 50FD                   MOV.L       @(52,R15),R0
    000048C8 8801                   CMP/EQ      #1,R0
    000048CA 8B3F                   BF          L4599
          EDIT.c  3130        {
          EDIT.c  3131          SetFont(FONTL);
    000048CC D213                   MOV.L       L5196+64,R2; _SetFont
    000048CE 420B                   JSR         @R2
    000048D0 E403                   MOV         #3,R4
          EDIT.c  3132          SetColor(COLNOR);
    000048D2 D306                   MOV.L       L5196+16,R3; _SetColor
    000048D4 430B                   JSR         @R3
    000048D6 E400                   MOV         #0,R4
          EDIT.c  3133          for(i=0;i<7;i++)
    000048D8 A033                   BRA         L4956
    000048DA E200                   MOV         #0,R2
    000048DC              L5196:                            
    000048DC 0110                   .DATA.W     H'0110
    000048DE 0000                   .DATA.W     0
    000048E0 <00000000>             .DATA.L     _sprintf
    000048E4 <00000000>             .DATA.L     L1136
    000048E8 <00000000>             .DATA.L     L1137
    000048EC <00000000>             .DATA.L     _SetColor
    000048F0 <00000000>             .DATA.L     L1138
    000048F4 <00000000>             .DATA.L     _PrintStr
    000048F8 <00000000>             .DATA.L     L1151
    000048FC <00000000>             .DATA.L     __slow_mvn
    00004900 <00000000>             .DATA.L     L1153
    00004904 <00000000>             .DATA.L     L1155
    00004908 <00000000>             .DATA.L     _MenuStoreBar
    0000490C <00000000>             .DATA.L     _KeyboardStatusHideStore
    00004910 <00000000>             .DATA.L     _KeyboardStatusHide
    00004914 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00004918 <00000000>             .DATA.L     _MenuSetBar
    0000491C <00000000>             .DATA.L     _SetFont
    00004920              L4601:                            
          EDIT.c  3134          {
          EDIT.c  3135            if(i+iStart<CONFIGLINES)
    00004920 D221                   MOV.L       L5197+2,R2 ; __$iStart$1144
    00004922 E010                   MOV         #16,R0
    00004924 51FF                   MOV.L       @(60,R15),R1
    00004926 6322                   MOV.L       @R2,R3
    00004928 313C                   ADD         R3,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  225


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000492A 3103                   CMP/GE      R0,R1
    0000492C 8907                   BT          L4602
          EDIT.c  3136              PrintConfigEntry(i,iStart+i,sConfig,1);
    0000492E E701                   MOV         #1,R7
    00004930 6322                   MOV.L       @R2,R3
    00004932 E040                   MOV         #64,R0
    00004934 55FF                   MOV.L       @(60,R15),R5
    00004936 06FE                   MOV.L       @(R0,R15),R6
    00004938 353C                   ADD         R3,R5
    0000493A B4BA                   BSR         _PrintConfigEntry
    0000493C 54FF                   MOV.L       @(60,R15),R4
    0000493E              L4602:                            
    0000493E 52FF                   MOV.L       @(60,R15),R2
    00004940 7201                   ADD         #1,R2
    00004942              L4956:                            
    00004942 E307                   MOV         #7,R3
    00004944 1F2F                   MOV.L       R2,@(60,R15)
    00004946 6123                   MOV         R2,R1
    00004948 3133                   CMP/GE      R3,R1
    0000494A 8BE9                   BF          L4601
    0000494C              L4599:                            
          EDIT.c  3137          }
          EDIT.c  3138        }
          EDIT.c  3139        
          EDIT.c  3140        //Cursor position
          EDIT.c  3141        if(iRow!=iARow || iRefresh!=0)
    0000494C D217                   MOV.L       L5197+6,R2 ; __$iARow$1146
    0000494E 6322                   MOV.L       @R2,R3
    00004950 D117                   MOV.L       L5197+10,R1; __$iRow$1145
    00004952 6212                   MOV.L       @R1,R2
    00004954 3230                   CMP/EQ      R3,R2
    00004956 8B02                   BF          L4604
    00004958 52FD                   MOV.L       @(52,R15),R2
    0000495A 2228                   TST         R2,R2
    0000495C 8915                   BT          L4603
    0000495E              L4604:                            
          EDIT.c  3142        {
          EDIT.c  3143          PrintConfigEntry(iARow,iStart+iARow,sConfig,1);
    0000495E E701                   MOV         #1,R7
    00004960 D212                   MOV.L       L5197+6,R2 ; __$iARow$1146
    00004962 E040                   MOV         #64,R0
    00004964 D110                   MOV.L       L5197+2,R1 ; __$iStart$1144
    00004966 06FE                   MOV.L       @(R0,R15),R6
    00004968 6322                   MOV.L       @R2,R3
    0000496A 6512                   MOV.L       @R1,R5
    0000496C 353C                   ADD         R3,R5
    0000496E B4A0                   BSR         _PrintConfigEntry
    00004970 6433                   MOV         R3,R4
          EDIT.c  3144          PrintConfigEntry(iRow,iStart+iRow,sConfig,0);
    00004972 E700                   MOV         #0,R7
    00004974 D20E                   MOV.L       L5197+10,R2; __$iRow$1145
    00004976 E040                   MOV         #64,R0
    00004978 D10B                   MOV.L       L5197+2,R1 ; __$iStart$1144
    0000497A 06FE                   MOV.L       @(R0,R15),R6
    0000497C 6322                   MOV.L       @R2,R3
    0000497E 6512                   MOV.L       @R1,R5
    00004980 353C                   ADD         R3,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  226


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004982 B496                   BSR         _PrintConfigEntry
    00004984 6433                   MOV         R3,R4
          EDIT.c  3145          iRefresh=1;
    00004986 E201                   MOV         #1,R2
    00004988 1F2D                   MOV.L       R2,@(52,R15)
    0000498A              L4603:                            
          EDIT.c  3146        }    
          EDIT.c  3147        
          EDIT.c  3148        //Set menu bar
          EDIT.c  3149        switch(iRow+iStart)
    0000498A D109                   MOV.L       L5197+10,R1; __$iRow$1145
    0000498C D206                   MOV.L       L5197+2,R2 ; __$iStart$1144
    0000498E 6312                   MOV.L       @R1,R3
    00004990 6022                   MOV.L       @R2,R0
    00004992 303C                   ADD         R3,R0
    00004994 E110                   MOV         #16,R1
    00004996 3012                   CMP/HS      R1,R0
    00004998 8941                   BT          L4605
    0000499A 4000                   SHLL        R0
    0000499C 6103                   MOV         R0,R1
    0000499E C705                   MOVA        L5199,R0
    000049A0 001D                   MOV.W       @(R0,R1),R0
    000049A2 0023                   BRAF        R0
    000049A4 0009                   NOP
    000049A6              L5198:                            
    000049A6              L5197:                            
    000049A6 0000                   .DATA.W     0
    000049A8 <00000000>             .DATA.L     __$iStart$1144
    000049AC <00000000>             .DATA.L     __$iARow$1146
    000049B0 <00000000>             .DATA.L     __$iRow$1145
    000049B4              L5199:
    000049B4 002E                   .DATA.W     L2812-L5198
    000049B6 0038                   .DATA.W     L2813-L5198
    000049B8 003C                   .DATA.W     L2814-L5198
    000049BA 0040                   .DATA.W     L2815-L5198
    000049BC 0044                   .DATA.W     L2816-L5198
    000049BE 0048                   .DATA.W     L2817-L5198
    000049C0 004C                   .DATA.W     L2818-L5198
    000049C2 0050                   .DATA.W     L2819-L5198
    000049C4 0064                   .DATA.W     L2824-L5198
    000049C6 0068                   .DATA.W     L2825-L5198
    000049C8 006C                   .DATA.W     L2826-L5198
    000049CA 0070                   .DATA.W     L2827-L5198
    000049CC 0054                   .DATA.W     L2820-L5198
    000049CE 0058                   .DATA.W     L2821-L5198
    000049D0 005C                   .DATA.W     L2822-L5198
    000049D2 0060                   .DATA.W     L2823-L5198
          EDIT.c  3150        {
          EDIT.c  3151          case CONFIGTRYSD : MenuSetBar(MENUBARTRSD); break;
    000049D4              L2812:                           ; case label 
    000049D4 D133                   MOV.L       L5200+22,R1; _MenuSetBar
    000049D6 410B                   JSR         @R1
    000049D8 E40D                   MOV         #13,R4
    000049DA A020                   BRA         L4605
    000049DC 0009                   NOP
    000049DE              L2813:                           ; case label 
          EDIT.c  3152          case CONFIGHIDSYS: MenuSetBar(MENUBARHSYS); break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  227


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000049DE A01B                   BRA         L4970
    000049E0 E414                   MOV         #20,R4
    000049E2              L2814:                           ; case label 
          EDIT.c  3153          case CONFIGNLMODE: MenuSetBar(MENUBARNLMO); break;
    000049E2 A019                   BRA         L4970
    000049E4 E40C                   MOV         #12,R4
    000049E6              L2815:                           ; case label 
          EDIT.c  3154          case CONFIGWWRAP : MenuSetBar(MENUBARWWRA); break;
    000049E6 A017                   BRA         L4970
    000049E8 E418                   MOV         #24,R4
    000049EA              L2816:                           ; case label 
          EDIT.c  3155          case CONFIGDFRE  : MenuSetBar(MENUBARDFRE); break;
    000049EA A015                   BRA         L4970
    000049EC E41D                   MOV         #29,R4
    000049EE              L2817:                           ; case label 
          EDIT.c  3156          case CONFIGDROO  : MenuSetBar(MENUBARDROO); break;
    000049EE A013                   BRA         L4970
    000049F0 E41E                   MOV         #30,R4
    000049F2              L2818:                           ; case label 
          EDIT.c  3157          case CONFIGFONT  : MenuSetBar(MENUBARFONT); break;
    000049F2 A011                   BRA         L4970
    000049F4 E40B                   MOV         #11,R4
    000049F6              L2819:                           ; case label 
          EDIT.c  3158          case CONFIGINFO  : MenuSetBar(MENUBARINFO); break;
    000049F6 A00F                   BRA         L4970
    000049F8 E417                   MOV         #23,R4
    000049FA              L2820:                           ; case label 
          EDIT.c  3159          case CONFIGAOPEN : MenuSetBar(MENUBARAOPE); break;
    000049FA A00D                   BRA         L4970
    000049FC E40E                   MOV         #14,R4
    000049FE              L2821:                           ; case label 
          EDIT.c  3160          case CONFIGAROOT : MenuSetBar(MENUBARACFG); break;
    000049FE A00B                   BRA         L4970
    00004A00 E40F                   MOV         #15,R4
    00004A02              L2822:                           ; case label 
          EDIT.c  3161          case CONFIGANAME : MenuSetBar(MENUBARACFG); break;
    00004A02 A009                   BRA         L4970
    00004A04 E40F                   MOV         #15,R4
    00004A06              L2823:                           ; case label 
          EDIT.c  3162          case CONFIGAFOLDR: MenuSetBar(MENUBARACFG); break;
    00004A06 A007                   BRA         L4970
    00004A08 E40F                   MOV         #15,R4
    00004A0A              L2824:                           ; case label 
          EDIT.c  3163          case CONFIGTEXTB:  MenuSetBar(MENUBARTXTB); break;
    00004A0A A005                   BRA         L4970
    00004A0C E415                   MOV         #21,R4
    00004A0E              L2825:                           ; case label 
          EDIT.c  3164          case CONFIGCLIPB:  MenuSetBar(MENUBARCLIB); break;
    00004A0E A003                   BRA         L4970
    00004A10 E416                   MOV         #22,R4
    00004A12              L2826:                           ; case label 
          EDIT.c  3165          case CONFIGNFIL :  MenuSetBar(MENUBARNFIL); break;
    00004A12 A001                   BRA         L4970
    00004A14 E419                   MOV         #25,R4
    00004A16              L2827:                           ; case label 
          EDIT.c  3166          case CONFIGNFOL :  MenuSetBar(MENUBARNFOL); break;
    00004A16 E41A                   MOV         #26,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  228


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004A18              L4970:                            
    00004A18 D222                   MOV.L       L5200+22,R2; _MenuSetBar
    00004A1A 420B                   JSR         @R2
    00004A1C 0009                   NOP
    00004A1E              L4605:                            
          EDIT.c  3167        }
          EDIT.c  3168        
          EDIT.c  3169        //Flush screen
          EDIT.c  3170        if(iRefresh!=0)
    00004A1E 52FD                   MOV.L       @(52,R15),R2
    00004A20 2228                   TST         R2,R2
    00004A22 8904                   BT          L4606
          EDIT.c  3171        {
          EDIT.c  3172          Bdisp_PutDisp_DD();
    00004A24 D320                   MOV.L       L5200+26,R3; _Bdisp_PutDisp_DD
    00004A26 430B                   JSR         @R3
    00004A28 0009                   NOP
          EDIT.c  3173          iRefresh=0;
    00004A2A E200                   MOV         #0,R2
    00004A2C 1F2D                   MOV.L       R2,@(52,R15)
    00004A2E              L4606:                            
          EDIT.c  3174        }
          EDIT.c  3175        
          EDIT.c  3176        //Previous cursor position
          EDIT.c  3177        iARow=iRow;
    00004A2E D11F                   MOV.L       L5200+30,R1; __$iRow$1145
    00004A30 D21F                   MOV.L       L5200+34,R2; __$iARow$1146
    00004A32 6312                   MOV.L       @R1,R3
    00004A34 2232                   MOV.L       R3,@R2
          EDIT.c  3178        
          EDIT.c  3179        //Get Key
          EDIT.c  3180        iKey=GetKeyb();
    00004A36 D31F                   MOV.L       L5200+38,R3; _GetKeyb
    00004A38 430B                   JSR         @R3
    00004A3A 0009                   NOP
    00004A3C 1F0A                   MOV.L       R0,@(40,R15)
          EDIT.c  3181          
          EDIT.c  3182        //Process keys
          EDIT.c  3183        switch(iKey)
    00004A3E 9126                   MOV.W       L5200,R1   ; H'7539
    00004A40 3010                   CMP/EQ      R1,R0
    00004A42 8939                   BT          L2828
    00004A44 9124                   MOV.W       L5200+2,R1 ; H'753A
    00004A46 3010                   CMP/EQ      R1,R0
    00004A48 8936                   BT          L2829
    00004A4A 9122                   MOV.W       L5200+4,R1 ; H'753B
    00004A4C 3010                   CMP/EQ      R1,R0
    00004A4E 8933                   BT          L2830
    00004A50 9120                   MOV.W       L5200+6,R1 ; H'753C
    00004A52 3010                   CMP/EQ      R1,R0
    00004A54 8930                   BT          L2831
    00004A56 911E                   MOV.W       L5200+8,R1 ; H'753D
    00004A58 3010                   CMP/EQ      R1,R0
    00004A5A 892D                   BT          L2832
    00004A5C 911C                   MOV.W       L5200+10,R1; H'753E
    00004A5E 3010                   CMP/EQ      R1,R0
    00004A60 892A                   BT          L2833




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  229


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004A62 911A                   MOV.W       L5200+12,R1; H'7532
    00004A64 3010                   CMP/EQ      R1,R0
    00004A66 8B01                   BF          L5201
    00004A68 A3C9                   BRA         L2881
    00004A6A 0009                   NOP
    00004A6C              L5201:                            
    00004A6C 9116                   MOV.W       L5200+14,R1; H'7534
    00004A6E 3010                   CMP/EQ      R1,R0
    00004A70 8B01                   BF          L5202
    00004A72 A3C7                   BRA         L2882
    00004A74 0009                   NOP
    00004A76              L5202:                            
    00004A76 9112                   MOV.W       L5200+16,R1; H'7547
    00004A78 3010                   CMP/EQ      R1,R0
    00004A7A 8B01                   BF          L5203
    00004A7C A3C5                   BRA         L2883
    00004A7E 0009                   NOP
    00004A80              L5203:                            
    00004A80 910E                   MOV.W       L5200+18,R1; H'7542
    00004A82 3010                   CMP/EQ      R1,R0
    00004A84 8B01                   BF          L5204
    00004A86 A3EB                   BRA         L2884
    00004A88 0009                   NOP
    00004A8A              L5204:                            
    00004A8A A400                   BRA         L4607
    00004A8C 0009                   NOP
    00004A8E              L5200:                            
    00004A8E 7539                   .DATA.W     H'7539
    00004A90 753A                   .DATA.W     H'753A
    00004A92 753B                   .DATA.W     H'753B
    00004A94 753C                   .DATA.W     H'753C
    00004A96 753D                   .DATA.W     H'753D
    00004A98 753E                   .DATA.W     H'753E
    00004A9A 7532                   .DATA.W     H'7532
    00004A9C 7534                   .DATA.W     H'7534
    00004A9E 7547                   .DATA.W     H'7547
    00004AA0 7542                   .DATA.W     H'7542
    00004AA2 0000                   .DATA.W     0
    00004AA4 <00000000>             .DATA.L     _MenuSetBar
    00004AA8 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00004AAC <00000000>             .DATA.L     __$iRow$1145
    00004AB0 <00000000>             .DATA.L     __$iARow$1146
    00004AB4 <00000000>             .DATA.L     _GetKeyb
    00004AB8              L2828:                           ; case label 
          EDIT.c  3184        {
          EDIT.c  3185          //Process menu commands
          EDIT.c  3186          case KEY_CTRL_F1:
          EDIT.c  3187          case KEY_CTRL_F2:
    00004AB8              L2829:                           ; case label 
          EDIT.c  3188          case KEY_CTRL_F3:
    00004AB8              L2830:                           ; case label 
          EDIT.c  3189          case KEY_CTRL_F4:
    00004AB8              L2831:                           ; case label 
          EDIT.c  3190          case KEY_CTRL_F5:
    00004AB8              L2832:                           ; case label 
          EDIT.c  3191          case KEY_CTRL_F6:
    00004AB8              L2833:                           ; case label 




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  230


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3192            iCode=MenuFunctionKey(iKey);
    00004AB8 D309                   MOV.L       L5205,R3   ; _MenuFunctionKey
    00004ABA 430B                   JSR         @R3
    00004ABC 54FA                   MOV.L       @(40,R15),R4
          EDIT.c  3193            if(iCode!=NODENOFUNCT)
    00004ABE 2008                   TST         R0,R0
    00004AC0 8F02                   BF/S        L5206
    00004AC2 1F0C                   MOV.L       R0,@(48,R15)
    00004AC4 A3E3                   BRA         L4607
    00004AC6 0009                   NOP
    00004AC8              L5206:                            
    00004AC8 70E2                   ADD         #-30,R0
    00004ACA E143                   MOV         #67,R1
    00004ACC 3012                   CMP/HS      R1,R0
    00004ACE 8B01                   BF          L5207
    00004AD0 A393                   BRA         L4609
    00004AD2 0009                   NOP
    00004AD4              L5207:                            
    00004AD4 4000                   SHLL        R0
    00004AD6 6103                   MOV         R0,R1
    00004AD8 C702                   MOVA        L5209,R0
    00004ADA 001D                   MOV.W       @(R0,R1),R0
    00004ADC 0023                   BRAF        R0
    00004ADE 0009                   NOP
    00004AE0              L5208:                            
    00004AE0              L5205:                            
    00004AE0 <00000000>             .DATA.L     _MenuFunctionKey
    00004AE4              L5209:
    00004AE4 0214                   .DATA.W     L2847-L5208
    00004AE6 0230                   .DATA.W     L2848-L5208
    00004AE8 024C                   .DATA.W     L2849-L5208
    00004AEA 0268                   .DATA.W     L2850-L5208
    00004AEC 0284                   .DATA.W     L2851-L5208
    00004AEE 02A0                   .DATA.W     L2852-L5208
    00004AF0 071A                   .DATA.W     L4609-L5208
    00004AF2 008A                   .DATA.W     L2834-L5208
    00004AF4 00A6                   .DATA.W     L2835-L5208
    00004AF6 02BC                   .DATA.W     L2853-L5208
    00004AF8 02D8                   .DATA.W     L2854-L5208
    00004AFA 0308                   .DATA.W     L2855-L5208
    00004AFC 038C                   .DATA.W     L2856-L5208
    00004AFE 071A                   .DATA.W     L4609-L5208
    00004B00 071A                   .DATA.W     L4609-L5208
    00004B02 071A                   .DATA.W     L4609-L5208
    00004B04 071A                   .DATA.W     L4609-L5208
    00004B06 071A                   .DATA.W     L4609-L5208
    00004B08 071A                   .DATA.W     L4609-L5208
    00004B0A 071A                   .DATA.W     L4609-L5208
    00004B0C 071A                   .DATA.W     L4609-L5208
    00004B0E 071A                   .DATA.W     L4609-L5208
    00004B10 071A                   .DATA.W     L4609-L5208
    00004B12 00C2                   .DATA.W     L2836-L5208
    00004B14 00DE                   .DATA.W     L2837-L5208
    00004B16 03EC                   .DATA.W     L2857-L5208
    00004B18 040C                   .DATA.W     L2858-L5208
    00004B1A 042C                   .DATA.W     L2859-L5208
    00004B1C 046C                   .DATA.W     L2860-L5208




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  231


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004B1E 048C                   .DATA.W     L2861-L5208
    00004B20 04AC                   .DATA.W     L2862-L5208
    00004B22 04CC                   .DATA.W     L2863-L5208
    00004B24 04EC                   .DATA.W     L2864-L5208
    00004B26 050C                   .DATA.W     L2865-L5208
    00004B28 052C                   .DATA.W     L2866-L5208
    00004B2A 054C                   .DATA.W     L2867-L5208
    00004B2C 056C                   .DATA.W     L2868-L5208
    00004B2E 071A                   .DATA.W     L4609-L5208
    00004B30 00FA                   .DATA.W     L2838-L5208
    00004B32 0116                   .DATA.W     L2839-L5208
    00004B34 0132                   .DATA.W     L2840-L5208
    00004B36 014E                   .DATA.W     L2841-L5208
    00004B38 071A                   .DATA.W     L4609-L5208
    00004B3A 071A                   .DATA.W     L4609-L5208
    00004B3C 058C                   .DATA.W     L2869-L5208
    00004B3E 05C4                   .DATA.W     L2870-L5208
    00004B40 05E4                   .DATA.W     L2871-L5208
    00004B42 0604                   .DATA.W     L2872-L5208
    00004B44 0624                   .DATA.W     L2873-L5208
    00004B46 0644                   .DATA.W     L2874-L5208
    00004B48 0664                   .DATA.W     L2875-L5208
    00004B4A 0684                   .DATA.W     L2876-L5208
    00004B4C 06A4                   .DATA.W     L2877-L5208
    00004B4E 06C4                   .DATA.W     L2878-L5208
    00004B50 06E0                   .DATA.W     L2879-L5208
    00004B52 0700                   .DATA.W     L2880-L5208
    00004B54 071A                   .DATA.W     L4609-L5208
    00004B56 071A                   .DATA.W     L4609-L5208
    00004B58 071A                   .DATA.W     L4609-L5208
    00004B5A 071A                   .DATA.W     L4609-L5208
    00004B5C 071A                   .DATA.W     L4609-L5208
    00004B5E 071A                   .DATA.W     L4609-L5208
    00004B60 016A                   .DATA.W     L2842-L5208
    00004B62 01F8                   .DATA.W     L2846-L5208
    00004B64 0186                   .DATA.W     L2843-L5208
    00004B66 01AC                   .DATA.W     L2844-L5208
    00004B68 01D2                   .DATA.W     L2845-L5208
          EDIT.c  3194            {
          EDIT.c  3195              switch(iCode)
          EDIT.c  3196              {
          EDIT.c  3197              
          EDIT.c  3198                //Yes
          EDIT.c  3199                case NODETRYSDYES:
    00004B6A              L2834:                           ; case label 
          EDIT.c  3200                  if(sConfig->iTrySD==0)
    00004B6A E040                   MOV         #64,R0
    00004B6C 02FE                   MOV.L       @(R0,R15),R2
    00004B6E 5322                   MOV.L       @(8,R2),R3
    00004B70 2338                   TST         R3,R3
    00004B72 8901                   BT          L5210
    00004B74 A38B                   BRA         L4607
    00004B76 0009                   NOP
    00004B78              L5210:                            
          EDIT.c  3201                  {
          EDIT.c  3202                    sConfig->iTrySD=1;
    00004B78 E040                   MOV         #64,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  232


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004B7A E201                   MOV         #1,R2
    00004B7C 03FE                   MOV.L       @(R0,R15),R3
    00004B7E 1322                   MOV.L       R2,@(8,R3)
          EDIT.c  3203                    iRefresh=1;
    00004B80 6323                   MOV         R2,R3
          EDIT.c  3204                  }
          EDIT.c  3205                  break;
    00004B82 A384                   BRA         L4607
    00004B84 1F3D                   MOV.L       R3,@(52,R15)
    00004B86              L2835:                           ; case label 
          EDIT.c  3206                
          EDIT.c  3207                //No
          EDIT.c  3208                case NODETRYSDNO:
          EDIT.c  3209                  if(sConfig->iTrySD==1)
    00004B86 E040                   MOV         #64,R0
    00004B88 00FE                   MOV.L       @(R0,R15),R0
    00004B8A 5002                   MOV.L       @(8,R0),R0
    00004B8C 8801                   CMP/EQ      #1,R0
    00004B8E 8901                   BT          L5211
    00004B90 A37D                   BRA         L4607
    00004B92 0009                   NOP
    00004B94              L5211:                            
          EDIT.c  3210                  {
          EDIT.c  3211                    sConfig->iTrySD=0;
    00004B94 E040                   MOV         #64,R0
    00004B96 E300                   MOV         #0,R3
    00004B98 02FE                   MOV.L       @(R0,R15),R2
    00004B9A 1232                   MOV.L       R3,@(8,R2)
          EDIT.c  3212                    iRefresh=1;
    00004B9C E201                   MOV         #1,R2
          EDIT.c  3213                  }
          EDIT.c  3214                  break;
    00004B9E A376                   BRA         L4607
    00004BA0 1F2D                   MOV.L       R2,@(52,R15)
    00004BA2              L2836:                           ; case label 
          EDIT.c  3215    
          EDIT.c  3216                //Hide system files -> Yes
          EDIT.c  3217                case NODEHSYSYES:
          EDIT.c  3218                  if(sConfig->iHideSysFiles==0)
    00004BA2 E040                   MOV         #64,R0
    00004BA4 01FE                   MOV.L       @(R0,R15),R1
    00004BA6 5313                   MOV.L       @(12,R1),R3
    00004BA8 2338                   TST         R3,R3
    00004BAA 8901                   BT          L5212
    00004BAC A36F                   BRA         L4607
    00004BAE 0009                   NOP
    00004BB0              L5212:                            
          EDIT.c  3219                  {
          EDIT.c  3220                    sConfig->iHideSysFiles=1;
    00004BB0 E040                   MOV         #64,R0
    00004BB2 E201                   MOV         #1,R2
    00004BB4 03FE                   MOV.L       @(R0,R15),R3
    00004BB6 1323                   MOV.L       R2,@(12,R3)
          EDIT.c  3221                    iRefresh=1;
    00004BB8 6323                   MOV         R2,R3
          EDIT.c  3222                  }
          EDIT.c  3223                  break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  233


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004BBA A368                   BRA         L4607
    00004BBC 1F3D                   MOV.L       R3,@(52,R15)
    00004BBE              L2837:                           ; case label 
          EDIT.c  3224                
          EDIT.c  3225                //Hide system files -> No
          EDIT.c  3226                case NODEHSYSNO:
          EDIT.c  3227                  if(sConfig->iHideSysFiles==1)
    00004BBE E040                   MOV         #64,R0
    00004BC0 00FE                   MOV.L       @(R0,R15),R0
    00004BC2 5003                   MOV.L       @(12,R0),R0
    00004BC4 8801                   CMP/EQ      #1,R0
    00004BC6 8901                   BT          L5213
    00004BC8 A361                   BRA         L4607
    00004BCA 0009                   NOP
    00004BCC              L5213:                            
          EDIT.c  3228                  {
          EDIT.c  3229                    sConfig->iHideSysFiles=0;
    00004BCC E040                   MOV         #64,R0
    00004BCE E300                   MOV         #0,R3
    00004BD0 02FE                   MOV.L       @(R0,R15),R2
    00004BD2 1233                   MOV.L       R3,@(12,R2)
          EDIT.c  3230                    iRefresh=1;
    00004BD4 E201                   MOV         #1,R2
          EDIT.c  3231                  }
          EDIT.c  3232                  break;
    00004BD6 A35A                   BRA         L4607
    00004BD8 1F2D                   MOV.L       R2,@(52,R15)
    00004BDA              L2838:                           ; case label 
          EDIT.c  3233    
          EDIT.c  3234                //Info bar -> Folder
          EDIT.c  3235                case NODEINFOFOLD:
          EDIT.c  3236                  if(sConfig->iInfo!=INFOBARFOLDER)
    00004BDA E040                   MOV         #64,R0
    00004BDC 00FE                   MOV.L       @(R0,R15),R0
    00004BDE 500A                   MOV.L       @(40,R0),R0
    00004BE0 8801                   CMP/EQ      #1,R0
    00004BE2 8B01                   BF          L5214
    00004BE4 A353                   BRA         L4607
    00004BE6 0009                   NOP
    00004BE8              L5214:                            
          EDIT.c  3237                  {
          EDIT.c  3238                    sConfig->iInfo=INFOBARFOLDER;
    00004BE8 E040                   MOV         #64,R0
    00004BEA E301                   MOV         #1,R3
    00004BEC 02FE                   MOV.L       @(R0,R15),R2
    00004BEE 123A                   MOV.L       R3,@(40,R2)
          EDIT.c  3239                    iRefresh=1;
    00004BF0 6233                   MOV         R3,R2
          EDIT.c  3240                  }
          EDIT.c  3241                  break;
    00004BF2 A34C                   BRA         L4607
    00004BF4 1F2D                   MOV.L       R2,@(52,R15)
    00004BF6              L2839:                           ; case label 
          EDIT.c  3242    
          EDIT.c  3243                //Info bar -> Cursor
          EDIT.c  3244                case NODEINFOCURS:
          EDIT.c  3245                  if(sConfig->iInfo!=INFOBARCURSOR)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  234


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004BF6 E040                   MOV         #64,R0
    00004BF8 00FE                   MOV.L       @(R0,R15),R0
    00004BFA 500A                   MOV.L       @(40,R0),R0
    00004BFC 8802                   CMP/EQ      #2,R0
    00004BFE 8B01                   BF          L5215
    00004C00 A345                   BRA         L4607
    00004C02 0009                   NOP
    00004C04              L5215:                            
          EDIT.c  3246                  {
          EDIT.c  3247                    sConfig->iInfo=INFOBARCURSOR;
    00004C04 E040                   MOV         #64,R0
    00004C06 E302                   MOV         #2,R3
    00004C08 02FE                   MOV.L       @(R0,R15),R2
    00004C0A 123A                   MOV.L       R3,@(40,R2)
          EDIT.c  3248                    iRefresh=1;
    00004C0C E201                   MOV         #1,R2
          EDIT.c  3249                  }
          EDIT.c  3250                  break;
    00004C0E A33E                   BRA         L4607
    00004C10 1F2D                   MOV.L       R2,@(52,R15)
    00004C12              L2840:                           ; case label 
          EDIT.c  3251    
          EDIT.c  3252                //Word wrap enable
          EDIT.c  3253                case NODEWWRAPON:
          EDIT.c  3254                  if(sConfig->iWordWrap!=1)
    00004C12 E040                   MOV         #64,R0
    00004C14 00FE                   MOV.L       @(R0,R15),R0
    00004C16 5005                   MOV.L       @(20,R0),R0
    00004C18 8801                   CMP/EQ      #1,R0
    00004C1A 8B01                   BF          L5216
    00004C1C A337                   BRA         L4607
    00004C1E 0009                   NOP
    00004C20              L5216:                            
          EDIT.c  3255                  {
          EDIT.c  3256                    sConfig->iWordWrap=1;
    00004C20 E040                   MOV         #64,R0
    00004C22 E301                   MOV         #1,R3
    00004C24 02FE                   MOV.L       @(R0,R15),R2
    00004C26 1235                   MOV.L       R3,@(20,R2)
          EDIT.c  3257                    iRefresh=1;
    00004C28 6233                   MOV         R3,R2
          EDIT.c  3258                  }
          EDIT.c  3259                  break;
    00004C2A A330                   BRA         L4607
    00004C2C 1F2D                   MOV.L       R2,@(52,R15)
    00004C2E              L2841:                           ; case label 
          EDIT.c  3260    
          EDIT.c  3261                //Word wrap disnable
          EDIT.c  3262                case NODEWWRAPOFF:
          EDIT.c  3263                  if(sConfig->iWordWrap!=0)
    00004C2E E040                   MOV         #64,R0
    00004C30 01FE                   MOV.L       @(R0,R15),R1
    00004C32 5315                   MOV.L       @(20,R1),R3
    00004C34 2338                   TST         R3,R3
    00004C36 8B01                   BF          L5217
    00004C38 A329                   BRA         L4607
    00004C3A 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  235


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004C3C              L5217:                            
          EDIT.c  3264                  {
          EDIT.c  3265                    sConfig->iWordWrap=0;
    00004C3C E040                   MOV         #64,R0
    00004C3E E200                   MOV         #0,R2
    00004C40 03FE                   MOV.L       @(R0,R15),R3
    00004C42 1325                   MOV.L       R2,@(20,R3)
          EDIT.c  3266                    iRefresh=1;
    00004C44 E301                   MOV         #1,R3
          EDIT.c  3267                  }
          EDIT.c  3268                  break;
    00004C46 A322                   BRA         L4607
    00004C48 1F3D                   MOV.L       R3,@(52,R15)
    00004C4A              L2842:                           ; case label 
          EDIT.c  3269    
          EDIT.c  3270                //Display bytes free in explorer (yes)
          EDIT.c  3271                case NODEDFREYES:
          EDIT.c  3272                  if(sConfig->iDispFree!=1)
    00004C4A E040                   MOV         #64,R0
    00004C4C 00FE                   MOV.L       @(R0,R15),R0
    00004C4E 5006                   MOV.L       @(24,R0),R0
    00004C50 8801                   CMP/EQ      #1,R0
    00004C52 8B01                   BF          L5218
    00004C54 A31B                   BRA         L4607
    00004C56 0009                   NOP
    00004C58              L5218:                            
          EDIT.c  3273                  {
          EDIT.c  3274                    sConfig->iDispFree=1;
    00004C58 E040                   MOV         #64,R0
    00004C5A E301                   MOV         #1,R3
    00004C5C 02FE                   MOV.L       @(R0,R15),R2
    00004C5E 1236                   MOV.L       R3,@(24,R2)
          EDIT.c  3275                    iRefresh=1;
    00004C60 6233                   MOV         R3,R2
          EDIT.c  3276                  }
          EDIT.c  3277                  break;
    00004C62 A314                   BRA         L4607
    00004C64 1F2D                   MOV.L       R2,@(52,R15)
    00004C66              L2843:                           ; case label 
          EDIT.c  3278    
          EDIT.c  3279                //Default root (main)
          EDIT.c  3280                case NODEDROOMAIN:
          EDIT.c  3281                  if(strcmp(sConfig->sDefRoot,"main")!=0)
    00004C66 E040                   MOV         #64,R0
    00004C68 D35B                   MOV.L       L5219+4,R3 ; __slow_strcmp1
    00004C6A D55A                   MOV.L       L5219,R5   ; L620
    00004C6C 04FE                   MOV.L       @(R0,R15),R4
    00004C6E 430B                   JSR         @R3
    00004C70 741C                   ADD         #28,R4
    00004C72 2008                   TST         R0,R0
    00004C74 8B01                   BF          L5220
    00004C76 A30A                   BRA         L4607
    00004C78 0009                   NOP
    00004C7A              L5220:                            
          EDIT.c  3282                  {
          EDIT.c  3283                    strcpy(sConfig->sDefRoot,"main");
    00004C7A E040                   MOV         #64,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  236


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004C7C D155                   MOV.L       L5219,R1   ; L620
    00004C7E 00FE                   MOV.L       @(R0,R15),R0
    00004C80 D356                   MOV.L       L5219+8,R3 ; __slow_strcpy
    00004C82 430B                   JSR         @R3
    00004C84 701C                   ADD         #28,R0
          EDIT.c  3284                    iRefresh=1;
    00004C86 E201                   MOV         #1,R2
          EDIT.c  3285                  }
          EDIT.c  3286                  break;
    00004C88 A301                   BRA         L4607
    00004C8A 1F2D                   MOV.L       R2,@(52,R15)
    00004C8C              L2844:                           ; case label 
          EDIT.c  3287    
          EDIT.c  3288                //Default root (smem)
          EDIT.c  3289                case NODEDROOSMEM:
          EDIT.c  3290                  if(strcmp(sConfig->sDefRoot,"fls0")!=0)
    00004C8C D554                   MOV.L       L5219+12,R5; L813
    00004C8E E040                   MOV         #64,R0
    00004C90 D351                   MOV.L       L5219+4,R3 ; __slow_strcmp1
    00004C92 04FE                   MOV.L       @(R0,R15),R4
    00004C94 430B                   JSR         @R3
    00004C96 741C                   ADD         #28,R4
    00004C98 2008                   TST         R0,R0
    00004C9A 8B01                   BF          L5221
    00004C9C A2F7                   BRA         L4607
    00004C9E 0009                   NOP
    00004CA0              L5221:                            
          EDIT.c  3291                  {
          EDIT.c  3292                    strcpy(sConfig->sDefRoot,"fls0");
    00004CA0 D14F                   MOV.L       L5219+12,R1; L813
    00004CA2 E040                   MOV         #64,R0
    00004CA4 D34D                   MOV.L       L5219+8,R3 ; __slow_strcpy
    00004CA6 00FE                   MOV.L       @(R0,R15),R0
    00004CA8 430B                   JSR         @R3
    00004CAA 701C                   ADD         #28,R0
          EDIT.c  3293                    iRefresh=1;
    00004CAC E201                   MOV         #1,R2
          EDIT.c  3294                  }
          EDIT.c  3295                  break;
    00004CAE A2EE                   BRA         L4607
    00004CB0 1F2D                   MOV.L       R2,@(52,R15)
    00004CB2              L2845:                           ; case label 
          EDIT.c  3296    
          EDIT.c  3297                //Default root (sdc)
          EDIT.c  3298                case NODEDROOSDC:
          EDIT.c  3299                  if(strcmp(sConfig->sDefRoot,"crd0")!=0)
    00004CB2 E040                   MOV         #64,R0
    00004CB4 D348                   MOV.L       L5219+4,R3 ; __slow_strcmp1
    00004CB6 D54B                   MOV.L       L5219+16,R5; L815
    00004CB8 04FE                   MOV.L       @(R0,R15),R4
    00004CBA 430B                   JSR         @R3
    00004CBC 741C                   ADD         #28,R4
    00004CBE 2008                   TST         R0,R0
    00004CC0 8B01                   BF          L5222
    00004CC2 A2E4                   BRA         L4607
    00004CC4 0009                   NOP
    00004CC6              L5222:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  237


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3300                  {
          EDIT.c  3301                    strcpy(sConfig->sDefRoot,"crd0");
    00004CC6 E040                   MOV         #64,R0
    00004CC8 D146                   MOV.L       L5219+16,R1; L815
    00004CCA 00FE                   MOV.L       @(R0,R15),R0
    00004CCC D343                   MOV.L       L5219+8,R3 ; __slow_strcpy
    00004CCE 430B                   JSR         @R3
    00004CD0 701C                   ADD         #28,R0
          EDIT.c  3302                    iRefresh=1;
    00004CD2 E201                   MOV         #1,R2
          EDIT.c  3303                  }
          EDIT.c  3304                  break;
    00004CD4 A2DB                   BRA         L4607
    00004CD6 1F2D                   MOV.L       R2,@(52,R15)
    00004CD8              L2846:                           ; case label 
          EDIT.c  3305    
          EDIT.c  3306                //Display bytes free in explorer (no)
          EDIT.c  3307                case NODEDFRENO:
          EDIT.c  3308                  if(sConfig->iDispFree!=0)
    00004CD8 E040                   MOV         #64,R0
    00004CDA 01FE                   MOV.L       @(R0,R15),R1
    00004CDC 5316                   MOV.L       @(24,R1),R3
    00004CDE 2338                   TST         R3,R3
    00004CE0 8B01                   BF          L5223
    00004CE2 A2D4                   BRA         L4607
    00004CE4 0009                   NOP
    00004CE6              L5223:                            
          EDIT.c  3309                  {
          EDIT.c  3310                    sConfig->iDispFree=0;
    00004CE6 E040                   MOV         #64,R0
    00004CE8 03FE                   MOV.L       @(R0,R15),R3
    00004CEA E200                   MOV         #0,R2
    00004CEC 1326                   MOV.L       R2,@(24,R3)
          EDIT.c  3311                    iRefresh=1;
    00004CEE E301                   MOV         #1,R3
          EDIT.c  3312                  }
          EDIT.c  3313                  break;
    00004CF0 A2CD                   BRA         L4607
    00004CF2 1F3D                   MOV.L       R3,@(52,R15)
    00004CF4              L2847:                           ; case label 
          EDIT.c  3314    
          EDIT.c  3315                //Font 3x5
          EDIT.c  3316                case NODEFONT3X5:
          EDIT.c  3317                  if(sConfig->iFont!=FONTS)
    00004CF4 E040                   MOV         #64,R0
    00004CF6 01FE                   MOV.L       @(R0,R15),R1
    00004CF8 5319                   MOV.L       @(36,R1),R3
    00004CFA 2338                   TST         R3,R3
    00004CFC 8B01                   BF          L5224
    00004CFE A2C6                   BRA         L4607
    00004D00 0009                   NOP
    00004D02              L5224:                            
          EDIT.c  3318                  {
          EDIT.c  3319                    sConfig->iFont=FONTS;
    00004D02 E040                   MOV         #64,R0
    00004D04 03FE                   MOV.L       @(R0,R15),R3
    00004D06 E200                   MOV         #0,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  238


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004D08 1329                   MOV.L       R2,@(36,R3)
          EDIT.c  3320                    iRefresh=1;
    00004D0A E301                   MOV         #1,R3
          EDIT.c  3321                  }
          EDIT.c  3322                  break;
    00004D0C A2BF                   BRA         L4607
    00004D0E 1F3D                   MOV.L       R3,@(52,R15)
    00004D10              L2848:                           ; case label 
          EDIT.c  3323                
          EDIT.c  3324                //Font 3x5
          EDIT.c  3325                case NODEFONT3X6:
          EDIT.c  3326                  if(sConfig->iFont!=FONTT)
    00004D10 E040                   MOV         #64,R0
    00004D12 00FE                   MOV.L       @(R0,R15),R0
    00004D14 5009                   MOV.L       @(36,R0),R0
    00004D16 8801                   CMP/EQ      #1,R0
    00004D18 8B01                   BF          L5225
    00004D1A A2B8                   BRA         L4607
    00004D1C 0009                   NOP
    00004D1E              L5225:                            
          EDIT.c  3327                  {
          EDIT.c  3328                    sConfig->iFont=FONTT;
    00004D1E E040                   MOV         #64,R0
    00004D20 02FE                   MOV.L       @(R0,R15),R2
    00004D22 E301                   MOV         #1,R3
    00004D24 1239                   MOV.L       R3,@(36,R2)
          EDIT.c  3329                    iRefresh=1;
    00004D26 6233                   MOV         R3,R2
          EDIT.c  3330                  }
          EDIT.c  3331                  break;
    00004D28 A2B1                   BRA         L4607
    00004D2A 1F2D                   MOV.L       R2,@(52,R15)
    00004D2C              L2849:                           ; case label 
          EDIT.c  3332                
          EDIT.c  3333                //Font 3x5
          EDIT.c  3334                case NODEFONT4X6:
          EDIT.c  3335                  if(sConfig->iFont!=FONTM)
    00004D2C E040                   MOV         #64,R0
    00004D2E 00FE                   MOV.L       @(R0,R15),R0
    00004D30 5009                   MOV.L       @(36,R0),R0
    00004D32 8802                   CMP/EQ      #2,R0
    00004D34 8B01                   BF          L5226
    00004D36 A2AA                   BRA         L4607
    00004D38 0009                   NOP
    00004D3A              L5226:                            
          EDIT.c  3336                  {
          EDIT.c  3337                    sConfig->iFont=FONTM;
    00004D3A E040                   MOV         #64,R0
    00004D3C 02FE                   MOV.L       @(R0,R15),R2
    00004D3E E302                   MOV         #2,R3
    00004D40 1239                   MOV.L       R3,@(36,R2)
          EDIT.c  3338                    iRefresh=1;
    00004D42 E201                   MOV         #1,R2
          EDIT.c  3339                  }
          EDIT.c  3340                  break;
    00004D44 A2A3                   BRA         L4607
    00004D46 1F2D                   MOV.L       R2,@(52,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  239


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004D48              L2850:                           ; case label 
          EDIT.c  3341                
          EDIT.c  3342                //Font 3x5
          EDIT.c  3343                case NODEFONT5X7:
          EDIT.c  3344                  if(sConfig->iFont!=FONTL)
    00004D48 E040                   MOV         #64,R0
    00004D4A 00FE                   MOV.L       @(R0,R15),R0
    00004D4C 5009                   MOV.L       @(36,R0),R0
    00004D4E 8803                   CMP/EQ      #3,R0
    00004D50 8B01                   BF          L5227
    00004D52 A29C                   BRA         L4607
    00004D54 0009                   NOP
    00004D56              L5227:                            
          EDIT.c  3345                  {
          EDIT.c  3346                    sConfig->iFont=FONTL;
    00004D56 E040                   MOV         #64,R0
    00004D58 02FE                   MOV.L       @(R0,R15),R2
    00004D5A E303                   MOV         #3,R3
    00004D5C 1239                   MOV.L       R3,@(36,R2)
          EDIT.c  3347                    iRefresh=1;
    00004D5E E201                   MOV         #1,R2
          EDIT.c  3348                  }
          EDIT.c  3349                  break;
    00004D60 A295                   BRA         L4607
    00004D62 1F2D                   MOV.L       R2,@(52,R15)
    00004D64              L2851:                           ; case label 
          EDIT.c  3350                
          EDIT.c  3351                //New line mode windows
          EDIT.c  3352                case NODENLMOWIN:
          EDIT.c  3353                  if(sConfig->iNLMode!=NEWLMODECRLF)
    00004D64 E040                   MOV         #64,R0
    00004D66 00FE                   MOV.L       @(R0,R15),R0
    00004D68 5004                   MOV.L       @(16,R0),R0
    00004D6A 8801                   CMP/EQ      #1,R0
    00004D6C 8B01                   BF          L5228
    00004D6E A28E                   BRA         L4607
    00004D70 0009                   NOP
    00004D72              L5228:                            
          EDIT.c  3354                  {
          EDIT.c  3355                    sConfig->iNLMode=NEWLMODECRLF;
    00004D72 E040                   MOV         #64,R0
    00004D74 02FE                   MOV.L       @(R0,R15),R2
    00004D76 E301                   MOV         #1,R3
    00004D78 1234                   MOV.L       R3,@(16,R2)
          EDIT.c  3356                    iRefresh=1;
    00004D7A 6233                   MOV         R3,R2
          EDIT.c  3357                  }
          EDIT.c  3358                  break;
    00004D7C A287                   BRA         L4607
    00004D7E 1F2D                   MOV.L       R2,@(52,R15)
    00004D80              L2852:                           ; case label 
          EDIT.c  3359                
          EDIT.c  3360                //New line mode unix
          EDIT.c  3361                case NODENLMOUNIX:
          EDIT.c  3362                  if(sConfig->iNLMode!=NEWLMODELF)
    00004D80 E040                   MOV         #64,R0
    00004D82 01FE                   MOV.L       @(R0,R15),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  240


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004D84 5314                   MOV.L       @(16,R1),R3
    00004D86 2338                   TST         R3,R3
    00004D88 8B01                   BF          L5229
    00004D8A A280                   BRA         L4607
    00004D8C 0009                   NOP
    00004D8E              L5229:                            
          EDIT.c  3363                  {
          EDIT.c  3364                    sConfig->iNLMode=NEWLMODELF;
    00004D8E E040                   MOV         #64,R0
    00004D90 03FE                   MOV.L       @(R0,R15),R3
    00004D92 E200                   MOV         #0,R2
    00004D94 1324                   MOV.L       R2,@(16,R3)
          EDIT.c  3365                    iRefresh=1;
    00004D96 E301                   MOV         #1,R3
          EDIT.c  3366                  }
          EDIT.c  3367                  break;
    00004D98 A279                   BRA         L4607
    00004D9A 1F3D                   MOV.L       R3,@(52,R15)
    00004D9C              L2853:                           ; case label 
          EDIT.c  3368                
          EDIT.c  3369                //Auto open file enable
          EDIT.c  3370                case NODEAOPEYES:
          EDIT.c  3371                  if(sConfig->iAutoOpen!=1)
    00004D9C E040                   MOV         #64,R0
    00004D9E 00FE                   MOV.L       @(R0,R15),R0
    00004DA0 500B                   MOV.L       @(44,R0),R0
    00004DA2 8801                   CMP/EQ      #1,R0
    00004DA4 8B01                   BF          L5230
    00004DA6 A272                   BRA         L4607
    00004DA8 0009                   NOP
    00004DAA              L5230:                            
          EDIT.c  3372                  {
          EDIT.c  3373                    sConfig->iAutoOpen=1;
    00004DAA E040                   MOV         #64,R0
    00004DAC 02FE                   MOV.L       @(R0,R15),R2
    00004DAE E301                   MOV         #1,R3
    00004DB0 123B                   MOV.L       R3,@(44,R2)
          EDIT.c  3374                    iRefresh=1;
    00004DB2 6233                   MOV         R3,R2
          EDIT.c  3375                  }
          EDIT.c  3376                  break;
    00004DB4 A26B                   BRA         L4607
    00004DB6 1F2D                   MOV.L       R2,@(52,R15)
    00004DB8              L2854:                           ; case label 
          EDIT.c  3377                
          EDIT.c  3378                //Auto open file disable
          EDIT.c  3379                case NODEAOPENO:
          EDIT.c  3380                  if(sConfig->iAutoOpen!=0)
    00004DB8 E040                   MOV         #64,R0
    00004DBA 01FE                   MOV.L       @(R0,R15),R1
    00004DBC 531B                   MOV.L       @(44,R1),R3
    00004DBE 2338                   TST         R3,R3
    00004DC0 8B01                   BF          L5231
    00004DC2 A264                   BRA         L4607
    00004DC4 0009                   NOP
    00004DC6              L5231:                            
          EDIT.c  3381                  {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  241


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3382                    sConfig->iAutoOpen=0;
    00004DC6 E040                   MOV         #64,R0
    00004DC8 03FE                   MOV.L       @(R0,R15),R3
    00004DCA E200                   MOV         #0,R2
    00004DCC 132B                   MOV.L       R2,@(44,R3)
          EDIT.c  3383                    iRefresh=1;
    00004DCE E301                   MOV         #1,R3
          EDIT.c  3384                  }
          EDIT.c  3385                  break;
    00004DD0 A25D                   BRA         L4607
    00004DD2 1F3D                   MOV.L       R3,@(52,R15)
    00004DD4              L5219:                            
    00004DD4 <00000000>             .DATA.L     L620
    00004DD8 <00000000>             .DATA.L     __slow_strcmp1
    00004DDC <00000000>             .DATA.L     __slow_strcpy
    00004DE0 <00000000>             .DATA.L     L813
    00004DE4 <00000000>             .DATA.L     L815
    00004DE8              L2855:                           ; case label 
          EDIT.c  3386                
          EDIT.c  3387                //Auto open file set
          EDIT.c  3388                case NODEACFGSET:
          EDIT.c  3389                  sprintf(sRoot,sConfig->sAutoRoot);
    00004DE8 D252                   MOV.L       L5232+8,R2 ; _sprintf
    00004DEA E040                   MOV         #64,R0
    00004DEC 01FE                   MOV.L       @(R0,R15),R1
    00004DEE E330                   MOV         #48,R3
    00004DF0 331C                   ADD         R1,R3
    00004DF2 2F36                   MOV.L       R3,@-R15
    00004DF4 64F3                   MOV         R15,R4
    00004DF6 420B                   JSR         @R2
    00004DF8 7424                   ADD         #36,R4
          EDIT.c  3390                  sprintf(sFolder,sConfig->sAutoFolder);
    00004DFA E044                   MOV         #68,R0
    00004DFC 03FE                   MOV.L       @(R0,R15),R3
    00004DFE E242                   MOV         #66,R2
    00004E00 323C                   ADD         R3,R2
    00004E02 2F26                   MOV.L       R2,@-R15
    00004E04 D34B                   MOV.L       L5232+8,R3 ; _sprintf
    00004E06 64F3                   MOV         R15,R4
    00004E08 430B                   JSR         @R3
    00004E0A 7418                   ADD         #24,R4
          EDIT.c  3391                  if(Explorer(EXPLORERAUTO,sRoot,sFolder,sFile,sConfig,&iNew))
    00004E0C 62F3                   MOV         R15,R2
    00004E0E 7234                   ADD         #52,R2
    00004E10 2F26                   MOV.L       R2,@-R15
    00004E12 E04C                   MOV         #76,R0
    00004E14 03FE                   MOV.L       @(R0,R15),R3
    00004E16 2F36                   MOV.L       R3,@-R15
    00004E18 D347                   MOV.L       L5232+12,R3; _Explorer
    00004E1A 67F3                   MOV         R15,R7
    00004E1C 7710                   ADD         #16,R7
    00004E1E 66F3                   MOV         R15,R6
    00004E20 7620                   ADD         #32,R6
    00004E22 65F3                   MOV         R15,R5
    00004E24 7530                   ADD         #48,R5
    00004E26 430B                   JSR         @R3
    00004E28 E402                   MOV         #2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  242


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004E2A 2008                   TST         R0,R0
    00004E2C 8D19                   BT/S        L4631
    00004E2E 7F10                   ADD         #16,R15
          EDIT.c  3392                  {
          EDIT.c  3393                    sprintf(sConfig->sAutoRoot,sRoot);
    00004E30 63F3                   MOV         R15,R3
    00004E32 7320                   ADD         #32,R3
    00004E34 2F36                   MOV.L       R3,@-R15
    00004E36 E044                   MOV         #68,R0
    00004E38 D33E                   MOV.L       L5232+8,R3 ; _sprintf
    00004E3A 04FE                   MOV.L       @(R0,R15),R4
    00004E3C 430B                   JSR         @R3
    00004E3E 7430                   ADD         #48,R4
          EDIT.c  3394                    sprintf(sConfig->sAutoFile,sFile);
    00004E40 D33C                   MOV.L       L5232+8,R3 ; _sprintf
    00004E42 62F3                   MOV         R15,R2
    00004E44 7204                   ADD         #4,R2
    00004E46 E048                   MOV         #72,R0
    00004E48 2F26                   MOV.L       R2,@-R15
    00004E4A 04FE                   MOV.L       @(R0,R15),R4
    00004E4C 430B                   JSR         @R3
    00004E4E 7435                   ADD         #53,R4
          EDIT.c  3395                    sprintf(sConfig->sAutoFolder,sFolder);
    00004E50 D338                   MOV.L       L5232+8,R3 ; _sprintf
    00004E52 62F3                   MOV         R15,R2
    00004E54 7218                   ADD         #24,R2
    00004E56 E04C                   MOV         #76,R0
    00004E58 2F26                   MOV.L       R2,@-R15
    00004E5A 04FE                   MOV.L       @(R0,R15),R4
    00004E5C 430B                   JSR         @R3
    00004E5E 7442                   ADD         #66,R4
    00004E60 7F0C                   ADD         #12,R15
    00004E62              L4631:                            
          EDIT.c  3396                  }
          EDIT.c  3397                  KeyboardStatusHide(1);
    00004E62 D236                   MOV.L       L5232+16,R2; _KeyboardStatusHide
    00004E64 420B                   JSR         @R2
    00004E66 E401                   MOV         #1,R4
          EDIT.c  3398                  iRefresh=1;
          EDIT.c  3399                  break;
    00004E68 A1F7                   BRA         L4971
    00004E6A 0009                   NOP
    00004E6C              L2856:                           ; case label 
          EDIT.c  3400                
          EDIT.c  3401                //Auto open file clear
          EDIT.c  3402                case NODEACFGCLR:
          EDIT.c  3403                  if(strlen(sConfig->sAutoRoot)!=0 
          EDIT.c  3404                  || strlen(sConfig->sAutoFile)!=0
          EDIT.c  3405                  || strlen(sConfig->sAutoFolder)!=0)
    00004E6C D334                   MOV.L       L5232+20,R3; _strlen
    00004E6E E040                   MOV         #64,R0
    00004E70 04FE                   MOV.L       @(R0,R15),R4
    00004E72 430B                   JSR         @R3
    00004E74 7430                   ADD         #48,R4
    00004E76 2008                   TST         R0,R0
    00004E78 8B0F                   BF          L4633
    00004E7A E040                   MOV         #64,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  243


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004E7C D330                   MOV.L       L5232+20,R3; _strlen
    00004E7E 04FE                   MOV.L       @(R0,R15),R4
    00004E80 430B                   JSR         @R3
    00004E82 7435                   ADD         #53,R4
    00004E84 2008                   TST         R0,R0
    00004E86 8B08                   BF          L4633
    00004E88 D32D                   MOV.L       L5232+20,R3; _strlen
    00004E8A E040                   MOV         #64,R0
    00004E8C 04FE                   MOV.L       @(R0,R15),R4
    00004E8E 430B                   JSR         @R3
    00004E90 7442                   ADD         #66,R4
    00004E92 2008                   TST         R0,R0
    00004E94 8B01                   BF          L5233
    00004E96 A1FA                   BRA         L4607
    00004E98 0009                   NOP
    00004E9A              L5233:                            
    00004E9A              L4633:                            
          EDIT.c  3406                  {
          EDIT.c  3407                    sprintf(sConfig->sAutoRoot,"fls0");
    00004E9A E044                   MOV         #68,R0
    00004E9C D225                   MOV.L       L5232+8,R2 ; _sprintf
    00004E9E D329                   MOV.L       L5232+24,R3; L813
    00004EA0 2F36                   MOV.L       R3,@-R15
    00004EA2 04FE                   MOV.L       @(R0,R15),R4
    00004EA4 420B                   JSR         @R2
    00004EA6 7430                   ADD         #48,R4
          EDIT.c  3408                    sprintf(sConfig->sAutoFile,"");
    00004EA8 D327                   MOV.L       L5232+28,R3; L500
    00004EAA E048                   MOV         #72,R0
    00004EAC D221                   MOV.L       L5232+8,R2 ; _sprintf
    00004EAE 2F36                   MOV.L       R3,@-R15
    00004EB0 04FE                   MOV.L       @(R0,R15),R4
    00004EB2 420B                   JSR         @R2
    00004EB4 7435                   ADD         #53,R4
          EDIT.c  3409                    sprintf(sConfig->sAutoFolder,"");
    00004EB6 E04C                   MOV         #76,R0
    00004EB8 D21E                   MOV.L       L5232+8,R2 ; _sprintf
    00004EBA D323                   MOV.L       L5232+28,R3; L500
    00004EBC 2F36                   MOV.L       R3,@-R15
    00004EBE 04FE                   MOV.L       @(R0,R15),R4
    00004EC0 420B                   JSR         @R2
    00004EC2 7442                   ADD         #66,R4
    00004EC4 7F0C                   ADD         #12,R15
          EDIT.c  3410                    iRefresh=1;
    00004EC6 E301                   MOV         #1,R3
          EDIT.c  3411                  }
          EDIT.c  3412                  break;
    00004EC8 A1E1                   BRA         L4607
    00004ECA 1F3D                   MOV.L       R3,@(52,R15)
    00004ECC              L2857:                           ; case label 
          EDIT.c  3413                
          EDIT.c  3414                //Text buffer 4Kb
          EDIT.c  3415                case NODETXTB04K:
          EDIT.c  3416                  if(sConfig->iTextBuffer!=4096)
    00004ECC 932E                   MOV.W       L5232,R3   ; H'1000
    00004ECE E040                   MOV         #64,R0
    00004ED0 01FE                   MOV.L       @(R0,R15),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  244


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004ED2 E050                   MOV         #80,R0
    00004ED4 021E                   MOV.L       @(R0,R1),R2
    00004ED6 3230                   CMP/EQ      R3,R2
    00004ED8 8B01                   BF          L5234
    00004EDA A1D8                   BRA         L4607
    00004EDC 0009                   NOP
    00004EDE              L5234:                            
          EDIT.c  3417                  {
          EDIT.c  3418                    sConfig->iTextBuffer=4096;
    00004EDE E040                   MOV         #64,R0
    00004EE0 02FE                   MOV.L       @(R0,R15),R2
    00004EE2 E050                   MOV         #80,R0
    00004EE4 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3419                    iRefresh=1;
    00004EE6 E201                   MOV         #1,R2
          EDIT.c  3420                  }
          EDIT.c  3421                  break;
    00004EE8 A1D1                   BRA         L4607
    00004EEA 1F2D                   MOV.L       R2,@(52,R15)
    00004EEC              L2858:                           ; case label 
          EDIT.c  3422                
          EDIT.c  3423                //Text buffer 8Kb
          EDIT.c  3424                case NODETXTB08K:
          EDIT.c  3425                  if(sConfig->iTextBuffer!=8192)
    00004EEC 931F                   MOV.W       L5232+2,R3 ; H'2000
    00004EEE E040                   MOV         #64,R0
    00004EF0 01FE                   MOV.L       @(R0,R15),R1
    00004EF2 E050                   MOV         #80,R0
    00004EF4 021E                   MOV.L       @(R0,R1),R2
    00004EF6 3230                   CMP/EQ      R3,R2
    00004EF8 8B01                   BF          L5235
    00004EFA A1C8                   BRA         L4607
    00004EFC 0009                   NOP
    00004EFE              L5235:                            
          EDIT.c  3426                  {
          EDIT.c  3427                    sConfig->iTextBuffer=8192;
    00004EFE E040                   MOV         #64,R0
    00004F00 02FE                   MOV.L       @(R0,R15),R2
    00004F02 E050                   MOV         #80,R0
    00004F04 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3428                    iRefresh=1;
    00004F06 E201                   MOV         #1,R2
          EDIT.c  3429                  }
          EDIT.c  3430                  break;
    00004F08 A1C1                   BRA         L4607
    00004F0A 1F2D                   MOV.L       R2,@(52,R15)
    00004F0C              L2859:                           ; case label 
          EDIT.c  3431                
          EDIT.c  3432                //Text buffer 16Kb
          EDIT.c  3433                case NODETXTB16K:
          EDIT.c  3434                  if(sConfig->iTextBuffer!=16384)
    00004F0C 9310                   MOV.W       L5232+4,R3 ; H'4000
    00004F0E E040                   MOV         #64,R0
    00004F10 01FE                   MOV.L       @(R0,R15),R1
    00004F12 E050                   MOV         #80,R0
    00004F14 021E                   MOV.L       @(R0,R1),R2
    00004F16 3230                   CMP/EQ      R3,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  245


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004F18 8B01                   BF          L5236
    00004F1A A1B8                   BRA         L4607
    00004F1C 0009                   NOP
    00004F1E              L5236:                            
          EDIT.c  3435                  {
          EDIT.c  3436                    sConfig->iTextBuffer=16384;
    00004F1E E040                   MOV         #64,R0
    00004F20 02FE                   MOV.L       @(R0,R15),R2
    00004F22 E050                   MOV         #80,R0
    00004F24 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3437                    iRefresh=1;
    00004F26 E201                   MOV         #1,R2
          EDIT.c  3438                  }
          EDIT.c  3439                  break;
    00004F28 A1B1                   BRA         L4607
    00004F2A 1F2D                   MOV.L       R2,@(52,R15)
    00004F2C              L5232:                            
    00004F2C 1000                   .DATA.W     H'1000
    00004F2E 2000                   .DATA.W     H'2000
    00004F30 4000                   .DATA.W     H'4000
    00004F32 0000                   .DATA.W     0
    00004F34 <00000000>             .DATA.L     _sprintf
    00004F38 <00000000>             .DATA.L     _Explorer
    00004F3C <00000000>             .DATA.L     _KeyboardStatusHide
    00004F40 <00000000>             .DATA.L     _strlen
    00004F44 <00000000>             .DATA.L     L813
    00004F48 <00000000>             .DATA.L     L500
    00004F4C              L2860:                           ; case label 
          EDIT.c  3440                
          EDIT.c  3441                //Text buffer 24Kb
          EDIT.c  3442                case NODETXTB24K:
          EDIT.c  3443                  if(sConfig->iTextBuffer!=24576)
    00004F4C 939E                   MOV.W       L5237,R3   ; H'6000
    00004F4E E040                   MOV         #64,R0
    00004F50 01FE                   MOV.L       @(R0,R15),R1
    00004F52 E050                   MOV         #80,R0
    00004F54 021E                   MOV.L       @(R0,R1),R2
    00004F56 3230                   CMP/EQ      R3,R2
    00004F58 8B01                   BF          L5238
    00004F5A A198                   BRA         L4607
    00004F5C 0009                   NOP
    00004F5E              L5238:                            
          EDIT.c  3444                  {
          EDIT.c  3445                    sConfig->iTextBuffer=24576;
    00004F5E E040                   MOV         #64,R0
    00004F60 02FE                   MOV.L       @(R0,R15),R2
    00004F62 E050                   MOV         #80,R0
    00004F64 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3446                    iRefresh=1;
    00004F66 E201                   MOV         #1,R2
          EDIT.c  3447                  }
          EDIT.c  3448                  break;
    00004F68 A191                   BRA         L4607
    00004F6A 1F2D                   MOV.L       R2,@(52,R15)
    00004F6C              L2861:                           ; case label 
          EDIT.c  3449                
          EDIT.c  3450                //Text buffer 32Kb




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  246


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3451                case NODETXTB32K:
          EDIT.c  3452                  if(sConfig->iTextBuffer!=32768)
    00004F6C D34B                   MOV.L       L5237+16,R3; H'00008000
    00004F6E E040                   MOV         #64,R0
    00004F70 01FE                   MOV.L       @(R0,R15),R1
    00004F72 E050                   MOV         #80,R0
    00004F74 021E                   MOV.L       @(R0,R1),R2
    00004F76 3230                   CMP/EQ      R3,R2
    00004F78 8B01                   BF          L5239
    00004F7A A188                   BRA         L4607
    00004F7C 0009                   NOP
    00004F7E              L5239:                            
          EDIT.c  3453                  {
          EDIT.c  3454                    sConfig->iTextBuffer=32768;
    00004F7E E040                   MOV         #64,R0
    00004F80 02FE                   MOV.L       @(R0,R15),R2
    00004F82 E050                   MOV         #80,R0
    00004F84 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3455                    iRefresh=1;
    00004F86 E201                   MOV         #1,R2
          EDIT.c  3456                  }
          EDIT.c  3457                  break;
    00004F88 A181                   BRA         L4607
    00004F8A 1F2D                   MOV.L       R2,@(52,R15)
    00004F8C              L2862:                           ; case label 
          EDIT.c  3458                
          EDIT.c  3459                //Text buffer 40Kb
          EDIT.c  3460                case NODETXTB40K:
          EDIT.c  3461                  if(sConfig->iTextBuffer!=40960)
    00004F8C D344                   MOV.L       L5237+20,R3; H'0000A000
    00004F8E E040                   MOV         #64,R0
    00004F90 01FE                   MOV.L       @(R0,R15),R1
    00004F92 E050                   MOV         #80,R0
    00004F94 021E                   MOV.L       @(R0,R1),R2
    00004F96 3230                   CMP/EQ      R3,R2
    00004F98 8B01                   BF          L5240
    00004F9A A178                   BRA         L4607
    00004F9C 0009                   NOP
    00004F9E              L5240:                            
          EDIT.c  3462                  {
          EDIT.c  3463                    sConfig->iTextBuffer=40960;
    00004F9E E040                   MOV         #64,R0
    00004FA0 02FE                   MOV.L       @(R0,R15),R2
    00004FA2 E050                   MOV         #80,R0
    00004FA4 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3464                    iRefresh=1;
    00004FA6 E201                   MOV         #1,R2
          EDIT.c  3465                  }
          EDIT.c  3466                  break;
    00004FA8 A171                   BRA         L4607
    00004FAA 1F2D                   MOV.L       R2,@(52,R15)
    00004FAC              L2863:                           ; case label 
          EDIT.c  3467                
          EDIT.c  3468                //Clip buffer 1Kb
          EDIT.c  3469                case NODECLIB01K:
          EDIT.c  3470                  if(sConfig->iClipBuffer!=1024)
    00004FAC 936F                   MOV.W       L5237+2,R3 ; H'0400




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  247


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004FAE E040                   MOV         #64,R0
    00004FB0 01FE                   MOV.L       @(R0,R15),R1
    00004FB2 E054                   MOV         #84,R0
    00004FB4 021E                   MOV.L       @(R0,R1),R2
    00004FB6 3230                   CMP/EQ      R3,R2
    00004FB8 8B01                   BF          L5241
    00004FBA A168                   BRA         L4607
    00004FBC 0009                   NOP
    00004FBE              L5241:                            
          EDIT.c  3471                  {
          EDIT.c  3472                    sConfig->iClipBuffer=1024;
    00004FBE E040                   MOV         #64,R0
    00004FC0 02FE                   MOV.L       @(R0,R15),R2
    00004FC2 E054                   MOV         #84,R0
    00004FC4 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3473                    iRefresh=1;
    00004FC6 E201                   MOV         #1,R2
          EDIT.c  3474                  }
          EDIT.c  3475                  break;
    00004FC8 A161                   BRA         L4607
    00004FCA 1F2D                   MOV.L       R2,@(52,R15)
    00004FCC              L2864:                           ; case label 
          EDIT.c  3476                
          EDIT.c  3477                //Clip buffer 2Kb
          EDIT.c  3478                case NODECLIB02K:
          EDIT.c  3479                  if(sConfig->iClipBuffer!=2048)
    00004FCC 9360                   MOV.W       L5237+4,R3 ; H'0800
    00004FCE E040                   MOV         #64,R0
    00004FD0 01FE                   MOV.L       @(R0,R15),R1
    00004FD2 E054                   MOV         #84,R0
    00004FD4 021E                   MOV.L       @(R0,R1),R2
    00004FD6 3230                   CMP/EQ      R3,R2
    00004FD8 8B01                   BF          L5242
    00004FDA A158                   BRA         L4607
    00004FDC 0009                   NOP
    00004FDE              L5242:                            
          EDIT.c  3480                  {
          EDIT.c  3481                    sConfig->iClipBuffer=2048;
    00004FDE E040                   MOV         #64,R0
    00004FE0 02FE                   MOV.L       @(R0,R15),R2
    00004FE2 E054                   MOV         #84,R0
    00004FE4 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3482                    iRefresh=1;
    00004FE6 E201                   MOV         #1,R2
          EDIT.c  3483                  }
          EDIT.c  3484                  break;
    00004FE8 A151                   BRA         L4607
    00004FEA 1F2D                   MOV.L       R2,@(52,R15)
    00004FEC              L2865:                           ; case label 
          EDIT.c  3485                
          EDIT.c  3486                //Clip buffer 4Kb
          EDIT.c  3487                case NODECLIB04K:
          EDIT.c  3488                  if(sConfig->iClipBuffer!=4096)
    00004FEC 9351                   MOV.W       L5237+6,R3 ; H'1000
    00004FEE E040                   MOV         #64,R0
    00004FF0 01FE                   MOV.L       @(R0,R15),R1
    00004FF2 E054                   MOV         #84,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  248


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00004FF4 021E                   MOV.L       @(R0,R1),R2
    00004FF6 3230                   CMP/EQ      R3,R2
    00004FF8 8B01                   BF          L5243
    00004FFA A148                   BRA         L4607
    00004FFC 0009                   NOP
    00004FFE              L5243:                            
          EDIT.c  3489                  {
          EDIT.c  3490                    sConfig->iClipBuffer=4096;
    00004FFE E040                   MOV         #64,R0
    00005000 02FE                   MOV.L       @(R0,R15),R2
    00005002 E054                   MOV         #84,R0
    00005004 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3491                    iRefresh=1;
    00005006 E201                   MOV         #1,R2
          EDIT.c  3492                  }
          EDIT.c  3493                  break;
    00005008 A141                   BRA         L4607
    0000500A 1F2D                   MOV.L       R2,@(52,R15)
    0000500C              L2866:                           ; case label 
          EDIT.c  3494                
          EDIT.c  3495                //Clip buffer 8Kb
          EDIT.c  3496                case NODECLIB08K:
          EDIT.c  3497                  if(sConfig->iClipBuffer!=8192)
    0000500C 9342                   MOV.W       L5237+8,R3 ; H'2000
    0000500E E040                   MOV         #64,R0
    00005010 01FE                   MOV.L       @(R0,R15),R1
    00005012 E054                   MOV         #84,R0
    00005014 021E                   MOV.L       @(R0,R1),R2
    00005016 3230                   CMP/EQ      R3,R2
    00005018 8B01                   BF          L5244
    0000501A A138                   BRA         L4607
    0000501C 0009                   NOP
    0000501E              L5244:                            
          EDIT.c  3498                  {
          EDIT.c  3499                    sConfig->iClipBuffer=8192;
    0000501E E040                   MOV         #64,R0
    00005020 02FE                   MOV.L       @(R0,R15),R2
    00005022 E054                   MOV         #84,R0
    00005024 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3500                    iRefresh=1;
    00005026 E201                   MOV         #1,R2
          EDIT.c  3501                  }
          EDIT.c  3502                  break;
    00005028 A131                   BRA         L4607
    0000502A 1F2D                   MOV.L       R2,@(52,R15)
    0000502C              L2867:                           ; case label 
          EDIT.c  3503                
          EDIT.c  3504                //Clip buffer 12Kb
          EDIT.c  3505                case NODECLIB12K:
          EDIT.c  3506                  if(sConfig->iClipBuffer!=12288)
    0000502C 9333                   MOV.W       L5237+10,R3; H'3000
    0000502E E040                   MOV         #64,R0
    00005030 01FE                   MOV.L       @(R0,R15),R1
    00005032 E054                   MOV         #84,R0
    00005034 021E                   MOV.L       @(R0,R1),R2
    00005036 3230                   CMP/EQ      R3,R2
    00005038 8B01                   BF          L5245




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  249


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000503A A128                   BRA         L4607
    0000503C 0009                   NOP
    0000503E              L5245:                            
          EDIT.c  3507                  {
          EDIT.c  3508                    sConfig->iClipBuffer=12288;
    0000503E E040                   MOV         #64,R0
    00005040 02FE                   MOV.L       @(R0,R15),R2
    00005042 E054                   MOV         #84,R0
    00005044 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3509                    iRefresh=1;
    00005046 E201                   MOV         #1,R2
          EDIT.c  3510                  }
          EDIT.c  3511                  break;
    00005048 A121                   BRA         L4607
    0000504A 1F2D                   MOV.L       R2,@(52,R15)
    0000504C              L2868:                           ; case label 
          EDIT.c  3512                
          EDIT.c  3513                //Clip buffer 16Kb
          EDIT.c  3514                case NODECLIB16K:
          EDIT.c  3515                  if(sConfig->iClipBuffer!=16384)
    0000504C 9324                   MOV.W       L5237+12,R3; H'4000
    0000504E E040                   MOV         #64,R0
    00005050 01FE                   MOV.L       @(R0,R15),R1
    00005052 E054                   MOV         #84,R0
    00005054 021E                   MOV.L       @(R0,R1),R2
    00005056 3230                   CMP/EQ      R3,R2
    00005058 8B01                   BF          L5246
    0000505A A118                   BRA         L4607
    0000505C 0009                   NOP
    0000505E              L5246:                            
          EDIT.c  3516                  {
          EDIT.c  3517                    sConfig->iClipBuffer=16384;
    0000505E E040                   MOV         #64,R0
    00005060 02FE                   MOV.L       @(R0,R15),R2
    00005062 E054                   MOV         #84,R0
    00005064 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3518                    iRefresh=1;
    00005066 E201                   MOV         #1,R2
          EDIT.c  3519                  }
          EDIT.c  3520                  break;
    00005068 A111                   BRA         L4607
    0000506A 1F2D                   MOV.L       R2,@(52,R15)
    0000506C              L2869:                           ; case label 
          EDIT.c  3521                
          EDIT.c  3522                //Number of files 000
          EDIT.c  3523                case NODENFIL000:
          EDIT.c  3524                  if(sConfig->iMaxFiles!=32)
    0000506C E040                   MOV         #64,R0
    0000506E E158                   MOV         #88,R1
    00005070 00FE                   MOV.L       @(R0,R15),R0
    00005072 001E                   MOV.L       @(R0,R1),R0
    00005074 8820                   CMP/EQ      #32,R0
    00005076 8B01                   BF          L5247
    00005078 A109                   BRA         L4607
    0000507A 0009                   NOP
    0000507C              L5247:                            
          EDIT.c  3525                  {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  250


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3526                    sConfig->iMaxFiles=32;
    0000507C E040                   MOV         #64,R0
    0000507E E320                   MOV         #32,R3
    00005080 02FE                   MOV.L       @(R0,R15),R2
    00005082 E058                   MOV         #88,R0
    00005084 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3527                    iRefresh=1;
    00005086 E201                   MOV         #1,R2
          EDIT.c  3528                  }
          EDIT.c  3529                  break;
    00005088 A101                   BRA         L4607
    0000508A 1F2D                   MOV.L       R2,@(52,R15)
    0000508C              L5237:                            
    0000508C 6000                   .DATA.W     H'6000
    0000508E 0400                   .DATA.W     H'0400
    00005090 0800                   .DATA.W     H'0800
    00005092 1000                   .DATA.W     H'1000
    00005094 2000                   .DATA.W     H'2000
    00005096 3000                   .DATA.W     H'3000
    00005098 4000                   .DATA.W     H'4000
    0000509A 0000                   .DATA.W     0
    0000509C 00008000               .DATA.L     H'00008000
    000050A0 0000A000               .DATA.L     H'0000A000
    000050A4              L2870:                           ; case label 
          EDIT.c  3530                
          EDIT.c  3531                //Number of files 001
          EDIT.c  3532                case NODENFIL001:
          EDIT.c  3533                  if(sConfig->iMaxFiles!=48)
    000050A4 E040                   MOV         #64,R0
    000050A6 E158                   MOV         #88,R1
    000050A8 00FE                   MOV.L       @(R0,R15),R0
    000050AA 001E                   MOV.L       @(R0,R1),R0
    000050AC 8830                   CMP/EQ      #48,R0
    000050AE 8B01                   BF          L5248
    000050B0 A0ED                   BRA         L4607
    000050B2 0009                   NOP
    000050B4              L5248:                            
          EDIT.c  3534                  {
          EDIT.c  3535                    sConfig->iMaxFiles=48;
    000050B4 E040                   MOV         #64,R0
    000050B6 E330                   MOV         #48,R3
    000050B8 02FE                   MOV.L       @(R0,R15),R2
    000050BA E058                   MOV         #88,R0
    000050BC 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3536                    iRefresh=1;
    000050BE E201                   MOV         #1,R2
          EDIT.c  3537                  }
          EDIT.c  3538                  break;
    000050C0 A0E5                   BRA         L4607
    000050C2 1F2D                   MOV.L       R2,@(52,R15)
    000050C4              L2871:                           ; case label 
          EDIT.c  3539                
          EDIT.c  3540                //Number of files 002
          EDIT.c  3541                case NODENFIL002:
          EDIT.c  3542                  if(sConfig->iMaxFiles!=64)
    000050C4 E040                   MOV         #64,R0
    000050C6 E158                   MOV         #88,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  251


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000050C8 00FE                   MOV.L       @(R0,R15),R0
    000050CA 001E                   MOV.L       @(R0,R1),R0
    000050CC 8840                   CMP/EQ      #64,R0
    000050CE 8B01                   BF          L5249
    000050D0 A0DD                   BRA         L4607
    000050D2 0009                   NOP
    000050D4              L5249:                            
          EDIT.c  3543                  {
          EDIT.c  3544                    sConfig->iMaxFiles=64;
    000050D4 E040                   MOV         #64,R0
    000050D6 E340                   MOV         #64,R3
    000050D8 02FE                   MOV.L       @(R0,R15),R2
    000050DA E058                   MOV         #88,R0
    000050DC 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3545                    iRefresh=1;
    000050DE E201                   MOV         #1,R2
          EDIT.c  3546                  }
          EDIT.c  3547                  break;
    000050E0 A0D5                   BRA         L4607
    000050E2 1F2D                   MOV.L       R2,@(52,R15)
    000050E4              L2872:                           ; case label 
          EDIT.c  3548                
          EDIT.c  3549                //Number of files 003
          EDIT.c  3550                case NODENFIL003:
          EDIT.c  3551                  if(sConfig->iMaxFiles!=96)
    000050E4 E040                   MOV         #64,R0
    000050E6 E158                   MOV         #88,R1
    000050E8 00FE                   MOV.L       @(R0,R15),R0
    000050EA 001E                   MOV.L       @(R0,R1),R0
    000050EC 8860                   CMP/EQ      #96,R0
    000050EE 8B01                   BF          L5250
    000050F0 A0CD                   BRA         L4607
    000050F2 0009                   NOP
    000050F4              L5250:                            
          EDIT.c  3552                  {
          EDIT.c  3553                    sConfig->iMaxFiles=96;
    000050F4 E040                   MOV         #64,R0
    000050F6 E360                   MOV         #96,R3
    000050F8 02FE                   MOV.L       @(R0,R15),R2
    000050FA E058                   MOV         #88,R0
    000050FC 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3554                    iRefresh=1;
    000050FE E201                   MOV         #1,R2
          EDIT.c  3555                  }
          EDIT.c  3556                  break;
    00005100 A0C5                   BRA         L4607
    00005102 1F2D                   MOV.L       R2,@(52,R15)
    00005104              L2873:                           ; case label 
          EDIT.c  3557                
          EDIT.c  3558                //Number of files 004
          EDIT.c  3559                case NODENFIL004:
          EDIT.c  3560                  if(sConfig->iMaxFiles!=128)
    00005104 936A                   MOV.W       L5251,R3   ; H'0080
    00005106 E040                   MOV         #64,R0
    00005108 01FE                   MOV.L       @(R0,R15),R1
    0000510A E058                   MOV         #88,R0
    0000510C 021E                   MOV.L       @(R0,R1),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  252


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000510E 3230                   CMP/EQ      R3,R2
    00005110 8B01                   BF          L5252
    00005112 A0BC                   BRA         L4607
    00005114 0009                   NOP
    00005116              L5252:                            
          EDIT.c  3561                  {
          EDIT.c  3562                    sConfig->iMaxFiles=128;
    00005116 E040                   MOV         #64,R0
    00005118 02FE                   MOV.L       @(R0,R15),R2
    0000511A E058                   MOV         #88,R0
    0000511C 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3563                    iRefresh=1;
    0000511E E201                   MOV         #1,R2
          EDIT.c  3564                  }
          EDIT.c  3565                  break;
    00005120 A0B5                   BRA         L4607
    00005122 1F2D                   MOV.L       R2,@(52,R15)
    00005124              L2874:                           ; case label 
          EDIT.c  3566                
          EDIT.c  3567                //Number of files 005
          EDIT.c  3568                case NODENFIL005:
          EDIT.c  3569                  if(sConfig->iMaxFiles!=256)
    00005124 935B                   MOV.W       L5251+2,R3 ; H'0100
    00005126 E040                   MOV         #64,R0
    00005128 01FE                   MOV.L       @(R0,R15),R1
    0000512A E058                   MOV         #88,R0
    0000512C 021E                   MOV.L       @(R0,R1),R2
    0000512E 3230                   CMP/EQ      R3,R2
    00005130 8B01                   BF          L5253
    00005132 A0AC                   BRA         L4607
    00005134 0009                   NOP
    00005136              L5253:                            
          EDIT.c  3570                  {
          EDIT.c  3571                    sConfig->iMaxFiles=256;
    00005136 E040                   MOV         #64,R0
    00005138 02FE                   MOV.L       @(R0,R15),R2
    0000513A E058                   MOV         #88,R0
    0000513C 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3572                    iRefresh=1;
    0000513E E201                   MOV         #1,R2
          EDIT.c  3573                  }
          EDIT.c  3574                  break;
    00005140 A0A5                   BRA         L4607
    00005142 1F2D                   MOV.L       R2,@(52,R15)
    00005144              L2875:                           ; case label 
          EDIT.c  3575                
          EDIT.c  3576                //Number of folders 000
          EDIT.c  3577                case NODENFOL000:
          EDIT.c  3578                  if(sConfig->iMaxFolders!=16)
    00005144 E040                   MOV         #64,R0
    00005146 E15C                   MOV         #92,R1
    00005148 00FE                   MOV.L       @(R0,R15),R0
    0000514A 001E                   MOV.L       @(R0,R1),R0
    0000514C 8810                   CMP/EQ      #16,R0
    0000514E 8B01                   BF          L5254
    00005150 A09D                   BRA         L4607
    00005152 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  253


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005154              L5254:                            
          EDIT.c  3579                  {
          EDIT.c  3580                    sConfig->iMaxFolders=16;
    00005154 E040                   MOV         #64,R0
    00005156 E310                   MOV         #16,R3
    00005158 02FE                   MOV.L       @(R0,R15),R2
    0000515A E05C                   MOV         #92,R0
    0000515C 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3581                    iRefresh=1;
    0000515E E201                   MOV         #1,R2
          EDIT.c  3582                  }
          EDIT.c  3583                  break;
    00005160 A095                   BRA         L4607
    00005162 1F2D                   MOV.L       R2,@(52,R15)
    00005164              L2876:                           ; case label 
          EDIT.c  3584                
          EDIT.c  3585                //Number of folders 001
          EDIT.c  3586                case NODENFOL001:
          EDIT.c  3587                  if(sConfig->iMaxFolders!=32)
    00005164 E040                   MOV         #64,R0
    00005166 E15C                   MOV         #92,R1
    00005168 00FE                   MOV.L       @(R0,R15),R0
    0000516A 001E                   MOV.L       @(R0,R1),R0
    0000516C 8820                   CMP/EQ      #32,R0
    0000516E 8B01                   BF          L5255
    00005170 A08D                   BRA         L4607
    00005172 0009                   NOP
    00005174              L5255:                            
          EDIT.c  3588                  {
          EDIT.c  3589                    sConfig->iMaxFolders=32;
    00005174 E040                   MOV         #64,R0
    00005176 E320                   MOV         #32,R3
    00005178 02FE                   MOV.L       @(R0,R15),R2
    0000517A E05C                   MOV         #92,R0
    0000517C 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3590                    iRefresh=1;
    0000517E E201                   MOV         #1,R2
          EDIT.c  3591                  }
          EDIT.c  3592                  break;
    00005180 A085                   BRA         L4607
    00005182 1F2D                   MOV.L       R2,@(52,R15)
    00005184              L2877:                           ; case label 
          EDIT.c  3593                
          EDIT.c  3594                //Number of folders 002
          EDIT.c  3595                case NODENFOL002:
          EDIT.c  3596                  if(sConfig->iMaxFolders!=48)
    00005184 E040                   MOV         #64,R0
    00005186 E15C                   MOV         #92,R1
    00005188 00FE                   MOV.L       @(R0,R15),R0
    0000518A 001E                   MOV.L       @(R0,R1),R0
    0000518C 8830                   CMP/EQ      #48,R0
    0000518E 8B01                   BF          L5256
    00005190 A07D                   BRA         L4607
    00005192 0009                   NOP
    00005194              L5256:                            
          EDIT.c  3597                  {
          EDIT.c  3598                    sConfig->iMaxFolders=48;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  254


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005194 E040                   MOV         #64,R0
    00005196 E330                   MOV         #48,R3
    00005198 02FE                   MOV.L       @(R0,R15),R2
    0000519A E05C                   MOV         #92,R0
    0000519C 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3599                    iRefresh=1;
    0000519E E201                   MOV         #1,R2
          EDIT.c  3600                  }
          EDIT.c  3601                  break;
    000051A0 A075                   BRA         L4607
    000051A2 1F2D                   MOV.L       R2,@(52,R15)
    000051A4              L2878:                           ; case label 
          EDIT.c  3602                
          EDIT.c  3603                //Number of folders 003
          EDIT.c  3604                case NODENFOL003:
          EDIT.c  3605                  if(sConfig->iMaxFolders!=64)
    000051A4 E040                   MOV         #64,R0
    000051A6 E15C                   MOV         #92,R1
    000051A8 00FE                   MOV.L       @(R0,R15),R0
    000051AA 001E                   MOV.L       @(R0,R1),R0
    000051AC 8840                   CMP/EQ      #64,R0
    000051AE 896E                   BT          L4607
          EDIT.c  3606                  {
          EDIT.c  3607                    sConfig->iMaxFolders=64;
    000051B0 E040                   MOV         #64,R0
    000051B2 E340                   MOV         #64,R3
    000051B4 02FE                   MOV.L       @(R0,R15),R2
    000051B6 E05C                   MOV         #92,R0
    000051B8 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3608                    iRefresh=1;
    000051BA E201                   MOV         #1,R2
          EDIT.c  3609                  }
          EDIT.c  3610                  break;
    000051BC A067                   BRA         L4607
    000051BE 1F2D                   MOV.L       R2,@(52,R15)
    000051C0              L2879:                           ; case label 
          EDIT.c  3611                
          EDIT.c  3612                //Number of folders 004
          EDIT.c  3613                case NODENFOL004:
          EDIT.c  3614                  if(sConfig->iMaxFolders!=96)
    000051C0 E040                   MOV         #64,R0
    000051C2 E15C                   MOV         #92,R1
    000051C4 00FE                   MOV.L       @(R0,R15),R0
    000051C6 001E                   MOV.L       @(R0,R1),R0
    000051C8 8860                   CMP/EQ      #96,R0
    000051CA 8960                   BT          L4607
          EDIT.c  3615                  {
          EDIT.c  3616                    sConfig->iMaxFolders=96;
    000051CC E040                   MOV         #64,R0
    000051CE E360                   MOV         #96,R3
    000051D0 02FE                   MOV.L       @(R0,R15),R2
    000051D2 E05C                   MOV         #92,R0
    000051D4 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3617                    iRefresh=1;
    000051D6 E201                   MOV         #1,R2
          EDIT.c  3618                  }
          EDIT.c  3619                  break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  255


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000051D8 A059                   BRA         L4607
    000051DA 1F2D                   MOV.L       R2,@(52,R15)
    000051DC              L5251:                            
    000051DC 0080                   .DATA.W     H'0080
    000051DE 0100                   .DATA.W     H'0100
    000051E0              L2880:                           ; case label 
          EDIT.c  3620                
          EDIT.c  3621                //Number of folders 005
          EDIT.c  3622                case NODENFOL005:
          EDIT.c  3623                  if(sConfig->iMaxFolders!=128)
    000051E0 9376                   MOV.W       L5257,R3   ; H'0080
    000051E2 E040                   MOV         #64,R0
    000051E4 01FE                   MOV.L       @(R0,R15),R1
    000051E6 E05C                   MOV         #92,R0
    000051E8 021E                   MOV.L       @(R0,R1),R2
    000051EA 3230                   CMP/EQ      R3,R2
    000051EC 894F                   BT          L4607
          EDIT.c  3624                  {
          EDIT.c  3625                    sConfig->iMaxFolders=128;
    000051EE E040                   MOV         #64,R0
    000051F0 02FE                   MOV.L       @(R0,R15),R2
    000051F2 E05C                   MOV         #92,R0
    000051F4 0236                   MOV.L       R3,@(R0,R2)
          EDIT.c  3626                    iRefresh=1;
    000051F6 E201                   MOV         #1,R2
    000051F8 1F2D                   MOV.L       R2,@(52,R15)
          EDIT.c  3627                  }
          EDIT.c  3628                  break;
    000051FA              L4609:                            
          EDIT.c  3629                
          EDIT.c  3630              }
          EDIT.c  3631              break;
    000051FA A048                   BRA         L4607
    000051FC 0009                   NOP
    000051FE              L2881:                           ; case label 
          EDIT.c  3632            }
          EDIT.c  3633            break;
          EDIT.c  3634           
          EDIT.c  3635          //Exit
          EDIT.c  3636          case KEY_CTRL_EXIT:
          EDIT.c  3637            iExit=1;
    000051FE E101                   MOV         #1,R1
          EDIT.c  3638            break;
    00005200 A045                   BRA         L4607
    00005202 1F1E                   MOV.L       R1,@(56,R15)
    00005204              L2882:                           ; case label 
          EDIT.c  3639            
          EDIT.c  3640          //Enter
          EDIT.c  3641          case KEY_CTRL_EXE:
          EDIT.c  3642            iExit=1;
    00005204 E201                   MOV         #1,R2
          EDIT.c  3643            break;
    00005206 A042                   BRA         L4607
    00005208 1F2E                   MOV.L       R2,@(56,R15)
    0000520A              L2883:                           ; case label 
          EDIT.c  3644            
          EDIT.c  3645          //Cursor y++




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  256


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3646          case KEY_CTRL_DOWN:
          EDIT.c  3647            iRow++;
          EDIT.c  3648            if(iStart+iRow>CONFIGLINES-1)
    0000520A E00F                   MOV         #15,R0
    0000520C D131                   MOV.L       L5257+4,R1 ; __$iRow$1145
    0000520E 6312                   MOV.L       @R1,R3
    00005210 7301                   ADD         #1,R3
    00005212 2132                   MOV.L       R3,@R1
    00005214 D130                   MOV.L       L5257+8,R1 ; __$iStart$1144
    00005216 6212                   MOV.L       @R1,R2
    00005218 332C                   ADD         R2,R3
    0000521A 3307                   CMP/GT      R0,R3
    0000521C 8B07                   BF          L4658
          EDIT.c  3649            {
          EDIT.c  3650              iStart=0;
    0000521E E200                   MOV         #0,R2
    00005220 D32D                   MOV.L       L5257+8,R3 ; __$iStart$1144
          EDIT.c  3651              iRow=0;
    00005222 6123                   MOV         R2,R1
    00005224 D02B                   MOV.L       L5257+4,R0 ; __$iRow$1145
    00005226 2322                   MOV.L       R2,@R3
    00005228 2022                   MOV.L       R2,@R0
    0000522A A016                   BRA         L4971
    0000522C 0009                   NOP
    0000522E              L4658:                            
          EDIT.c  3652            }
          EDIT.c  3653            else if(iRow>6)
    0000522E E306                   MOV         #6,R3
    00005230 D128                   MOV.L       L5257+4,R1 ; __$iRow$1145
    00005232 6212                   MOV.L       @R1,R2
    00005234 3237                   CMP/GT      R3,R2
    00005236 8B10                   BF          L4971
          EDIT.c  3654            {
          EDIT.c  3655              iRow=6;
    00005238 D226                   MOV.L       L5257+4,R2 ; __$iRow$1145
    0000523A 2232                   MOV.L       R3,@R2
          EDIT.c  3656              iStart++;
    0000523C D126                   MOV.L       L5257+8,R1 ; __$iStart$1144
    0000523E 6012                   MOV.L       @R1,R0
    00005240 7001                   ADD         #1,R0
    00005242 2102                   MOV.L       R0,@R1
          EDIT.c  3657              if(iStart+iRow>=CONFIGLINES)
    00005244 6322                   MOV.L       @R2,R3
    00005246 E110                   MOV         #16,R1
    00005248 303C                   ADD         R3,R0
    0000524A 3013                   CMP/GE      R1,R0
    0000524C 8B05                   BF          L4971
          EDIT.c  3658              { 
          EDIT.c  3659                iStart=0;
    0000524E E200                   MOV         #0,R2
    00005250 D321                   MOV.L       L5257+8,R3 ; __$iStart$1144
          EDIT.c  3660                iRow=0;
    00005252 6123                   MOV         R2,R1
    00005254 D01F                   MOV.L       L5257+4,R0 ; __$iRow$1145
    00005256 2322                   MOV.L       R2,@R3
    00005258 2022                   MOV.L       R2,@R0
    0000525A              L4971:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  257


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3661              }
          EDIT.c  3662            }
          EDIT.c  3663            iRefresh=1;
    0000525A E301                   MOV         #1,R3
          EDIT.c  3664            break;
    0000525C A017                   BRA         L4607
    0000525E 1F3D                   MOV.L       R3,@(52,R15)
    00005260              L2884:                           ; case label 
          EDIT.c  3665              
          EDIT.c  3666          //Cursor y--
          EDIT.c  3667          case KEY_CTRL_UP:    
          EDIT.c  3668            iRow--;
    00005260 D11C                   MOV.L       L5257+4,R1 ; __$iRow$1145
    00005262 6212                   MOV.L       @R1,R2
    00005264 72FF                   ADD         #-1,R2
          EDIT.c  3669            if(iRow<0)
    00005266 4211                   CMP/PZ      R2
    00005268 8D0F                   BT/S        L4662
    0000526A 2122                   MOV.L       R2,@R1
          EDIT.c  3670            {
          EDIT.c  3671              iRow=0;
    0000526C D319                   MOV.L       L5257+4,R3 ; __$iRow$1145
    0000526E E100                   MOV         #0,R1
          EDIT.c  3672              iStart--;
    00005270 D219                   MOV.L       L5257+8,R2 ; __$iStart$1144
    00005272 2312                   MOV.L       R1,@R3
    00005274 6022                   MOV.L       @R2,R0
    00005276 70FF                   ADD         #-1,R0
    00005278 2202                   MOV.L       R0,@R2
          EDIT.c  3673              if(iStart<0)
    0000527A 4011                   CMP/PZ      R0
    0000527C 8905                   BT          L4662
          EDIT.c  3674              { 
          EDIT.c  3675                if(CONFIGLINES-1>6)
          EDIT.c  3676                {
          EDIT.c  3677                  iStart=CONFIGLINES-1-6;
    0000527E E109                   MOV         #9,R1
    00005280 D215                   MOV.L       L5257+8,R2 ; __$iStart$1144
          EDIT.c  3678                  iRow=6;
    00005282 E306                   MOV         #6,R3
    00005284 D013                   MOV.L       L5257+4,R0 ; __$iRow$1145
    00005286 2212                   MOV.L       R1,@R2
    00005288 2032                   MOV.L       R3,@R0
    0000528A              L4662:                            
          EDIT.c  3679                }
          EDIT.c  3680                else
          EDIT.c  3681                {
          EDIT.c  3682                  iStart=0;
          EDIT.c  3683                  iRow=CONFIGLINES-1;
          EDIT.c  3684                }
          EDIT.c  3685              }
          EDIT.c  3686            }
          EDIT.c  3687            iRefresh=1;
    0000528A E201                   MOV         #1,R2
    0000528C 1F2D                   MOV.L       R2,@(52,R15)
          EDIT.c  3688            break;
    0000528E              L4607:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  258


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3689        }
          EDIT.c  3690      
          EDIT.c  3691        //Export configuration every time something is changed
          EDIT.c  3692        ConfigExport(sConfig);
    0000528E E040                   MOV         #64,R0
    00005290 B2D8                   BSR         _ConfigExport
    00005292 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  3693      
          EDIT.c  3694      }while(iExit==0);
    00005294 52FE                   MOV.L       @(56,R15),R2
    00005296 2228                   TST         R2,R2
    00005298 8B01                   BF          L5258
    0000529A AB14                   BRA         L4598
    0000529C 0009                   NOP
    0000529E              L5258:                            
          EDIT.c  3695    
          EDIT.c  3696      //Unhide keyboard status
          EDIT.c  3697      KeyboardStatusHideRestore();
    0000529E D30F                   MOV.L       L5257+12,R3; _KeyboardStatusHideRestore
    000052A0 430B                   JSR         @R3
    000052A2 0009                   NOP
          EDIT.c  3698      MenuRestoreBar();
    000052A4 D20E                   MOV.L       L5257+16,R2; _MenuRestoreBar
    000052A6 420B                   JSR         @R2
    000052A8 0009                   NOP
          EDIT.c  3699      
          EDIT.c  3700    }
    000052AA 7F44                   ADD         #68,R15
    000052AC 4F26                   LDS.L       @R15+,PR
    000052AE 000B                   RTS
    000052B0 0009                   NOP
          EDIT.c  3701    
          EDIT.c  3702    // ----------------------------------------------------------------
          EDIT.c  3703    // Print config entry
          EDIT.c  3704    void PrintConfigEntry(int iRow,int iOptio, struct Config *sConfig, int iColor)
    000052B2              _PrintConfigEntry:               ; function: PrintConfigEntry
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __slow_strcmp1
          EDIT.c  3705    {
          EDIT.c  3706      
          EDIT.c  3707      //Variables
          EDIT.c  3708      char sNumber[10];
          EDIT.c  3709      
          EDIT.c  3710      //Color
          EDIT.c  3711      switch(iColor)
    000052B2 6073                   MOV         R7,R0
    000052B4 4F22                   STS.L       PR,@-R15
    000052B6 8801                   CMP/EQ      #1,R0
    000052B8 7FE4                   ADD         #-28,R15
    000052BA 1F46                   MOV.L       R4,@(24,R15)
    000052BC 1F55                   MOV.L       R5,@(20,R15)
    000052BE 1F64                   MOV.L       R6,@(16,R15)
    000052C0 8D04                   BT/S        L2885
    000052C2 1F73                   MOV.L       R7,@(12,R15)
    000052C4 8800                   CMP/EQ      #0,R0
    000052C6 890D                   BT          L2886




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  259


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000052C8 A010                   BRA         L4666
    000052CA 0009                   NOP
    000052CC              L2885:                           ; case label 
          EDIT.c  3712      {
          EDIT.c  3713        case 1: SetColor(COLNOR); break;
    000052CC A00B                   BRA         L4973
    000052CE E400                   MOV         #0,R4
    000052D0              L5257:                            
    000052D0 0080                   .DATA.W     H'0080
    000052D2 0000                   .DATA.W     0
    000052D4 <00000000>             .DATA.L     __$iRow$1145
    000052D8 <00000000>             .DATA.L     __$iStart$1144
    000052DC <00000000>             .DATA.L     _KeyboardStatusHideRestore
    000052E0 <00000000>             .DATA.L     _MenuRestoreBar
    000052E4              L2886:                           ; case label 
          EDIT.c  3714        case 0: SetColor(COLREV); break;
    000052E4 E401                   MOV         #1,R4
    000052E6              L4973:                            
    000052E6 D307                   MOV.L       L5259,R3   ; _SetColor
    000052E8 430B                   JSR         @R3
    000052EA 0009                   NOP
    000052EC              L4666:                            
          EDIT.c  3715      }
          EDIT.c  3716      
          EDIT.c  3717      //Switch depending on congiguration option
          EDIT.c  3718      switch(iOptio)
    000052EC 50F5                   MOV.L       @(20,R15),R0
    000052EE E110                   MOV         #16,R1
    000052F0 3012                   CMP/HS      R1,R0
    000052F2 8B01                   BF          L5260
    000052F4 A209                   BRA         L4667
    000052F6 0009                   NOP
    000052F8              L5260:                            
    000052F8 4000                   SHLL        R0
    000052FA 6103                   MOV         R0,R1
    000052FC C702                   MOVA        L5262,R0
    000052FE 001D                   MOV.W       @(R0,R1),R0
    00005300 0023                   BRAF        R0
    00005302 0009                   NOP
    00005304              L5261:                            
    00005304              L5259:                            
    00005304 <00000000>             .DATA.L     _SetColor
    00005308              L5262:
    00005308 0024                   .DATA.W     L2887-L5261
    0000530A 004A                   .DATA.W     L2891-L5261
    0000530C 0070                   .DATA.W     L2895-L5261
    0000530E 009E                   .DATA.W     L2901-L5261
    00005310 00CC                   .DATA.W     L2907-L5261
    00005312 00FA                   .DATA.W     L2912-L5261
    00005314 0178                   .DATA.W     L2923-L5261
    00005316 014A                   .DATA.W     L2917-L5261
    00005318 0348                   .DATA.W     L2946-L5261
    0000531A 0376                   .DATA.W     L2949-L5261
    0000531C 03A4                   .DATA.W     L2951-L5261
    0000531E 03D2                   .DATA.W     L2953-L5261
    00005320 0234                   .DATA.W     L2933-L5261
    00005322 0262                   .DATA.W     L2939-L5261




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  260


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005324 02BE                   .DATA.W     L2941-L5261
    00005326 0300                   .DATA.W     L2944-L5261
          EDIT.c  3719      {
          EDIT.c  3720        //Try SD
          EDIT.c  3721        case CONFIGTRYSD:
    00005328              L2887:                           ; case label 
          EDIT.c  3722          PrintStr(0,iRow,"Try SDC   :");
    00005328 D665                   MOV.L       L5263+2,R6 ; L1227
    0000532A 55F6                   MOV.L       @(24,R15),R5
    0000532C D365                   MOV.L       L5263+6,R3 ; _PrintStr
    0000532E 430B                   JSR         @R3
    00005330 E400                   MOV         #0,R4
          EDIT.c  3723          if(sConfig->iTrySD==1)
    00005332 50F4                   MOV.L       @(16,R15),R0
    00005334 5002                   MOV.L       @(8,R0),R0
    00005336 8801                   CMP/EQ      #1,R0
    00005338 8B02                   BF          L4668
          EDIT.c  3724            PrintStr(11,iRow,"Yes       ");
    0000533A D663                   MOV.L       L5263+10,R6; L1228
    0000533C A001                   BRA         L4974
    0000533E 0009                   NOP
    00005340              L4668:                            
          EDIT.c  3725          else
          EDIT.c  3726            PrintStr(11,iRow,"No        ");
    00005340 D662                   MOV.L       L5263+14,R6; L1229
    00005342              L4974:                            
    00005342 55F6                   MOV.L       @(24,R15),R5
    00005344 D35F                   MOV.L       L5263+6,R3 ; _PrintStr
    00005346 430B                   JSR         @R3
    00005348 E40B                   MOV         #11,R4
          EDIT.c  3727          break;
    0000534A A1DE                   BRA         L4667
    0000534C 0009                   NOP
    0000534E              L2891:                           ; case label 
          EDIT.c  3728        
          EDIT.c  3729        //Hide system files
          EDIT.c  3730        case CONFIGHIDSYS:
          EDIT.c  3731          PrintStr(0,iRow,"Syst.files:");
    0000534E D660                   MOV.L       L5263+18,R6; L1230
    00005350 55F6                   MOV.L       @(24,R15),R5
    00005352 D35C                   MOV.L       L5263+6,R3 ; _PrintStr
    00005354 430B                   JSR         @R3
    00005356 E400                   MOV         #0,R4
          EDIT.c  3732          if(sConfig->iHideSysFiles==1)
    00005358 50F4                   MOV.L       @(16,R15),R0
    0000535A 5003                   MOV.L       @(12,R0),R0
    0000535C 8801                   CMP/EQ      #1,R0
    0000535E 8B02                   BF          L4670
          EDIT.c  3733            PrintStr(11,iRow,"Hidden    ");
    00005360 D65C                   MOV.L       L5263+22,R6; L1231
    00005362 A001                   BRA         L4975
    00005364 0009                   NOP
    00005366              L4670:                            
          EDIT.c  3734          else
          EDIT.c  3735            PrintStr(11,iRow,"Displayed ");
    00005366 D65C                   MOV.L       L5263+26,R6; L1232
    00005368              L4975:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  261


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005368 55F6                   MOV.L       @(24,R15),R5
    0000536A D356                   MOV.L       L5263+6,R3 ; _PrintStr
    0000536C 430B                   JSR         @R3
    0000536E E40B                   MOV         #11,R4
          EDIT.c  3736          break;
    00005370 A1CB                   BRA         L4667
    00005372 0009                   NOP
    00005374              L2895:                           ; case label 
          EDIT.c  3737        
          EDIT.c  3738        //New line mode
          EDIT.c  3739        case CONFIGNLMODE:
          EDIT.c  3740          PrintStr(0,iRow,"New line  :");
    00005374 D659                   MOV.L       L5263+30,R6; L1233
    00005376 55F6                   MOV.L       @(24,R15),R5
    00005378 D352                   MOV.L       L5263+6,R3 ; _PrintStr
    0000537A 430B                   JSR         @R3
    0000537C E400                   MOV         #0,R4
          EDIT.c  3741          switch(sConfig->iNLMode)
    0000537E 50F4                   MOV.L       @(16,R15),R0
    00005380 5004                   MOV.L       @(16,R0),R0
    00005382 8801                   CMP/EQ      #1,R0
    00005384 8903                   BT          L2897
    00005386 8800                   CMP/EQ      #0,R0
    00005388 8904                   BT          L2899
    0000538A A1BE                   BRA         L4667
    0000538C 0009                   NOP
    0000538E              L2897:                           ; case label 
          EDIT.c  3742          {
          EDIT.c  3743            case NEWLMODECRLF: PrintStr(11,iRow,"CR+LF(Win)"); break;
    0000538E D654                   MOV.L       L5263+34,R6; L1235
    00005390 A001                   BRA         L4976
    00005392 0009                   NOP
    00005394              L2899:                           ; case label 
          EDIT.c  3744            case NEWLMODELF  : PrintStr(11,iRow,"LF(Unix)  "); break;
    00005394 D653                   MOV.L       L5263+38,R6; L1236
    00005396              L4976:                            
    00005396 55F6                   MOV.L       @(24,R15),R5
    00005398 D34A                   MOV.L       L5263+6,R3 ; _PrintStr
    0000539A 430B                   JSR         @R3
    0000539C E40B                   MOV         #11,R4
          EDIT.c  3745          }
          EDIT.c  3746          break;
    0000539E A1B4                   BRA         L4667
    000053A0 0009                   NOP
    000053A2              L2901:                           ; case label 
          EDIT.c  3747        
          EDIT.c  3748        //New line mode
          EDIT.c  3749        case CONFIGWWRAP:
          EDIT.c  3750          PrintStr(0,iRow,"Word Wrap :");
    000053A2 D651                   MOV.L       L5263+42,R6; L1237
    000053A4 55F6                   MOV.L       @(24,R15),R5
    000053A6 D347                   MOV.L       L5263+6,R3 ; _PrintStr
    000053A8 430B                   JSR         @R3
    000053AA E400                   MOV         #0,R4
          EDIT.c  3751          switch(sConfig->iWordWrap)
    000053AC 50F4                   MOV.L       @(16,R15),R0
    000053AE 5005                   MOV.L       @(20,R0),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  262


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000053B0 8801                   CMP/EQ      #1,R0
    000053B2 8903                   BT          L2903
    000053B4 8800                   CMP/EQ      #0,R0
    000053B6 8904                   BT          L2905
    000053B8 A1A7                   BRA         L4667
    000053BA 0009                   NOP
    000053BC              L2903:                           ; case label 
          EDIT.c  3752          {
          EDIT.c  3753            case 1: PrintStr(11,iRow,"On        "); break;
    000053BC D64B                   MOV.L       L5263+46,R6; L1239
    000053BE A001                   BRA         L4977
    000053C0 0009                   NOP
    000053C2              L2905:                           ; case label 
          EDIT.c  3754            case 0: PrintStr(11,iRow,"Off       "); break;
    000053C2 D64B                   MOV.L       L5263+50,R6; L1240
    000053C4              L4977:                            
    000053C4 55F6                   MOV.L       @(24,R15),R5
    000053C6 D33F                   MOV.L       L5263+6,R3 ; _PrintStr
    000053C8 430B                   JSR         @R3
    000053CA E40B                   MOV         #11,R4
          EDIT.c  3755          }
          EDIT.c  3756          break;
    000053CC A19D                   BRA         L4667
    000053CE 0009                   NOP
    000053D0              L2907:                           ; case label 
          EDIT.c  3757        
          EDIT.c  3758        //Display bytes free in explorer
          EDIT.c  3759        case CONFIGDFRE:
          EDIT.c  3760          PrintStr(0,iRow,"Bytes free:");
    000053D0 D648                   MOV.L       L5263+54,R6; L1241
    000053D2 55F6                   MOV.L       @(24,R15),R5
    000053D4 D33B                   MOV.L       L5263+6,R3 ; _PrintStr
    000053D6 430B                   JSR         @R3
    000053D8 E400                   MOV         #0,R4
          EDIT.c  3761          switch(sConfig->iDispFree)
    000053DA 50F4                   MOV.L       @(16,R15),R0
    000053DC 5006                   MOV.L       @(24,R0),R0
    000053DE 8801                   CMP/EQ      #1,R0
    000053E0 8903                   BT          L2909
    000053E2 8800                   CMP/EQ      #0,R0
    000053E4 8904                   BT          L2910
    000053E6 A190                   BRA         L4667
    000053E8 0009                   NOP
    000053EA              L2909:                           ; case label 
          EDIT.c  3762          {
          EDIT.c  3763            case 1: PrintStr(11,iRow,"Displayed "); break;
    000053EA D63B                   MOV.L       L5263+26,R6; L1232
    000053EC A001                   BRA         L4978
    000053EE 0009                   NOP
    000053F0              L2910:                           ; case label 
          EDIT.c  3764            case 0: PrintStr(11,iRow,"Not disp. "); break;
    000053F0 D641                   MOV.L       L5263+58,R6; L1243
    000053F2              L4978:                            
    000053F2 55F6                   MOV.L       @(24,R15),R5
    000053F4 D333                   MOV.L       L5263+6,R3 ; _PrintStr
    000053F6 430B                   JSR         @R3
    000053F8 E40B                   MOV         #11,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  263


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3765          }
          EDIT.c  3766          break;
    000053FA A186                   BRA         L4667
    000053FC 0009                   NOP
    000053FE              L2912:                           ; case label 
          EDIT.c  3767        
          EDIT.c  3768        //Default root
          EDIT.c  3769        case CONFIGDROO:
          EDIT.c  3770          PrintStr(0,iRow,"Def. root :");
    000053FE D63F                   MOV.L       L5263+62,R6; L1244
    00005400 55F6                   MOV.L       @(24,R15),R5
    00005402 D330                   MOV.L       L5263+6,R3 ; _PrintStr
    00005404 430B                   JSR         @R3
    00005406 E400                   MOV         #0,R4
          EDIT.c  3771          if(strcmp(sConfig->sDefRoot,"main")==0)
    00005408 D53D                   MOV.L       L5263+66,R5; L620
    0000540A 54F4                   MOV.L       @(16,R15),R4
    0000540C D33D                   MOV.L       L5263+70,R3; __slow_strcmp1
    0000540E 430B                   JSR         @R3
    00005410 741C                   ADD         #28,R4
    00005412 2008                   TST         R0,R0
    00005414 8B01                   BF          L5264
    00005416 A0B7                   BRA         L4994
    00005418 0009                   NOP
    0000541A              L5264:                            
          EDIT.c  3772            PrintStr(11,iRow,"Main Mem. "); 
          EDIT.c  3773          else if(strcmp(sConfig->sDefRoot,"fls0")==0)
    0000541A D53B                   MOV.L       L5263+74,R5; L813
    0000541C 54F4                   MOV.L       @(16,R15),R4
    0000541E D339                   MOV.L       L5263+70,R3; __slow_strcmp1
    00005420 430B                   JSR         @R3
    00005422 741C                   ADD         #28,R4
    00005424 2008                   TST         R0,R0
    00005426 8B02                   BF          L4677
          EDIT.c  3774            PrintStr(11,iRow,"Sto.Memory"); 
    00005428 D638                   MOV.L       L5263+78,R6; L1246
    0000542A A16A                   BRA         L4993
    0000542C 0009                   NOP
    0000542E              L4677:                            
          EDIT.c  3775          else if(strcmp(sConfig->sDefRoot,"crd0")==0)
    0000542E D538                   MOV.L       L5263+82,R5; L815
    00005430 54F4                   MOV.L       @(16,R15),R4
    00005432 D334                   MOV.L       L5263+70,R3; __slow_strcmp1
    00005434 430B                   JSR         @R3
    00005436 741C                   ADD         #28,R4
    00005438 2008                   TST         R0,R0
    0000543A 8901                   BT          L5265
    0000543C A165                   BRA         L4667
    0000543E 0009                   NOP
    00005440              L5265:                            
          EDIT.c  3776            PrintStr(11,iRow,"SD Card   "); 
    00005440 D634                   MOV.L       L5263+86,R6; L1247
    00005442 55F6                   MOV.L       @(24,R15),R5
    00005444 D31F                   MOV.L       L5263+6,R3 ; _PrintStr
    00005446 430B                   JSR         @R3
    00005448 E40B                   MOV         #11,R4
          EDIT.c  3777          break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  264


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000544A A15E                   BRA         L4667
    0000544C 0009                   NOP
    0000544E              L2917:                           ; case label 
          EDIT.c  3778        
          EDIT.c  3779        //Info bar
          EDIT.c  3780        case CONFIGINFO:
          EDIT.c  3781          PrintStr(0,iRow,"Info bar  :");
    0000544E D632                   MOV.L       L5263+90,R6; L1248
    00005450 55F6                   MOV.L       @(24,R15),R5
    00005452 D31C                   MOV.L       L5263+6,R3 ; _PrintStr
    00005454 430B                   JSR         @R3
    00005456 E400                   MOV         #0,R4
          EDIT.c  3782          switch(sConfig->iInfo)
    00005458 50F4                   MOV.L       @(16,R15),R0
    0000545A 500A                   MOV.L       @(40,R0),R0
    0000545C 8801                   CMP/EQ      #1,R0
    0000545E 8903                   BT          L2919
    00005460 8802                   CMP/EQ      #2,R0
    00005462 8904                   BT          L2921
    00005464 A151                   BRA         L4667
    00005466 0009                   NOP
    00005468              L2919:                           ; case label 
          EDIT.c  3783          {
          EDIT.c  3784            case INFOBARFOLDER: PrintStr(11,iRow,"Folder    "); break;
    00005468 D62C                   MOV.L       L5263+94,R6; L1250
    0000546A A001                   BRA         L4980
    0000546C 0009                   NOP
    0000546E              L2921:                           ; case label 
          EDIT.c  3785            case INFOBARCURSOR: PrintStr(11,iRow,"Cursor    "); break;
    0000546E D62C                   MOV.L       L5263+98,R6; L1251
    00005470              L4980:                            
    00005470 55F6                   MOV.L       @(24,R15),R5
    00005472 D314                   MOV.L       L5263+6,R3 ; _PrintStr
    00005474 430B                   JSR         @R3
    00005476 E40B                   MOV         #11,R4
          EDIT.c  3786          }
          EDIT.c  3787          break;
    00005478 A147                   BRA         L4667
    0000547A 0009                   NOP
    0000547C              L2923:                           ; case label 
          EDIT.c  3788        
          EDIT.c  3789        //Font
          EDIT.c  3790        case CONFIGFONT:
          EDIT.c  3791          PrintStr(0,iRow,"Font size :");
    0000547C D629                   MOV.L       L5263+102,R6; L1252
    0000547E 55F6                   MOV.L       @(24,R15),R5
    00005480 D310                   MOV.L       L5263+6,R3 ; _PrintStr
    00005482 430B                   JSR         @R3
    00005484 E400                   MOV         #0,R4
          EDIT.c  3792          switch(sConfig->iFont)
    00005486 50F4                   MOV.L       @(16,R15),R0
    00005488 5009                   MOV.L       @(36,R0),R0
    0000548A 8800                   CMP/EQ      #0,R0
    0000548C 8907                   BT          L2925
    0000548E 8801                   CMP/EQ      #1,R0
    00005490 8908                   BT          L2927
    00005492 8802                   CMP/EQ      #2,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  265


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005494 8909                   BT          L2929
    00005496 8803                   CMP/EQ      #3,R0
    00005498 890A                   BT          L2931
    0000549A A136                   BRA         L4667
    0000549C 0009                   NOP
    0000549E              L2925:                           ; case label 
          EDIT.c  3793          {
          EDIT.c  3794            case FONTS: PrintStr(11,iRow,"32col,8lin"); break;
    0000549E D622                   MOV.L       L5263+106,R6; L1254
    000054A0 A007                   BRA         L4983
    000054A2 0009                   NOP
    000054A4              L2927:                           ; case label 
          EDIT.c  3795            case FONTT: PrintStr(11,iRow,"32col,7lin"); break;
    000054A4 D621                   MOV.L       L5263+110,R6; L1255
    000054A6 A004                   BRA         L4983
    000054A8 0009                   NOP
    000054AA              L2929:                           ; case label 
          EDIT.c  3796            case FONTM: PrintStr(11,iRow,"25col,7lin"); break;
    000054AA D621                   MOV.L       L5263+114,R6; L1256
    000054AC A001                   BRA         L4983
    000054AE 0009                   NOP
    000054B0              L2931:                           ; case label 
          EDIT.c  3797            case FONTL: PrintStr(11,iRow,"21col,6lin"); break;
    000054B0 D620                   MOV.L       L5263+118,R6; L1257
    000054B2              L4983:                            
    000054B2 55F6                   MOV.L       @(24,R15),R5
    000054B4 D303                   MOV.L       L5263+6,R3 ; _PrintStr
    000054B6 430B                   JSR         @R3
    000054B8 E40B                   MOV         #11,R4
          EDIT.c  3798          }
          EDIT.c  3799          break;
    000054BA A126                   BRA         L4667
    000054BC 0009                   NOP
    000054BE              L5263:                            
    000054BE 0000                   .DATA.W     0
    000054C0 <00000000>             .DATA.L     L1227
    000054C4 <00000000>             .DATA.L     _PrintStr
    000054C8 <00000000>             .DATA.L     L1228
    000054CC <00000000>             .DATA.L     L1229
    000054D0 <00000000>             .DATA.L     L1230
    000054D4 <00000000>             .DATA.L     L1231
    000054D8 <00000000>             .DATA.L     L1232
    000054DC <00000000>             .DATA.L     L1233
    000054E0 <00000000>             .DATA.L     L1235
    000054E4 <00000000>             .DATA.L     L1236
    000054E8 <00000000>             .DATA.L     L1237
    000054EC <00000000>             .DATA.L     L1239
    000054F0 <00000000>             .DATA.L     L1240
    000054F4 <00000000>             .DATA.L     L1241
    000054F8 <00000000>             .DATA.L     L1243
    000054FC <00000000>             .DATA.L     L1244
    00005500 <00000000>             .DATA.L     L620
    00005504 <00000000>             .DATA.L     __slow_strcmp1
    00005508 <00000000>             .DATA.L     L813
    0000550C <00000000>             .DATA.L     L1246
    00005510 <00000000>             .DATA.L     L815
    00005514 <00000000>             .DATA.L     L1247




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  266


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005518 <00000000>             .DATA.L     L1248
    0000551C <00000000>             .DATA.L     L1250
    00005520 <00000000>             .DATA.L     L1251
    00005524 <00000000>             .DATA.L     L1252
    00005528 <00000000>             .DATA.L     L1254
    0000552C <00000000>             .DATA.L     L1255
    00005530 <00000000>             .DATA.L     L1256
    00005534 <00000000>             .DATA.L     L1257
    00005538              L2933:                           ; case label 
          EDIT.c  3800        
          EDIT.c  3801        //Auto open
          EDIT.c  3802        case CONFIGAOPEN:
          EDIT.c  3803          PrintStr(0,iRow,"Auto Open :");
    00005538 D676                   MOV.L       L5266+2,R6 ; L1258
    0000553A 55F6                   MOV.L       @(24,R15),R5
    0000553C D376                   MOV.L       L5266+6,R3 ; _PrintStr
    0000553E 430B                   JSR         @R3
    00005540 E400                   MOV         #0,R4
          EDIT.c  3804          switch(sConfig->iAutoOpen)
    00005542 50F4                   MOV.L       @(16,R15),R0
    00005544 500B                   MOV.L       @(44,R0),R0
    00005546 8801                   CMP/EQ      #1,R0
    00005548 8903                   BT          L2935
    0000554A 8800                   CMP/EQ      #0,R0
    0000554C 8904                   BT          L2937
    0000554E A0DC                   BRA         L4667
    00005550 0009                   NOP
    00005552              L2935:                           ; case label 
          EDIT.c  3805          {
          EDIT.c  3806            case 1: PrintStr(11,iRow,"Enabled   "); break;
    00005552 D672                   MOV.L       L5266+10,R6; L1260
    00005554 A001                   BRA         L4984
    00005556 0009                   NOP
    00005558              L2937:                           ; case label 
          EDIT.c  3807            case 0: PrintStr(11,iRow,"Disabled  "); break;
    00005558 D671                   MOV.L       L5266+14,R6; L1261
    0000555A              L4984:                            
    0000555A 55F6                   MOV.L       @(24,R15),R5
    0000555C D36E                   MOV.L       L5266+6,R3 ; _PrintStr
    0000555E 430B                   JSR         @R3
    00005560 E40B                   MOV         #11,R4
          EDIT.c  3808          }
          EDIT.c  3809          break;
    00005562 A0D2                   BRA         L4667
    00005564 0009                   NOP
    00005566              L2939:                           ; case label 
          EDIT.c  3810        
          EDIT.c  3811        //Auto root
          EDIT.c  3812        case CONFIGAROOT:
          EDIT.c  3813          PrintStr(11,iRow,"          ");
    00005566 D66F                   MOV.L       L5266+18,R6; L832
    00005568 55F6                   MOV.L       @(24,R15),R5
    0000556A D36B                   MOV.L       L5266+6,R3 ; _PrintStr
    0000556C 430B                   JSR         @R3
    0000556E E40B                   MOV         #11,R4
          EDIT.c  3814          PrintStr(0,iRow,"Auto Root :");
    00005570 D66D                   MOV.L       L5266+22,R6; L1262




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  267


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005572 55F6                   MOV.L       @(24,R15),R5
    00005574 D368                   MOV.L       L5266+6,R3 ; _PrintStr
    00005576 430B                   JSR         @R3
    00005578 E400                   MOV         #0,R4
          EDIT.c  3815          if(strcmp(sConfig->sAutoRoot,"main")==0)
    0000557A D56C                   MOV.L       L5266+26,R5; L620
    0000557C 54F4                   MOV.L       @(16,R15),R4
    0000557E D36C                   MOV.L       L5266+30,R3; __slow_strcmp1
    00005580 430B                   JSR         @R3
    00005582 7430                   ADD         #48,R4
    00005584 2008                   TST         R0,R0
    00005586 8B02                   BF          L4683
    00005588              L4994:                            
    00005588 D66A                   MOV.L       L5266+34,R6; L1245
          EDIT.c  3816            PrintStr(11,iRow,"Main Mem. "); 
    0000558A A0BA                   BRA         L4993
    0000558C 0009                   NOP
    0000558E              L4683:                            
          EDIT.c  3817          else if(strcmp(sConfig->sAutoRoot,"fls0")==0)
    0000558E D56A                   MOV.L       L5266+38,R5; L813
    00005590 54F4                   MOV.L       @(16,R15),R4
    00005592 D367                   MOV.L       L5266+30,R3; __slow_strcmp1
    00005594 430B                   JSR         @R3
    00005596 7430                   ADD         #48,R4
    00005598 2008                   TST         R0,R0
    0000559A 8B02                   BF          L4685
          EDIT.c  3818            PrintStr(11,iRow,"Sto.Memory"); 
    0000559C D667                   MOV.L       L5266+42,R6; L1246
    0000559E A0B0                   BRA         L4993
    000055A0 0009                   NOP
    000055A2              L4685:                            
          EDIT.c  3819          else if(strcmp(sConfig->sAutoRoot,"crd0")==0)
    000055A2 D567                   MOV.L       L5266+46,R5; L815
    000055A4 54F4                   MOV.L       @(16,R15),R4
    000055A6 D362                   MOV.L       L5266+30,R3; __slow_strcmp1
    000055A8 430B                   JSR         @R3
    000055AA 7430                   ADD         #48,R4
    000055AC 2008                   TST         R0,R0
    000055AE 8901                   BT          L5267
    000055B0 A0AB                   BRA         L4667
    000055B2 0009                   NOP
    000055B4              L5267:                            
          EDIT.c  3820            PrintStr(11,iRow,"SD Card   "); 
    000055B4 D663                   MOV.L       L5266+50,R6; L1247
    000055B6 55F6                   MOV.L       @(24,R15),R5
    000055B8 D357                   MOV.L       L5266+6,R3 ; _PrintStr
    000055BA 430B                   JSR         @R3
    000055BC E40B                   MOV         #11,R4
          EDIT.c  3821          break;
    000055BE A0A4                   BRA         L4667
    000055C0 0009                   NOP
    000055C2              L2941:                           ; case label 
          EDIT.c  3822        
          EDIT.c  3823        //Auto name
          EDIT.c  3824        case CONFIGANAME:
          EDIT.c  3825          PrintStr(0,iRow,"Auto Name :");
    000055C2 D661                   MOV.L       L5266+54,R6; L1263




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  268


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000055C4 55F6                   MOV.L       @(24,R15),R5
    000055C6 D354                   MOV.L       L5266+6,R3 ; _PrintStr
    000055C8 430B                   JSR         @R3
    000055CA E400                   MOV         #0,R4
          EDIT.c  3826          PrintStr(11,iRow,"          ");
    000055CC D655                   MOV.L       L5266+18,R6; L832
    000055CE 55F6                   MOV.L       @(24,R15),R5
    000055D0 D351                   MOV.L       L5266+6,R3 ; _PrintStr
    000055D2 430B                   JSR         @R3
    000055D4 E40B                   MOV         #11,R4
          EDIT.c  3827          SetFont(FONTM);
    000055D6 D25D                   MOV.L       L5266+58,R2; _SetFont
    000055D8 420B                   JSR         @R2
    000055DA E402                   MOV         #2,R4
          EDIT.c  3828          if(strlen(sConfig->sAutoFile)>0)
    000055DC 54F4                   MOV.L       @(16,R15),R4
    000055DE D35C                   MOV.L       L5266+62,R3; _strlen
    000055E0 430B                   JSR         @R3
    000055E2 7435                   ADD         #53,R4
    000055E4 E200                   MOV         #0,R2
    000055E6 3026                   CMP/HI      R2,R0
    000055E8 8B02                   BF          L4688
          EDIT.c  3829            PrintStrXY(11*6,1+iRow*8,sConfig->sAutoFile);
    000055EA 56F4                   MOV.L       @(16,R15),R6
    000055EC A001                   BRA         L4987
    000055EE 7635                   ADD         #53,R6
    000055F0              L4688:                            
          EDIT.c  3830          else
          EDIT.c  3831            PrintStrXY(11*6,1+iRow*8,"(not set)");
    000055F0 D658                   MOV.L       L5266+66,R6; L1264
    000055F2              L4987:                            
    000055F2 55F6                   MOV.L       @(24,R15),R5
    000055F4 D358                   MOV.L       L5266+70,R3; _PrintStrXY
    000055F6 4508                   SHLL2       R5
    000055F8 4500                   SHLL        R5
    000055FA 7501                   ADD         #1,R5
    000055FC 430B                   JSR         @R3
    000055FE E442                   MOV         #66,R4
          EDIT.c  3832          SetFont(FONTL);
          EDIT.c  3833          break;
    00005600 A01F                   BRA         L4989
    00005602 0009                   NOP
    00005604              L2944:                           ; case label 
          EDIT.c  3834        
          EDIT.c  3835        //Auto folder
          EDIT.c  3836        case CONFIGAFOLDR:
          EDIT.c  3837          PrintStr(0,iRow,"Auto Foldr:");
    00005604 D655                   MOV.L       L5266+74,R6; L1265
    00005606 55F6                   MOV.L       @(24,R15),R5
    00005608 D343                   MOV.L       L5266+6,R3 ; _PrintStr
    0000560A 430B                   JSR         @R3
    0000560C E400                   MOV         #0,R4
          EDIT.c  3838          PrintStr(11,iRow,"          ");
    0000560E D645                   MOV.L       L5266+18,R6; L832
    00005610 55F6                   MOV.L       @(24,R15),R5
    00005612 D341                   MOV.L       L5266+6,R3 ; _PrintStr
    00005614 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  269


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005616 E40B                   MOV         #11,R4
          EDIT.c  3839          SetFont(FONTM);
    00005618 D24C                   MOV.L       L5266+58,R2; _SetFont
    0000561A 420B                   JSR         @R2
    0000561C E402                   MOV         #2,R4
          EDIT.c  3840          if(strlen(sConfig->sAutoFolder)>0)
    0000561E 54F4                   MOV.L       @(16,R15),R4
    00005620 D34B                   MOV.L       L5266+62,R3; _strlen
    00005622 430B                   JSR         @R3
    00005624 7442                   ADD         #66,R4
    00005626 E200                   MOV         #0,R2
    00005628 3026                   CMP/HI      R2,R0
    0000562A 8B02                   BF          L4690
          EDIT.c  3841            PrintStrXY(11*6,1+iRow*8,sConfig->sAutoFolder);
    0000562C 56F4                   MOV.L       @(16,R15),R6
    0000562E A001                   BRA         L4988
    00005630 7642                   ADD         #66,R6
    00005632              L4690:                            
          EDIT.c  3842          else
          EDIT.c  3843            PrintStrXY(11*6,1+iRow*8,"(not set)");
    00005632 D648                   MOV.L       L5266+66,R6; L1264
    00005634              L4988:                            
    00005634 55F6                   MOV.L       @(24,R15),R5
    00005636 4508                   SHLL2       R5
    00005638 D347                   MOV.L       L5266+70,R3; _PrintStrXY
    0000563A 4500                   SHLL        R5
    0000563C 7501                   ADD         #1,R5
    0000563E 430B                   JSR         @R3
    00005640 E442                   MOV         #66,R4
          EDIT.c  3844          SetFont(FONTL);
          EDIT.c  3845          break;
    00005642              L4989:                            
    00005642 D242                   MOV.L       L5266+58,R2; _SetFont
    00005644 420B                   JSR         @R2
    00005646 E403                   MOV         #3,R4
    00005648 A05F                   BRA         L4667
    0000564A 0009                   NOP
    0000564C              L2946:                           ; case label 
          EDIT.c  3846        
          EDIT.c  3847        //Text buffer
          EDIT.c  3848        case CONFIGTEXTB:
          EDIT.c  3849          PrintStr(0,iRow,"Text buff.:");
    0000564C D644                   MOV.L       L5266+78,R6; L1266
    0000564E 55F6                   MOV.L       @(24,R15),R5
    00005650 D331                   MOV.L       L5266+6,R3 ; _PrintStr
    00005652 430B                   JSR         @R3
    00005654 E400                   MOV         #0,R4
          EDIT.c  3850          PrintStr(11,iRow,"          ");
    00005656 D633                   MOV.L       L5266+18,R6; L832
    00005658 55F6                   MOV.L       @(24,R15),R5
    0000565A D32F                   MOV.L       L5266+6,R3 ; _PrintStr
    0000565C 430B                   JSR         @R3
    0000565E E40B                   MOV         #11,R4
          EDIT.c  3851          sprintf(sNumber,"%i",sConfig->iTextBuffer);
    00005660 52F4                   MOV.L       @(16,R15),R2
    00005662 E050                   MOV         #80,R0
    00005664 D13F                   MOV.L       L5266+82,R1; L1267




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  270


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005666 032E                   MOV.L       @(R0,R2),R3
    00005668 2F36                   MOV.L       R3,@-R15
    0000566A 2F16                   MOV.L       R1,@-R15
    0000566C D33E                   MOV.L       L5266+86,R3; _sprintf
    0000566E 64F3                   MOV         R15,R4
    00005670 430B                   JSR         @R3
    00005672 7408                   ADD         #8,R4
    00005674 7F08                   ADD         #8,R15
          EDIT.c  3852          PrintStr(11,iRow,sNumber);
          EDIT.c  3853          break;
    00005676 A044                   BRA         L4993
    00005678 66F3                   MOV         R15,R6
    0000567A              L2949:                           ; case label 
          EDIT.c  3854        
          EDIT.c  3855        //Clip buffer
          EDIT.c  3856        case CONFIGCLIPB:
          EDIT.c  3857          PrintStr(0,iRow,"Clip buff.:");
    0000567A D63C                   MOV.L       L5266+90,R6; L1268
    0000567C 55F6                   MOV.L       @(24,R15),R5
    0000567E D326                   MOV.L       L5266+6,R3 ; _PrintStr
    00005680 430B                   JSR         @R3
    00005682 E400                   MOV         #0,R4
          EDIT.c  3858          PrintStr(11,iRow,"          ");
    00005684 D627                   MOV.L       L5266+18,R6; L832
    00005686 55F6                   MOV.L       @(24,R15),R5
    00005688 D323                   MOV.L       L5266+6,R3 ; _PrintStr
    0000568A 430B                   JSR         @R3
    0000568C E40B                   MOV         #11,R4
          EDIT.c  3859          sprintf(sNumber,"%i",sConfig->iClipBuffer);
    0000568E E054                   MOV         #84,R0
    00005690 D134                   MOV.L       L5266+82,R1; L1267
    00005692 52F4                   MOV.L       @(16,R15),R2
    00005694 032E                   MOV.L       @(R0,R2),R3
    00005696 2F36                   MOV.L       R3,@-R15
    00005698 2F16                   MOV.L       R1,@-R15
    0000569A 64F3                   MOV         R15,R4
    0000569C D332                   MOV.L       L5266+86,R3; _sprintf
    0000569E 430B                   JSR         @R3
    000056A0 7408                   ADD         #8,R4
    000056A2 7F08                   ADD         #8,R15
          EDIT.c  3860          PrintStr(11,iRow,sNumber);
          EDIT.c  3861          break;
    000056A4 A02D                   BRA         L4993
    000056A6 66F3                   MOV         R15,R6
    000056A8              L2951:                           ; case label 
          EDIT.c  3862        
          EDIT.c  3863        //Maximum number of files per directory
          EDIT.c  3864        case CONFIGNFIL:
          EDIT.c  3865          PrintStr(0,iRow,"Files/Dir.:");
    000056A8 D631                   MOV.L       L5266+94,R6; L1269
    000056AA 55F6                   MOV.L       @(24,R15),R5
    000056AC D31A                   MOV.L       L5266+6,R3 ; _PrintStr
    000056AE 430B                   JSR         @R3
    000056B0 E400                   MOV         #0,R4
          EDIT.c  3866          PrintStr(11,iRow,"          ");
    000056B2 D61C                   MOV.L       L5266+18,R6; L832
    000056B4 55F6                   MOV.L       @(24,R15),R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  271


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000056B6 D318                   MOV.L       L5266+6,R3 ; _PrintStr
    000056B8 430B                   JSR         @R3
    000056BA E40B                   MOV         #11,R4
          EDIT.c  3867          sprintf(sNumber,"%i",sConfig->iMaxFiles);
    000056BC 52F4                   MOV.L       @(16,R15),R2
    000056BE E058                   MOV         #88,R0
    000056C0 D128                   MOV.L       L5266+82,R1; L1267
    000056C2 032E                   MOV.L       @(R0,R2),R3
    000056C4 2F36                   MOV.L       R3,@-R15
    000056C6 2F16                   MOV.L       R1,@-R15
    000056C8 D327                   MOV.L       L5266+86,R3; _sprintf
    000056CA 64F3                   MOV         R15,R4
    000056CC 430B                   JSR         @R3
    000056CE 7408                   ADD         #8,R4
    000056D0 7F08                   ADD         #8,R15
          EDIT.c  3868          PrintStr(11,iRow,sNumber);
          EDIT.c  3869          break;
    000056D2 A016                   BRA         L4993
    000056D4 66F3                   MOV         R15,R6
    000056D6              L2953:                           ; case label 
          EDIT.c  3870        
          EDIT.c  3871        //Maximum number of files per directory
          EDIT.c  3872        case CONFIGNFOL:
          EDIT.c  3873          PrintStr(0,iRow,"Foldr.Max.:");
    000056D6 D627                   MOV.L       L5266+98,R6; L1270
    000056D8 55F6                   MOV.L       @(24,R15),R5
    000056DA D30F                   MOV.L       L5266+6,R3 ; _PrintStr
    000056DC 430B                   JSR         @R3
    000056DE E400                   MOV         #0,R4
          EDIT.c  3874          PrintStr(11,iRow,"          ");
    000056E0 D610                   MOV.L       L5266+18,R6; L832
    000056E2 55F6                   MOV.L       @(24,R15),R5
    000056E4 D30C                   MOV.L       L5266+6,R3 ; _PrintStr
    000056E6 430B                   JSR         @R3
    000056E8 E40B                   MOV         #11,R4
          EDIT.c  3875          sprintf(sNumber,"%i",sConfig->iMaxFolders);
    000056EA E05C                   MOV         #92,R0
    000056EC D11D                   MOV.L       L5266+82,R1; L1267
    000056EE 52F4                   MOV.L       @(16,R15),R2
    000056F0 032E                   MOV.L       @(R0,R2),R3
    000056F2 2F36                   MOV.L       R3,@-R15
    000056F4 2F16                   MOV.L       R1,@-R15
    000056F6 64F3                   MOV         R15,R4
    000056F8 D31B                   MOV.L       L5266+86,R3; _sprintf
    000056FA 430B                   JSR         @R3
    000056FC 7408                   ADD         #8,R4
    000056FE 7F08                   ADD         #8,R15
          EDIT.c  3876          PrintStr(11,iRow,sNumber);
    00005700 66F3                   MOV         R15,R6
          EDIT.c  3877          break;
    00005702              L4993:                            
    00005702 55F6                   MOV.L       @(24,R15),R5
    00005704 D304                   MOV.L       L5266+6,R3 ; _PrintStr
    00005706 430B                   JSR         @R3
    00005708 E40B                   MOV         #11,R4
    0000570A              L4667:                            
          EDIT.c  3878        




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  272


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3879      }
          EDIT.c  3880    
          EDIT.c  3881    }
    0000570A 7F1C                   ADD         #28,R15
    0000570C 4F26                   LDS.L       @R15+,PR
    0000570E 000B                   RTS
    00005710 0009                   NOP
    00005712              L5266:                            
    00005712 0000                   .DATA.W     0
    00005714 <00000000>             .DATA.L     L1258
    00005718 <00000000>             .DATA.L     _PrintStr
    0000571C <00000000>             .DATA.L     L1260
    00005720 <00000000>             .DATA.L     L1261
    00005724 <00000000>             .DATA.L     L832
    00005728 <00000000>             .DATA.L     L1262
    0000572C <00000000>             .DATA.L     L620
    00005730 <00000000>             .DATA.L     __slow_strcmp1
    00005734 <00000000>             .DATA.L     L1245
    00005738 <00000000>             .DATA.L     L813
    0000573C <00000000>             .DATA.L     L1246
    00005740 <00000000>             .DATA.L     L815
    00005744 <00000000>             .DATA.L     L1247
    00005748 <00000000>             .DATA.L     L1263
    0000574C <00000000>             .DATA.L     _SetFont
    00005750 <00000000>             .DATA.L     _strlen
    00005754 <00000000>             .DATA.L     L1264
    00005758 <00000000>             .DATA.L     _PrintStrXY
    0000575C <00000000>             .DATA.L     L1265
    00005760 <00000000>             .DATA.L     L1266
    00005764 <00000000>             .DATA.L     L1267
    00005768 <00000000>             .DATA.L     _sprintf
    0000576C <00000000>             .DATA.L     L1268
    00005770 <00000000>             .DATA.L     L1269
    00005774 <00000000>             .DATA.L     L1270
          EDIT.c  3882    
          EDIT.c  3883    // ----------------------------------------------------------------
          EDIT.c  3884    // Import Configuration
          EDIT.c  3885    void ConfigImport(struct Config *sConfig)
    00005778              _ConfigImport:                   ; function: ConfigImport
                                                           ; frame size=12
                                                           ; used runtime library name:
                                                           ; __slow_strcpy, __slow_strcmp1
    00005778 2FE6                   MOV.L       R14,@-R15
    0000577A 6E43                   MOV         R4,R14
          EDIT.c  3886    {
          EDIT.c  3887      //Variables
          EDIT.c  3888      int i;
          EDIT.c  3889      int iHandle;
          EDIT.c  3890      
          EDIT.c  3891      //Open file
          EDIT.c  3892      iHandle=Bfile_OpenMainMemory(CONFIGFILE);
    0000577C D345                   MOV.L       L5268+12,R3; _Bfile_OpenMainMemory
    0000577E 2FD6                   MOV.L       R13,@-R15
    00005780 4F22                   STS.L       PR,@-R15
    00005782 D443                   MOV.L       L5268+8,R4 ; L851
    00005784 430B                   JSR         @R3
    00005786 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  273


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005788 6D03                   MOV         R0,R13
          EDIT.c  3893      if(iHandle>=0)
    0000578A 4D11                   CMP/PZ      R13
    0000578C 8B10                   BF          L4694
          EDIT.c  3894      {
          EDIT.c  3895        Bfile_ReadFile(iHandle,sConfig,sizeof(struct Config),0);
    0000578E E700                   MOV         #0,R7
    00005790 967A                   MOV.W       L5268,R6   ; H'0100
    00005792 65E3                   MOV         R14,R5
    00005794 D340                   MOV.L       L5268+16,R3; _Bfile_ReadFile
    00005796 430B                   JSR         @R3
    00005798 64D3                   MOV         R13,R4
          EDIT.c  3896        Bfile_CloseFile(iHandle);
    0000579A D240                   MOV.L       L5268+20,R2; _Bfile_CloseFile
    0000579C 420B                   JSR         @R2
    0000579E 64D3                   MOV         R13,R4
          EDIT.c  3897      }
          EDIT.c  3898      
          EDIT.c  3899      //Initialize configuration on error
          EDIT.c  3900      if(iHandle<0 || strcmp(sConfig->sVersion,EDITVERSION)!=0)
    000057A0 4D11                   CMP/PZ      R13
    000057A2 8B05                   BF          L4694
    000057A4 D53E                   MOV.L       L5268+24,R5; L1276
    000057A6 D23F                   MOV.L       L5268+28,R2; __slow_strcmp1
    000057A8 420B                   JSR         @R2
    000057AA 64E3                   MOV         R14,R4
    000057AC 2008                   TST         R0,R0
    000057AE 8945                   BT          L4693
    000057B0              L4694:                            
          EDIT.c  3901      {
          EDIT.c  3902        strcpy(sConfig->sVersion,EDITVERSION);
    000057B0 D13B                   MOV.L       L5268+24,R1; L1276
    000057B2 D23D                   MOV.L       L5268+32,R2; __slow_strcpy
    000057B4 420B                   JSR         @R2
    000057B6 60E3                   MOV         R14,R0
          EDIT.c  3903        strcpy(sConfig->sDefRoot,"main");
    000057B8 D13C                   MOV.L       L5268+36,R1; L620
    000057BA 60E3                   MOV         R14,R0
    000057BC D33A                   MOV.L       L5268+32,R3; __slow_strcpy
    000057BE 430B                   JSR         @R3
    000057C0 701C                   ADD         #28,R0
          EDIT.c  3904        sConfig->iTrySD=1;
    000057C2 E401                   MOV         #1,R4
          EDIT.c  3905        sConfig->iHideSysFiles=1;
          EDIT.c  3906        sConfig->iNLMode=NEWLMODECRLF;
          EDIT.c  3907        sConfig->iWordWrap=1;
          EDIT.c  3908        sConfig->iDispFree=1;
          EDIT.c  3909        sConfig->iFont=FONTL;
          EDIT.c  3910        sConfig->iInfo=INFOBARCURSOR;
          EDIT.c  3911        sConfig->iAutoOpen=0;
          EDIT.c  3912        strcpy(sConfig->sAutoRoot,"main");
    000057C4 D139                   MOV.L       L5268+36,R1; L620
    000057C6 60E3                   MOV         R14,R0
    000057C8 1E42                   MOV.L       R4,@(8,R14)
    000057CA E203                   MOV         #3,R2
    000057CC 1E43                   MOV.L       R4,@(12,R14)
    000057CE E302                   MOV         #2,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  274


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000057D0 1E44                   MOV.L       R4,@(16,R14)
    000057D2 E500                   MOV         #0,R5
    000057D4 1E45                   MOV.L       R4,@(20,R14)
    000057D6 1E46                   MOV.L       R4,@(24,R14)
    000057D8 1E29                   MOV.L       R2,@(36,R14)
    000057DA 1E3A                   MOV.L       R3,@(40,R14)
    000057DC 1E5B                   MOV.L       R5,@(44,R14)
    000057DE D232                   MOV.L       L5268+32,R2; __slow_strcpy
    000057E0 420B                   JSR         @R2
    000057E2 7030                   ADD         #48,R0
          EDIT.c  3913        strcpy(sConfig->sAutoFile,"");
    000057E4 D132                   MOV.L       L5268+40,R1; L500
    000057E6 60E3                   MOV         R14,R0
    000057E8 D32F                   MOV.L       L5268+32,R3; __slow_strcpy
    000057EA 430B                   JSR         @R3
    000057EC 7035                   ADD         #53,R0
          EDIT.c  3914        strcpy(sConfig->sAutoFolder,"");
    000057EE 60E3                   MOV         R14,R0
    000057F0 D22D                   MOV.L       L5268+32,R2; __slow_strcpy
    000057F2 D12F                   MOV.L       L5268+40,R1; L500
    000057F4 420B                   JSR         @R2
    000057F6 7042                   ADD         #66,R0
          EDIT.c  3915        sConfig->iTextBuffer=TXTMINSIZE;
    000057F8 9347                   MOV.W       L5268+2,R3 ; H'1000
    000057FA E050                   MOV         #80,R0
          EDIT.c  3916        sConfig->iClipBuffer=TXTMINCLIP;
    000057FC 9246                   MOV.W       L5268+4,R2 ; H'0400
          EDIT.c  3917        sConfig->iMaxFiles=MINFILES;
          EDIT.c  3918        sConfig->iMaxFolders=MINFOLDERS;
          EDIT.c  3919        for(i=0;i<MAXCHARMAP;i++){
    000057FE 6653                   MOV         R5,R6
    00005800 0E36                   MOV.L       R3,@(R0,R14)
    00005802 EDFF                   MOV         #-1,R13
    00005804 E054                   MOV         #84,R0
    00005806 E320                   MOV         #32,R3
    00005808 0E26                   MOV.L       R2,@(R0,R14)
    0000580A E714                   MOV         #20,R7
    0000580C E058                   MOV         #88,R0
    0000580E E210                   MOV         #16,R2
    00005810 0E36                   MOV.L       R3,@(R0,R14)
    00005812 6453                   MOV         R5,R4
    00005814 E05C                   MOV         #92,R0
    00005816 0E26                   MOV.L       R2,@(R0,R14)
    00005818              L4695:                            
          EDIT.c  3920          sConfig->sCharMap[i].iKey=-1;
    00005818 63E3                   MOV         R14,R3
    0000581A 7360                   ADD         #96,R3
    0000581C 334C                   ADD         R4,R3
          EDIT.c  3921          sConfig->sCharMap[i].cAscii=0;
    0000581E 62E3                   MOV         R14,R2
    00005820 23D2                   MOV.L       R13,@R3
    00005822 6053                   MOV         R5,R0
    00005824 7260                   ADD         #96,R2
    00005826 324C                   ADD         R4,R2
    00005828 8024                   MOV.B       R0,@(4,R2)
    0000582A 7601                   ADD         #1,R6
    0000582C 3673                   CMP/GE      R7,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  275


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000582E 8FF3                   BF/S        L4695
    00005830 7408                   ADD         #8,R4
          EDIT.c  3922        }  
          EDIT.c  3923        ConfigExport(sConfig);
    00005832 64E3                   MOV         R14,R4
    00005834 4F26                   LDS.L       @R15+,PR
    00005836 6DF6                   MOV.L       @R15+,R13
    00005838 A004                   BRA         _ConfigExport
    0000583A 6EF6                   MOV.L       @R15+,R14
    0000583C              L4693:                            
          EDIT.c  3924      }
          EDIT.c  3925      
          EDIT.c  3926    }
    0000583C 4F26                   LDS.L       @R15+,PR
    0000583E 6DF6                   MOV.L       @R15+,R13
    00005840 000B                   RTS
    00005842 6EF6                   MOV.L       @R15+,R14
          EDIT.c  3927    
          EDIT.c  3928    // ----------------------------------------------------------------
          EDIT.c  3929    // Export configuration
          EDIT.c  3930    void ConfigExport(struct Config *sConfig)
    00005844              _ConfigExport:                   ; function: ConfigExport
                                                           ; frame size=12
    00005844 2FE6                   MOV.L       R14,@-R15
    00005846 4F22                   STS.L       PR,@-R15
          EDIT.c  3931    {
          EDIT.c  3932      //Variables
          EDIT.c  3933      int iHandle;
          EDIT.c  3934      
          EDIT.c  3935      //Delete previous configuration file
          EDIT.c  3936      Bfile_DeleteMainMemory(CONFIGFILE);
    00005848 DE11                   MOV.L       L5268+8,R14; L851
    0000584A 7FFC                   ADD         #-4,R15
    0000584C D319                   MOV.L       L5268+44,R3; _Bfile_DeleteMainMemory
    0000584E 2F42                   MOV.L       R4,@R15
    00005850 430B                   JSR         @R3
    00005852 64E3                   MOV         R14,R4
          EDIT.c  3937      
          EDIT.c  3938      //Create new configuration file
          EDIT.c  3939      if(Bfile_CreateMainMemory(CONFIGFILE)==0)
    00005854 D218                   MOV.L       L5268+48,R2; _Bfile_CreateMainMemory
    00005856 420B                   JSR         @R2
    00005858 64E3                   MOV         R14,R4
    0000585A 2008                   TST         R0,R0
    0000585C 8B10                   BF          L4696
          EDIT.c  3940      {
          EDIT.c  3941        iHandle=Bfile_OpenMainMemory(CONFIGFILE);
    0000585E D20D                   MOV.L       L5268+12,R2; _Bfile_OpenMainMemory
    00005860 420B                   JSR         @R2
    00005862 64E3                   MOV         R14,R4
    00005864 6E03                   MOV         R0,R14
          EDIT.c  3942        if(iHandle>=0)
    00005866 4E11                   CMP/PZ      R14
    00005868 8B0A                   BF          L4696
          EDIT.c  3943        {
          EDIT.c  3944          Bfile_WriteFile(iHandle,sConfig,sizeof(struct Config));
    0000586A 960D                   MOV.W       L5268,R6   ; H'0100




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  276


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000586C 65F2                   MOV.L       @R15,R5
    0000586E D313                   MOV.L       L5268+52,R3; _Bfile_WriteFile
    00005870 430B                   JSR         @R3
    00005872 64E3                   MOV         R14,R4
          EDIT.c  3945          Bfile_CloseFile(iHandle);
    00005874 D209                   MOV.L       L5268+20,R2; _Bfile_CloseFile
    00005876 64E3                   MOV         R14,R4
    00005878 7F04                   ADD         #4,R15
    0000587A 4F26                   LDS.L       @R15+,PR
    0000587C 422B                   JMP         @R2
    0000587E 6EF6                   MOV.L       @R15+,R14
    00005880              L4696:                            
          EDIT.c  3946        }
          EDIT.c  3947      }
          EDIT.c  3948      
          EDIT.c  3949    }
    00005880 7F04                   ADD         #4,R15
    00005882 4F26                   LDS.L       @R15+,PR
    00005884 000B                   RTS
    00005886 6EF6                   MOV.L       @R15+,R14
    00005888              L5268:                            
    00005888 0100                   .DATA.W     H'0100
    0000588A 1000                   .DATA.W     H'1000
    0000588C 0400                   .DATA.W     H'0400
    0000588E 0000                   .DATA.W     0
    00005890 <00000000>             .DATA.L     L851
    00005894 <00000000>             .DATA.L     _Bfile_OpenMainMemory
    00005898 <00000000>             .DATA.L     _Bfile_ReadFile
    0000589C <00000000>             .DATA.L     _Bfile_CloseFile
    000058A0 <00000000>             .DATA.L     L1276
    000058A4 <00000000>             .DATA.L     __slow_strcmp1
    000058A8 <00000000>             .DATA.L     __slow_strcpy
    000058AC <00000000>             .DATA.L     L620
    000058B0 <00000000>             .DATA.L     L500
    000058B4 <00000000>             .DATA.L     _Bfile_DeleteMainMemory
    000058B8 <00000000>             .DATA.L     _Bfile_CreateMainMemory
    000058BC <00000000>             .DATA.L     _Bfile_WriteFile
          EDIT.c  3950    
          EDIT.c  3951    // ----------------------------------------------------------------
          EDIT.c  3952    // Check folder exists
          EDIT.c  3953    int FolderExist(char *sRoot, char *sFolder,struct Config *sConfig)
    000058C0              _FolderExist:                    ; function: FolderExist
                                                           ; frame size=156
                                                           ; used runtime library name:
                                                           ; __slow_strcmp1
    000058C0 2FE6                   MOV.L       R14,@-R15
    000058C2 2FD6                   MOV.L       R13,@-R15
    000058C4 2FC6                   MOV.L       R12,@-R15
          EDIT.c  3954    {
          EDIT.c  3955      //Variables
          EDIT.c  3956      int i;
          EDIT.c  3957      int iHandle;
          EDIT.c  3958      int iFolders;
          EDIT.c  3959      //int iFiles;
          EDIT.c  3960      int iFound=0;
          EDIT.c  3961      FONTCHARACTER sFont[MAXPATH];
          EDIT.c  3962      




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  277


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3963      //Check folder (Main memory)
          EDIT.c  3964      if(strcmp(sRoot,"main")==0)
    000058C6 ED01                   MOV         #1,R13
    000058C8 D33A                   MOV.L       L5269+6,R3 ; __slow_strcmp1
    000058CA 2FB6                   MOV.L       R11,@-R15
    000058CC 2FA6                   MOV.L       R10,@-R15
    000058CE EB00                   MOV         #0,R11
    000058D0 2F96                   MOV.L       R9,@-R15
    000058D2 6A53                   MOV         R5,R10
    000058D4 4F22                   STS.L       PR,@-R15
    000058D6 6EB3                   MOV         R11,R14
    000058D8 D535                   MOV.L       L5269+2,R5 ; L620
    000058DA 7F90                   ADD         #-112,R15
    000058DC 1F41                   MOV.L       R4,@(4,R15)
    000058DE 1F62                   MOV.L       R6,@(8,R15)
    000058E0 430B                   JSR         @R3
    000058E2 54F1                   MOV.L       @(4,R15),R4
    000058E4 2008                   TST         R0,R0
    000058E6 8B08                   BF          L4698
          EDIT.c  3965      {
          EDIT.c  3966        if(MainDirectory(CHECKENTRY,"",sFolder)==0) iFound=1;
    000058E8 D533                   MOV.L       L5269+10,R5; L500
    000058EA 66A3                   MOV         R10,R6
    000058EC D333                   MOV.L       L5269+14,R3; _MainDirectory
    000058EE 430B                   JSR         @R3
    000058F0 E402                   MOV         #2,R4
    000058F2 2008                   TST         R0,R0
    000058F4 8B28                   BF          L4700
    000058F6 A027                   BRA         L4700
    000058F8 6ED3                   MOV         R13,R14
    000058FA              L4698:                            
          EDIT.c  3967      }
          EDIT.c  3968      
          EDIT.c  3969      //Check folder (Storage memory & SD Card)
          EDIT.c  3970      else
          EDIT.c  3971      {
          EDIT.c  3972      
          EDIT.c  3973        //Read root directory
          EDIT.c  3974        ReadDirectory(sRoot,"",_sFolders,&iFolders,sConfig->iMaxFolders,0,1,0); 
    000058FA E05C                   MOV         #92,R0
    000058FC D52E                   MOV.L       L5269+10,R5; L500
    000058FE 2FB6                   MOV.L       R11,@-R15
    00005900 2FD6                   MOV.L       R13,@-R15
    00005902 2FB6                   MOV.L       R11,@-R15
    00005904 52F5                   MOV.L       @(20,R15),R2
    00005906 032E                   MOV.L       @(R0,R2),R3
    00005908 D22E                   MOV.L       L5269+22,R2; _ReadDirectory
    0000590A 2F36                   MOV.L       R3,@-R15
    0000590C D32C                   MOV.L       L5269+18,R3; __sFolders
    0000590E 67F3                   MOV         R15,R7
    00005910 6632                   MOV.L       @R3,R6
    00005912 7710                   ADD         #16,R7
    00005914 420B                   JSR         @R2
    00005916 54F5                   MOV.L       @(20,R15),R4
          EDIT.c  3975        //ReadDirectory(sRoot,sFolder,_sFiles,&iFiles,sConfig->iMaxFiles,1,0,0); 
          EDIT.c  3976      
          EDIT.c  3977        //Check if folder exists




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  278


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  3978        iFound=0;
          EDIT.c  3979        for(i=0;i<iFolders;i++)
    00005918 D92B                   MOV.L       L5269+26,R9; __sFiles
    0000591A 7F10                   ADD         #16,R15
    0000591C 6EB3                   MOV         R11,R14
    0000591E A010                   BRA         L4701
    00005920 6CB3                   MOV         R11,R12
    00005922              L4702:                            
          EDIT.c  3980        {
          EDIT.c  3981          if(strcmp(sFolder,_sFiles[i].sCName)==0) 
    00005922 65C3                   MOV         R12,R5
    00005924 6292                   MOV.L       @R9,R2
    00005926 63C3                   MOV         R12,R3
    00005928 4500                   SHLL        R5
    0000592A 353C                   ADD         R3,R5
    0000592C D321                   MOV.L       L5269+6,R3 ; __slow_strcmp1
    0000592E 4508                   SHLL2       R5
    00005930 4500                   SHLL        R5
    00005932 352C                   ADD         R2,R5
    00005934 430B                   JSR         @R3
    00005936 64A3                   MOV         R10,R4
    00005938 2008                   TST         R0,R0
    0000593A 8B01                   BF          L4703
          EDIT.c  3982          //&& _sFiles[i].iType==DT_DIRECTORY)
          EDIT.c  3983          {
          EDIT.c  3984            iFound=1; 
          EDIT.c  3985            break;
    0000593C A004                   BRA         L4700
    0000593E 6ED3                   MOV         R13,R14
    00005940              L4703:                            
    00005940 7C01                   ADD         #1,R12
    00005942              L4701:                            
    00005942 62F2                   MOV.L       @R15,R2
    00005944 3C23                   CMP/GE      R2,R12
    00005946 8BEC                   BF          L4702
    00005948              L4700:                            
          EDIT.c  3986          }
          EDIT.c  3987        }
          EDIT.c  3988      }
          EDIT.c  3989      
          EDIT.c  3990      //Return code
          EDIT.c  3991      if(iFound==1)
    00005948 60E3                   MOV         R14,R0
    0000594A 8801                   CMP/EQ      #1,R0
    0000594C 0029                   MOVT        R0
          EDIT.c  3992        return(1);
          EDIT.c  3993      else
          EDIT.c  3994        return(0);
          EDIT.c  3995    }
    0000594E 7F70                   ADD         #112,R15
    00005950 4F26                   LDS.L       @R15+,PR
    00005952 69F6                   MOV.L       @R15+,R9
    00005954 6AF6                   MOV.L       @R15+,R10
    00005956 6BF6                   MOV.L       @R15+,R11
    00005958 6CF6                   MOV.L       @R15+,R12
    0000595A 6DF6                   MOV.L       @R15+,R13
    0000595C 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  279


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000595E 6EF6                   MOV.L       @R15+,R14
          EDIT.c  3996    
          EDIT.c  3997    // ----------------------------------------------------------------
          EDIT.c  3998    // Check file exists
          EDIT.c  3999    int FileExist(char *sRoot, char *sFolder, char *sFile)
    00005960              _FileExist:                      ; function: FileExist
                                                           ; frame size=120
                                                           ; used runtime library name:
                                                           ; __slow_strcmp1
    00005960 2FE6                   MOV.L       R14,@-R15
    00005962 4F22                   STS.L       PR,@-R15
          EDIT.c  4000    {
          EDIT.c  4001      //Variables
          EDIT.c  4002      int iHandle;
          EDIT.c  4003      FONTCHARACTER sFont[MAXPATH];
          EDIT.c  4004      
          EDIT.c  4005      //Open file
          EDIT.c  4006      if(strcmp(sRoot,"main")!=0)
    00005964 D313                   MOV.L       L5269+6,R3 ; __slow_strcmp1
    00005966 7F90                   ADD         #-112,R15
    00005968 1F41                   MOV.L       R4,@(4,R15)
    0000596A 1F52                   MOV.L       R5,@(8,R15)
    0000596C 2F62                   MOV.L       R6,@R15
    0000596E D510                   MOV.L       L5269+2,R5 ; L620
    00005970 430B                   JSR         @R3
    00005972 54F1                   MOV.L       @(4,R15),R4
    00005974 2008                   TST         R0,R0
    00005976 890D                   BT          L4708
          EDIT.c  4007      {
          EDIT.c  4008        FilePath(sRoot,sFolder,sFile,sFont);
    00005978 66F2                   MOV.L       @R15,R6
    0000597A 67F3                   MOV         R15,R7
    0000597C 55F2                   MOV.L       @(8,R15),R5
    0000597E 770C                   ADD         #12,R7
    00005980 D312                   MOV.L       L5269+30,R3; _FilePath
    00005982 430B                   JSR         @R3
    00005984 54F1                   MOV.L       @(4,R15),R4
          EDIT.c  4009        iHandle=Bfile_OpenFile(sFont,_OPENMODE_READ);
    00005986 E501                   MOV         #1,R5
    00005988 D211                   MOV.L       L5269+34,R2; _Bfile_OpenFile
    0000598A 64F3                   MOV         R15,R4
    0000598C 420B                   JSR         @R2
    0000598E 740C                   ADD         #12,R4
    00005990 A003                   BRA         L4995
    00005992 0009                   NOP
    00005994              L4708:                            
          EDIT.c  4010      }
          EDIT.c  4011      else
          EDIT.c  4012      {
          EDIT.c  4013        iHandle=Bfile_OpenMainMemory(sFile);
    00005994 D30F                   MOV.L       L5269+38,R3; _Bfile_OpenMainMemory
    00005996 430B                   JSR         @R3
    00005998 64F2                   MOV.L       @R15,R4
    0000599A              L4995:                            
    0000599A 6E03                   MOV         R0,R14
          EDIT.c  4014      }
          EDIT.c  4015      Bfile_CloseFile(iHandle);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  280


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000599C D20E                   MOV.L       L5269+42,R2; _Bfile_CloseFile
    0000599E 420B                   JSR         @R2
    000059A0 6403                   MOV         R0,R4
          EDIT.c  4016      
          EDIT.c  4017      //Return code
          EDIT.c  4018      if(iHandle<0)
    000059A2 4E11                   CMP/PZ      R14
    000059A4 0029                   MOVT        R0
          EDIT.c  4019        return(0);
          EDIT.c  4020      else
          EDIT.c  4021        return(1);
          EDIT.c  4022    }
    000059A6 7F70                   ADD         #112,R15
    000059A8 4F26                   LDS.L       @R15+,PR
    000059AA 000B                   RTS
    000059AC 6EF6                   MOV.L       @R15+,R14
    000059AE              L5269:                            
    000059AE 0000                   .DATA.W     0
    000059B0 <00000000>             .DATA.L     L620
    000059B4 <00000000>             .DATA.L     __slow_strcmp1
    000059B8 <00000000>             .DATA.L     L500
    000059BC <00000000>             .DATA.L     _MainDirectory
    000059C0 <00000000>             .DATA.L     __sFolders
    000059C4 <00000000>             .DATA.L     _ReadDirectory
    000059C8 <00000000>             .DATA.L     __sFiles
    000059CC <00000000>             .DATA.L     _FilePath
    000059D0 <00000000>             .DATA.L     _Bfile_OpenFile
    000059D4 <00000000>             .DATA.L     _Bfile_OpenMainMemory
    000059D8 <00000000>             .DATA.L     _Bfile_CloseFile
          EDIT.c  4023    
          EDIT.c  4024    // ----------------------------------------------------------------
          EDIT.c  4025    // Read file
          EDIT.c  4026    int ReadFile(char *sRoot, char *sFolder, char *sFile,
    000059DC              _ReadFile:                       ; function: ReadFile
                                                           ; frame size=148
                                                           ; used runtime library name:
                                                           ; __slow_strcmp1
    000059DC 4F22                   STS.L       PR,@-R15
    000059DE 907D                   MOV.W       L5270,R0   ; H'FF78
    000059E0 937D                   MOV.W       L5270+2,R3 ; H'0084
    000059E2 3F0C                   ADD         R0,R15
    000059E4 927C                   MOV.W       L5270+4,R2 ; H'0080
    000059E6 33FC                   ADD         R15,R3
    000059E8 2342                   MOV.L       R4,@R3
    000059EA 32FC                   ADD         R15,R2
    000059EC 2252                   MOV.L       R5,@R2
    000059EE 63F3                   MOV         R15,R3
          EDIT.c  4027                 char *sText, int *iBinary)
          EDIT.c  4028    {
          EDIT.c  4029      //Variables
          EDIT.c  4030      int i;
          EDIT.c  4031      int iHandle;
          EDIT.c  4032      int iError;
          EDIT.c  4033      int iLen;
          EDIT.c  4034      int iSize;
          EDIT.c  4035      FONTCHARACTER sFont[MAXPATH];
          EDIT.c  4036      




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  281


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4037      //Message
          EDIT.c  4038      PopupMessage(0,"Reading file...",NULL,NULL,NULL,NULL);
    000059F0 D53C                   MOV.L       L5270+8,R5 ; L1317
    000059F2 62F3                   MOV         R15,R2
    000059F4 737C                   ADD         #124,R3
    000059F6 7278                   ADD         #120,R2
    000059F8 2362                   MOV.L       R6,@R3
    000059FA E300                   MOV         #0,R3
    000059FC 2272                   MOV.L       R7,@R2
    000059FE 6633                   MOV         R3,R6
    00005A00 2F36                   MOV.L       R3,@-R15
    00005A02 6733                   MOV         R3,R7
    00005A04 2F36                   MOV.L       R3,@-R15
    00005A06 B51B                   BSR         _PopupMessage
    00005A08 6433                   MOV         R3,R4
    00005A0A 7F08                   ADD         #8,R15
          EDIT.c  4039      
          EDIT.c  4040      //Open file
          EDIT.c  4041      if(strcmp(sRoot,"main")!=0)
    00005A0C D536                   MOV.L       L5270+12,R5; L620
    00005A0E 9066                   MOV.W       L5270+2,R0 ; H'0084
    00005A10 D336                   MOV.L       L5270+16,R3; __slow_strcmp1
    00005A12 430B                   JSR         @R3
    00005A14 04FE                   MOV.L       @(R0,R15),R4
    00005A16 2008                   TST         R0,R0
    00005A18 890E                   BT          L4713
          EDIT.c  4042      {
          EDIT.c  4043        FilePath(sRoot,sFolder,sFile,sFont);
    00005A1A 67F3                   MOV         R15,R7
    00005A1C D334                   MOV.L       L5270+20,R3; _FilePath
    00005A1E E07C                   MOV         #124,R0
    00005A20 06FE                   MOV.L       @(R0,R15),R6
    00005A22 905D                   MOV.W       L5270+4,R0 ; H'0080
    00005A24 05FE                   MOV.L       @(R0,R15),R5
    00005A26 905A                   MOV.W       L5270+2,R0 ; H'0084
    00005A28 430B                   JSR         @R3
    00005A2A 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4044        iHandle=Bfile_OpenFile(sFont,_OPENMODE_READ);
    00005A2C D231                   MOV.L       L5270+24,R2; _Bfile_OpenFile
    00005A2E E501                   MOV         #1,R5
    00005A30 420B                   JSR         @R2
    00005A32 64F3                   MOV         R15,R4
    00005A34 A004                   BRA         L4996
    00005A36 0009                   NOP
    00005A38              L4713:                            
          EDIT.c  4045      }
          EDIT.c  4046      else
          EDIT.c  4047      {
          EDIT.c  4048        iHandle=Bfile_OpenMainMemory(sFile);
    00005A38 D32F                   MOV.L       L5270+28,R3; _Bfile_OpenMainMemory
    00005A3A E07C                   MOV         #124,R0
    00005A3C 430B                   JSR         @R3
    00005A3E 04FE                   MOV.L       @(R0,R15),R4
    00005A40              L4996:                            
    00005A40 61F3                   MOV         R15,R1
    00005A42 7170                   ADD         #112,R1
          EDIT.c  4049      }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  282


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4050      if(iHandle<0) return(0);
    00005A44 6303                   MOV         R0,R3
    00005A46 4311                   CMP/PZ      R3
    00005A48 8F43                   BF/S        L4997
    00005A4A 2102                   MOV.L       R0,@R1
          EDIT.c  4051      
          EDIT.c  4052      //Read file
          EDIT.c  4053      iSize=Bfile_GetFileSize(iHandle);
    00005A4C D32B                   MOV.L       L5270+32,R3; _Bfile_GetFileSize
    00005A4E E070                   MOV         #112,R0
    00005A50 430B                   JSR         @R3
    00005A52 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4054      if(strcmp(sRoot,"main")==0) iSize-=MAINHEADER;
    00005A54 D524                   MOV.L       L5270+12,R5; L620
    00005A56 61F3                   MOV         R15,R1
    00005A58 D324                   MOV.L       L5270+16,R3; __slow_strcmp1
    00005A5A 7164                   ADD         #100,R1
    00005A5C 2102                   MOV.L       R0,@R1
    00005A5E 903E                   MOV.W       L5270+2,R0 ; H'0084
    00005A60 430B                   JSR         @R3
    00005A62 04FE                   MOV.L       @(R0,R15),R4
    00005A64 2008                   TST         R0,R0
    00005A66 8B04                   BF          L4717
    00005A68 E064                   MOV         #100,R0
    00005A6A 03FE                   MOV.L       @(R0,R15),R3
    00005A6C 73EC                   ADD         #-20,R3
    00005A6E E064                   MOV         #100,R0
    00005A70 0F36                   MOV.L       R3,@(R0,R15)
    00005A72              L4717:                            
          EDIT.c  4055      if(iSize>_iTextSize-1)
    00005A72 E064                   MOV         #100,R0
    00005A74 D122                   MOV.L       L5270+36,R1; __iTextSize
    00005A76 6212                   MOV.L       @R1,R2
    00005A78 03FE                   MOV.L       @(R0,R15),R3
    00005A7A 72FF                   ADD         #-1,R2
    00005A7C 3327                   CMP/GT      R2,R3
    00005A7E 8B0C                   BF          L4718
          EDIT.c  4056      { 
          EDIT.c  4057        iSize=_iTextSize-1;
    00005A80 6312                   MOV.L       @R1,R3
    00005A82 E064                   MOV         #100,R0
          EDIT.c  4058        PopupMessage(1,"File too big.","Not loaded","completely!",NULL,NULL);
    00005A84 D71F                   MOV.L       L5270+40,R7; L1323
    00005A86 E200                   MOV         #0,R2
    00005A88 D61F                   MOV.L       L5270+44,R6; L1322
    00005A8A 73FF                   ADD         #-1,R3
    00005A8C D51F                   MOV.L       L5270+48,R5; L1321
    00005A8E 0F36                   MOV.L       R3,@(R0,R15)
    00005A90 2F26                   MOV.L       R2,@-R15
    00005A92 2F26                   MOV.L       R2,@-R15
    00005A94 B4D4                   BSR         _PopupMessage
    00005A96 E401                   MOV         #1,R4
    00005A98 7F08                   ADD         #8,R15
    00005A9A              L4718:                            
          EDIT.c  4059      }
          EDIT.c  4060      iError=Bfile_ReadFile(iHandle,sText,iSize,0);
    00005A9A E700                   MOV         #0,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  283


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005A9C D31C                   MOV.L       L5270+52,R3; _Bfile_ReadFile
    00005A9E E064                   MOV         #100,R0
    00005AA0 06FE                   MOV.L       @(R0,R15),R6
    00005AA2 E078                   MOV         #120,R0
    00005AA4 05FE                   MOV.L       @(R0,R15),R5
    00005AA6 E070                   MOV         #112,R0
    00005AA8 430B                   JSR         @R3
    00005AAA 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4061      Bfile_CloseFile(iHandle);
    00005AAC D319                   MOV.L       L5270+56,R3; _Bfile_CloseFile
    00005AAE 61F3                   MOV         R15,R1
    00005AB0 716C                   ADD         #108,R1
    00005AB2 2102                   MOV.L       R0,@R1
    00005AB4 E070                   MOV         #112,R0
    00005AB6 430B                   JSR         @R3
    00005AB8 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4062    
          EDIT.c  4063      //Return error
          EDIT.c  4064      if(iError<0)
    00005ABA E06C                   MOV         #108,R0
    00005ABC 02FE                   MOV.L       @(R0,R15),R2
    00005ABE 4211                   CMP/PZ      R2
    00005AC0 892A                   BT          L4719
          EDIT.c  4065      {
          EDIT.c  4066        sText[0]=ENDMARK;
    00005AC2 E078                   MOV         #120,R0
    00005AC4 01FE                   MOV.L       @(R0,R15),R1
    00005AC6 E30C                   MOV         #12,R3
    00005AC8 2130                   MOV.B       R3,@R1
          EDIT.c  4067        sText[1]=0;
    00005ACA E078                   MOV         #120,R0
    00005ACC 02FE                   MOV.L       @(R0,R15),R2
    00005ACE E000                   MOV         #0,R0
    00005AD0 8021                   MOV.B       R0,@(1,R2)
          EDIT.c  4068        return(0);
    00005AD2              L4997:                            
    00005AD2 9106                   MOV.W       L5270+6,R1 ; H'0088
    00005AD4 3F1C                   ADD         R1,R15
    00005AD6 4F26                   LDS.L       @R15+,PR
    00005AD8 000B                   RTS
    00005ADA E000                   MOV         #0,R0
    00005ADC              L5270:                            
    00005ADC FF78                   .DATA.W     H'FF78
    00005ADE 0084                   .DATA.W     H'0084
    00005AE0 0080                   .DATA.W     H'0080
    00005AE2 0088                   .DATA.W     H'0088
    00005AE4 <00000000>             .DATA.L     L1317
    00005AE8 <00000000>             .DATA.L     L620
    00005AEC <00000000>             .DATA.L     __slow_strcmp1
    00005AF0 <00000000>             .DATA.L     _FilePath
    00005AF4 <00000000>             .DATA.L     _Bfile_OpenFile
    00005AF8 <00000000>             .DATA.L     _Bfile_OpenMainMemory
    00005AFC <00000000>             .DATA.L     _Bfile_GetFileSize
    00005B00 <00000000>             .DATA.L     __iTextSize
    00005B04 <00000000>             .DATA.L     L1323
    00005B08 <00000000>             .DATA.L     L1322
    00005B0C <00000000>             .DATA.L     L1321




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  284


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005B10 <00000000>             .DATA.L     _Bfile_ReadFile
    00005B14 <00000000>             .DATA.L     _Bfile_CloseFile
    00005B18              L4719:                            
          EDIT.c  4069      }
          EDIT.c  4070      
          EDIT.c  4071      //Place end of text according to characters read
          EDIT.c  4072      iLen=iError;
          EDIT.c  4073      if(iLen>_iTextSize-1) iLen=_iTextSize-1;
    00005B18 D134                   MOV.L       L5271+4,R1 ; __iTextSize
    00005B1A E06C                   MOV         #108,R0
    00005B1C 03FE                   MOV.L       @(R0,R15),R3
    00005B1E E068                   MOV         #104,R0
    00005B20 0F36                   MOV.L       R3,@(R0,R15)
    00005B22 6212                   MOV.L       @R1,R2
    00005B24 72FF                   ADD         #-1,R2
    00005B26 3327                   CMP/GT      R2,R3
    00005B28 8B03                   BF          L4720
    00005B2A E068                   MOV         #104,R0
    00005B2C 6312                   MOV.L       @R1,R3
    00005B2E 73FF                   ADD         #-1,R3
    00005B30 0F36                   MOV.L       R3,@(R0,R15)
    00005B32              L4720:                            
          EDIT.c  4074      sText[iLen]=0;
    00005B32 E078                   MOV         #120,R0
    00005B34 02FE                   MOV.L       @(R0,R15),R2
    00005B36 E300                   MOV         #0,R3
    00005B38 E068                   MOV         #104,R0
    00005B3A 00FE                   MOV.L       @(R0,R15),R0
    00005B3C 0234                   MOV.B       R3,@(R0,R2)
          EDIT.c  4075      
          EDIT.c  4076      //Filter non ASCII chars
          EDIT.c  4077      *iBinary=0;
    00005B3E 9053                   MOV.W       L5271,R0   ; H'008C
    00005B40 02FE                   MOV.L       @(R0,R15),R2
    00005B42 2232                   MOV.L       R3,@R2
          EDIT.c  4078      for(i=0;i<iLen;i++)
    00005B44 6233                   MOV         R3,R2
    00005B46 A024                   BRA         L4998
    00005B48 0009                   NOP
    00005B4A              L4722:                            
          EDIT.c  4079      {
          EDIT.c  4080        if(sText[i]!=NEWLINELF && sText[i]!=NEWLINECR 
          EDIT.c  4081        && sText[i]!=ENDMARK   && sText[i]<32)
    00005B4A E078                   MOV         #120,R0
    00005B4C 01FE                   MOV.L       @(R0,R15),R1
    00005B4E E074                   MOV         #116,R0
    00005B50 00FE                   MOV.L       @(R0,R15),R0
    00005B52 001C                   MOV.B       @(R0,R1),R0
    00005B54 880A                   CMP/EQ      #10,R0
    00005B56 8919                   BT          L4723
    00005B58 E074                   MOV         #116,R0
    00005B5A 00FE                   MOV.L       @(R0,R15),R0
    00005B5C 001C                   MOV.B       @(R0,R1),R0
    00005B5E 880D                   CMP/EQ      #13,R0
    00005B60 8914                   BT          L4723
    00005B62 E074                   MOV         #116,R0
    00005B64 00FE                   MOV.L       @(R0,R15),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  285


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005B66 001C                   MOV.B       @(R0,R1),R0
    00005B68 880C                   CMP/EQ      #12,R0
    00005B6A 890F                   BT          L4723
    00005B6C E074                   MOV         #116,R0
    00005B6E E220                   MOV         #32,R2
    00005B70 00FE                   MOV.L       @(R0,R15),R0
    00005B72 031C                   MOV.B       @(R0,R1),R3
    00005B74 3323                   CMP/GE      R2,R3
    00005B76 8909                   BT          L4723
          EDIT.c  4082        { 
          EDIT.c  4083          *iBinary=1;
    00005B78 9036                   MOV.W       L5271,R0   ; H'008C
    00005B7A E301                   MOV         #1,R3
    00005B7C 01FE                   MOV.L       @(R0,R15),R1
          EDIT.c  4084          sText[i]=127;
    00005B7E E078                   MOV         #120,R0
    00005B80 2132                   MOV.L       R3,@R1
    00005B82 E37F                   MOV         #127,R3
    00005B84 02FE                   MOV.L       @(R0,R15),R2
    00005B86 E074                   MOV         #116,R0
    00005B88 00FE                   MOV.L       @(R0,R15),R0
    00005B8A 0234                   MOV.B       R3,@(R0,R2)
    00005B8C              L4723:                            
    00005B8C E074                   MOV         #116,R0
    00005B8E 02FE                   MOV.L       @(R0,R15),R2
    00005B90 7201                   ADD         #1,R2
    00005B92              L4998:                            
    00005B92 E074                   MOV         #116,R0
    00005B94 0F26                   MOV.L       R2,@(R0,R15)
    00005B96 6123                   MOV         R2,R1
    00005B98 E068                   MOV         #104,R0
    00005B9A 03FE                   MOV.L       @(R0,R15),R3
    00005B9C 3133                   CMP/GE      R3,R1
    00005B9E 8BD4                   BF          L4722
          EDIT.c  4085        }
          EDIT.c  4086      }
          EDIT.c  4087        
          EDIT.c  4088      //Convert new line to LF
          EDIT.c  4089      ConvertNewLine2LF(sText);
    00005BA0 E078                   MOV         #120,R0
    00005BA2 B392                   BSR         _ConvertNewLine2LF
    00005BA4 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4090      
          EDIT.c  4091      //Place end mark
          EDIT.c  4092      iLen=strlen(sText);
    00005BA6 E078                   MOV         #120,R0
    00005BA8 D311                   MOV.L       L5271+8,R3 ; _strlen
    00005BAA 430B                   JSR         @R3
    00005BAC 04FE                   MOV.L       @(R0,R15),R4
    00005BAE 61F3                   MOV         R15,R1
    00005BB0 7168                   ADD         #104,R1
    00005BB2 2102                   MOV.L       R0,@R1
          EDIT.c  4093      if(sText[iLen-1]!=ENDMARK)
    00005BB4 70FF                   ADD         #-1,R0
    00005BB6 61F3                   MOV         R15,R1
    00005BB8 7178                   ADD         #120,R1
    00005BBA 6312                   MOV.L       @R1,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  286


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005BBC 003C                   MOV.B       @(R0,R3),R0
    00005BBE 880C                   CMP/EQ      #12,R0
    00005BC0 890C                   BT          L4724
          EDIT.c  4094      {
          EDIT.c  4095        sText[iLen+0]=ENDMARK;
    00005BC2 E078                   MOV         #120,R0
    00005BC4 02FE                   MOV.L       @(R0,R15),R2
    00005BC6 E30C                   MOV         #12,R3
    00005BC8 E068                   MOV         #104,R0
    00005BCA 00FE                   MOV.L       @(R0,R15),R0
    00005BCC 0234                   MOV.B       R3,@(R0,R2)
          EDIT.c  4096        sText[iLen+1]=0;
    00005BCE E078                   MOV         #120,R0
    00005BD0 03FE                   MOV.L       @(R0,R15),R3
    00005BD2 E068                   MOV         #104,R0
    00005BD4 02FE                   MOV.L       @(R0,R15),R2
    00005BD6 E000                   MOV         #0,R0
    00005BD8 323C                   ADD         R3,R2
    00005BDA 8021                   MOV.B       R0,@(1,R2)
    00005BDC              L4724:                            
          EDIT.c  4097      }
          EDIT.c  4098      return(1);
    00005BDC E001                   MOV         #1,R0
          EDIT.c  4099    }
    00005BDE              L4716:                            
    00005BDE 9104                   MOV.W       L5271+2,R1 ; H'0088
    00005BE0 3F1C                   ADD         R1,R15
    00005BE2 4F26                   LDS.L       @R15+,PR
    00005BE4 000B                   RTS
    00005BE6 0009                   NOP
    00005BE8              L5271:                            
    00005BE8 008C                   .DATA.W     H'008C
    00005BEA 0088                   .DATA.W     H'0088
    00005BEC <00000000>             .DATA.L     __iTextSize
    00005BF0 <00000000>             .DATA.L     _strlen
          EDIT.c  4100    
          EDIT.c  4101    // ----------------------------------------------------------------
          EDIT.c  4102    // Write file
          EDIT.c  4103    int WriteFile(char *sRoot, char *sFolder, char *sFile, 
    00005BF4              _WriteFile:                      ; function: WriteFile
                                                           ; frame size=152
                                                           ; used runtime library name:
                                                           ; __slow_strcmp1
    00005BF4 4F22                   STS.L       PR,@-R15
    00005BF6 908B                   MOV.W       L5272,R0   ; H'FF74
    00005BF8 938B                   MOV.W       L5272+2,R3 ; H'0088
    00005BFA 3F0C                   ADD         R0,R15
    00005BFC 928A                   MOV.W       L5272+4,R2 ; H'0084
    00005BFE 33FC                   ADD         R15,R3
    00005C00 2342                   MOV.L       R4,@R3
    00005C02 32FC                   ADD         R15,R2
    00005C04 9387                   MOV.W       L5272+6,R3 ; H'0080
          EDIT.c  4104                  char *sText,int iNLMode)
          EDIT.c  4105    {
          EDIT.c  4106      //Variables
          EDIT.c  4107      int i;
          EDIT.c  4108      int iSpaces;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  287


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4109      int iHandle;
          EDIT.c  4110      int iError;
          EDIT.c  4111      int iRCode=1;
    00005C06 E068                   MOV         #104,R0
    00005C08 2252                   MOV.L       R5,@R2
    00005C0A 33FC                   ADD         R15,R3
          EDIT.c  4112      int iLen;
          EDIT.c  4113      FONTCHARACTER sFont[MAXPATH];
          EDIT.c  4114      
          EDIT.c  4115      //Message
          EDIT.c  4116      PopupMessage(0,"Writing file...",NULL,NULL,NULL,NULL);
    00005C0C D543                   MOV.L       L5272+12,R5; L1341
    00005C0E 62F3                   MOV         R15,R2
    00005C10 2362                   MOV.L       R6,@R3
    00005C12 727C                   ADD         #124,R2
    00005C14 2272                   MOV.L       R7,@R2
    00005C16 E301                   MOV         #1,R3
    00005C18 0F36                   MOV.L       R3,@(R0,R15)
    00005C1A E200                   MOV         #0,R2
    00005C1C 2F26                   MOV.L       R2,@-R15
    00005C1E 6723                   MOV         R2,R7
    00005C20 2F26                   MOV.L       R2,@-R15
    00005C22 6623                   MOV         R2,R6
    00005C24 B40C                   BSR         _PopupMessage
    00005C26 6423                   MOV         R2,R4
          EDIT.c  4117      
          EDIT.c  4118      //Convert new line to CR+LF
          EDIT.c  4119      if(iNLMode==NEWLMODECRLF) ConvertNewLine2CRLF(sText);
    00005C28 9076                   MOV.W       L5272+8,R0 ; H'0090
    00005C2A 7F08                   ADD         #8,R15
    00005C2C 00FE                   MOV.L       @(R0,R15),R0
    00005C2E 8801                   CMP/EQ      #1,R0
    00005C30 8B02                   BF          L4725
    00005C32 E07C                   MOV         #124,R0
    00005C34 B31B                   BSR         _ConvertNewLine2CRLF
    00005C36 04FE                   MOV.L       @(R0,R15),R4
    00005C38              L4725:                            
          EDIT.c  4120    
          EDIT.c  4121      //Remove end mark
          EDIT.c  4122      iLen=strlen(sText);
    00005C38 D339                   MOV.L       L5272+16,R3; _strlen
    00005C3A E07C                   MOV         #124,R0
    00005C3C 430B                   JSR         @R3
    00005C3E 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4123      sText[iLen-1]=0;
          EDIT.c  4124      iLen--;
          EDIT.c  4125      
          EDIT.c  4126      //Add additional spaces at end (main memory only)
          EDIT.c  4127      if(strcmp(sRoot,"main")==0)
    00005C40 D538                   MOV.L       L5272+20,R5; L620
    00005C42 61F3                   MOV         R15,R1
    00005C44 7164                   ADD         #100,R1
    00005C46 E200                   MOV         #0,R2
    00005C48 2102                   MOV.L       R0,@R1
    00005C4A 70FF                   ADD         #-1,R0
    00005C4C 61F3                   MOV         R15,R1
    00005C4E 717C                   ADD         #124,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  288


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005C50 6312                   MOV.L       @R1,R3
    00005C52 0324                   MOV.B       R2,@(R0,R3)
    00005C54 D234                   MOV.L       L5272+24,R2; __slow_strcmp1
    00005C56 E064                   MOV         #100,R0
    00005C58 03FE                   MOV.L       @(R0,R15),R3
    00005C5A E064                   MOV         #100,R0
    00005C5C 73FF                   ADD         #-1,R3
    00005C5E 0F36                   MOV.L       R3,@(R0,R15)
    00005C60 9057                   MOV.W       L5272+2,R0 ; H'0088
    00005C62 420B                   JSR         @R2
    00005C64 04FE                   MOV.L       @(R0,R15),R4
    00005C66 2008                   TST         R0,R0
    00005C68 8B3D                   BF          L4726
          EDIT.c  4128      {
          EDIT.c  4129        iSpaces=((iLen%4)!=0?4-(iLen%4):0);
    00005C6A E064                   MOV         #100,R0
    00005C6C 00FE                   MOV.L       @(R0,R15),R0
    00005C6E 4011                   CMP/PZ      R0
    00005C70 8B01                   BF          L4728
    00005C72 A005                   BRA         L4729
    00005C74 C903                   AND         #3,R0
    00005C76              L4728:                            
    00005C76 6007                   NOT         R0,R0
    00005C78 7001                   ADD         #1,R0
    00005C7A C903                   AND         #3,R0
    00005C7C 6007                   NOT         R0,R0
    00005C7E 7001                   ADD         #1,R0
    00005C80              L4729:                            
    00005C80 2008                   TST         R0,R0
    00005C82 890D                   BT          L4727
    00005C84 E064                   MOV         #100,R0
    00005C86 00FE                   MOV.L       @(R0,R15),R0
    00005C88 4011                   CMP/PZ      R0
    00005C8A 8F02                   BF/S        L4730
    00005C8C E204                   MOV         #4,R2
    00005C8E A005                   BRA         L4731
    00005C90 C903                   AND         #3,R0
    00005C92              L4730:                            
    00005C92 6007                   NOT         R0,R0
    00005C94 7001                   ADD         #1,R0
    00005C96 C903                   AND         #3,R0
    00005C98 6007                   NOT         R0,R0
    00005C9A 7001                   ADD         #1,R0
    00005C9C              L4731:                            
    00005C9C A001                   BRA         L4732
    00005C9E 3208                   SUB         R0,R2
    00005CA0              L4727:                            
    00005CA0 E200                   MOV         #0,R2
    00005CA2              L4732:                            
    00005CA2 E074                   MOV         #116,R0
    00005CA4 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  4130        for(i=0;i<iSpaces;i++) sText[iLen+i]=' ';
    00005CA6 A00C                   BRA         L4999
    00005CA8 E300                   MOV         #0,R3
    00005CAA              L4734:                            
    00005CAA E064                   MOV         #100,R0
    00005CAC 03FE                   MOV.L       @(R0,R15),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  289


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005CAE E120                   MOV         #32,R1
    00005CB0 E078                   MOV         #120,R0
    00005CB2 02FE                   MOV.L       @(R0,R15),R2
    00005CB4 323C                   ADD         R3,R2
    00005CB6 E07C                   MOV         #124,R0
    00005CB8 00FE                   MOV.L       @(R0,R15),R0
    00005CBA 0214                   MOV.B       R1,@(R0,R2)
    00005CBC E078                   MOV         #120,R0
    00005CBE 03FE                   MOV.L       @(R0,R15),R3
    00005CC0 7301                   ADD         #1,R3
    00005CC2              L4999:                            
    00005CC2 E078                   MOV         #120,R0
    00005CC4 0F36                   MOV.L       R3,@(R0,R15)
    00005CC6 6133                   MOV         R3,R1
    00005CC8 E074                   MOV         #116,R0
    00005CCA 02FE                   MOV.L       @(R0,R15),R2
    00005CCC 3123                   CMP/GE      R2,R1
    00005CCE 8BEC                   BF          L4734
          EDIT.c  4131        iLen=iLen+iSpaces;
    00005CD0 E064                   MOV         #100,R0
    00005CD2 03FE                   MOV.L       @(R0,R15),R3
    00005CD4 E074                   MOV         #116,R0
    00005CD6 02FE                   MOV.L       @(R0,R15),R2
    00005CD8 323C                   ADD         R3,R2
    00005CDA E064                   MOV         #100,R0
    00005CDC 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  4132        sText[iLen]=0;
    00005CDE E300                   MOV         #0,R3
    00005CE0 E07C                   MOV         #124,R0
    00005CE2 00FE                   MOV.L       @(R0,R15),R0
    00005CE4 0234                   MOV.B       R3,@(R0,R2)
    00005CE6              L4726:                            
          EDIT.c  4133      }
          EDIT.c  4134      
          EDIT.c  4135      //Delete previous file
          EDIT.c  4136      if(strcmp(sRoot,"main")!=0)
    00005CE6 D50F                   MOV.L       L5272+20,R5; L620
    00005CE8 9013                   MOV.W       L5272+2,R0 ; H'0088
    00005CEA D30F                   MOV.L       L5272+24,R3; __slow_strcmp1
    00005CEC 430B                   JSR         @R3
    00005CEE 04FE                   MOV.L       @(R0,R15),R4
    00005CF0 2008                   TST         R0,R0
    00005CF2 891F                   BT          L4735
          EDIT.c  4137      {
          EDIT.c  4138        FilePath(sRoot,sFolder,sFile,sFont);
    00005CF4 900F                   MOV.W       L5272+6,R0 ; H'0080
    00005CF6 67F3                   MOV         R15,R7
    00005CF8 D30C                   MOV.L       L5272+28,R3; _FilePath
    00005CFA 06FE                   MOV.L       @(R0,R15),R6
    00005CFC 900A                   MOV.W       L5272+4,R0 ; H'0084
    00005CFE 05FE                   MOV.L       @(R0,R15),R5
    00005D00 9007                   MOV.W       L5272+2,R0 ; H'0088
    00005D02 430B                   JSR         @R3
    00005D04 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4139        Bfile_DeleteFile(sFont);
    00005D06 D20A                   MOV.L       L5272+32,R2; _Bfile_DeleteFile
    00005D08 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  290


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005D0A 64F3                   MOV         R15,R4
    00005D0C A01C                   BRA         L4736
    00005D0E 0009                   NOP
    00005D10              L5272:                            
    00005D10 FF74                   .DATA.W     H'FF74
    00005D12 0088                   .DATA.W     H'0088
    00005D14 0084                   .DATA.W     H'0084
    00005D16 0080                   .DATA.W     H'0080
    00005D18 0090                   .DATA.W     H'0090
    00005D1A 0000                   .DATA.W     0
    00005D1C <00000000>             .DATA.L     L1341
    00005D20 <00000000>             .DATA.L     _strlen
    00005D24 <00000000>             .DATA.L     L620
    00005D28 <00000000>             .DATA.L     __slow_strcmp1
    00005D2C <00000000>             .DATA.L     _FilePath
    00005D30 <00000000>             .DATA.L     _Bfile_DeleteFile
    00005D34              L4735:                            
          EDIT.c  4140      }
          EDIT.c  4141      else
          EDIT.c  4142      {
          EDIT.c  4143        Bfile_DeleteMainMemory(sFile);
    00005D34 907D                   MOV.W       L5273,R0   ; H'0080
    00005D36 D341                   MOV.L       L5273+10,R3; _Bfile_DeleteMainMemory
    00005D38 430B                   JSR         @R3
    00005D3A 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4144        MainDirectory(DELETE,sFile,"");
    00005D3C D640                   MOV.L       L5273+14,R6; L500
    00005D3E 9078                   MOV.W       L5273,R0   ; H'0080
    00005D40 D340                   MOV.L       L5273+18,R3; _MainDirectory
    00005D42 05FE                   MOV.L       @(R0,R15),R5
    00005D44 430B                   JSR         @R3
    00005D46 E404                   MOV         #4,R4
    00005D48              L4736:                            
          EDIT.c  4145      }
          EDIT.c  4146      
          EDIT.c  4147      //Create new file
          EDIT.c  4148      if(strcmp(sRoot,"main")!=0)
    00005D48 D53F                   MOV.L       L5273+22,R5; L620
    00005D4A 9073                   MOV.W       L5273+2,R0 ; H'0088
    00005D4C D33F                   MOV.L       L5273+26,R3; __slow_strcmp1
    00005D4E 430B                   JSR         @R3
    00005D50 04FE                   MOV.L       @(R0,R15),R4
    00005D52 2008                   TST         R0,R0
    00005D54 8906                   BT          L4737
          EDIT.c  4149        iError=Bfile_CreateFile(sFont,iLen);
    00005D56 E064                   MOV         #100,R0
    00005D58 D33D                   MOV.L       L5273+30,R3; _Bfile_CreateFile
    00005D5A 05FE                   MOV.L       @(R0,R15),R5
    00005D5C 430B                   JSR         @R3
    00005D5E 64F3                   MOV         R15,R4
    00005D60 A004                   BRA         L5000
    00005D62 0009                   NOP
    00005D64              L4737:                            
          EDIT.c  4150      else
          EDIT.c  4151        iError=Bfile_CreateMainMemory(sFile);
    00005D64 9065                   MOV.W       L5273,R0   ; H'0080
    00005D66 D33B                   MOV.L       L5273+34,R3; _Bfile_CreateMainMemory




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  291


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005D68 430B                   JSR         @R3
    00005D6A 04FE                   MOV.L       @(R0,R15),R4
    00005D6C              L5000:                            
    00005D6C 61F3                   MOV         R15,R1
    00005D6E 716C                   ADD         #108,R1
          EDIT.c  4152      if(iError!=0)
    00005D70 6303                   MOV         R0,R3
    00005D72 2338                   TST         R3,R3
    00005D74 8D04                   BT/S        L4739
    00005D76 2102                   MOV.L       R0,@R1
          EDIT.c  4153        iRCode=0;
    00005D78 E300                   MOV         #0,R3
    00005D7A E068                   MOV         #104,R0
    00005D7C A031                   BRA         L4740
    00005D7E 0F36                   MOV.L       R3,@(R0,R15)
    00005D80              L4739:                            
          EDIT.c  4154      
          EDIT.c  4155      //Continue
          EDIT.c  4156      else
          EDIT.c  4157      {
          EDIT.c  4158        //Open file
          EDIT.c  4159        if(strcmp(sRoot,"main")!=0)
    00005D80 D531                   MOV.L       L5273+22,R5; L620
    00005D82 9057                   MOV.W       L5273+2,R0 ; H'0088
    00005D84 D331                   MOV.L       L5273+26,R3; __slow_strcmp1
    00005D86 430B                   JSR         @R3
    00005D88 04FE                   MOV.L       @(R0,R15),R4
    00005D8A 2008                   TST         R0,R0
    00005D8C 8905                   BT          L4741
          EDIT.c  4160          iHandle=Bfile_OpenFile(sFont,_OPENMODE_WRITE);
    00005D8E E502                   MOV         #2,R5
    00005D90 D331                   MOV.L       L5273+38,R3; _Bfile_OpenFile
    00005D92 430B                   JSR         @R3
    00005D94 64F3                   MOV         R15,R4
    00005D96 A004                   BRA         L5001
    00005D98 0009                   NOP
    00005D9A              L4741:                            
          EDIT.c  4161        else
          EDIT.c  4162          iHandle=Bfile_OpenMainMemory(sFile);
    00005D9A 904A                   MOV.W       L5273,R0   ; H'0080
    00005D9C D32F                   MOV.L       L5273+42,R3; _Bfile_OpenMainMemory
    00005D9E 430B                   JSR         @R3
    00005DA0 04FE                   MOV.L       @(R0,R15),R4
    00005DA2              L5001:                            
    00005DA2 61F3                   MOV         R15,R1
    00005DA4 7170                   ADD         #112,R1
          EDIT.c  4163        if(iHandle<0) 
    00005DA6 6303                   MOV         R0,R3
    00005DA8 4311                   CMP/PZ      R3
    00005DAA 8D04                   BT/S        L4743
    00005DAC 2102                   MOV.L       R0,@R1
          EDIT.c  4164          iRCode=0;
    00005DAE E100                   MOV         #0,R1
    00005DB0 E068                   MOV         #104,R0
    00005DB2 A016                   BRA         L4740
    00005DB4 0F16                   MOV.L       R1,@(R0,R15)
    00005DB6              L4743:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  292


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4165          
          EDIT.c  4166        //Continue
          EDIT.c  4167        else
          EDIT.c  4168        {
          EDIT.c  4169          //Write to file
          EDIT.c  4170          iError=Bfile_WriteFile(iHandle,sText,iLen);
    00005DB6 E064                   MOV         #100,R0
    00005DB8 D329                   MOV.L       L5273+46,R3; _Bfile_WriteFile
    00005DBA 06FE                   MOV.L       @(R0,R15),R6
    00005DBC E07C                   MOV         #124,R0
    00005DBE 05FE                   MOV.L       @(R0,R15),R5
    00005DC0 E070                   MOV         #112,R0
    00005DC2 430B                   JSR         @R3
    00005DC4 04FE                   MOV.L       @(R0,R15),R4
    00005DC6 61F3                   MOV         R15,R1
          EDIT.c  4171          Bfile_CloseFile(iHandle);
    00005DC8 D326                   MOV.L       L5273+50,R3; _Bfile_CloseFile
    00005DCA 716C                   ADD         #108,R1
    00005DCC 2102                   MOV.L       R0,@R1
    00005DCE E070                   MOV         #112,R0
    00005DD0 430B                   JSR         @R3
    00005DD2 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4172          if(iError<0) iRCode=0;
    00005DD4 E06C                   MOV         #108,R0
    00005DD6 02FE                   MOV.L       @(R0,R15),R2
    00005DD8 4211                   CMP/PZ      R2
    00005DDA 8902                   BT          L4740
    00005DDC E100                   MOV         #0,R1
    00005DDE E068                   MOV         #104,R0
    00005DE0 0F16                   MOV.L       R1,@(R0,R15)
    00005DE2              L4740:                            
          EDIT.c  4173        }
          EDIT.c  4174      }
          EDIT.c  4175      
          EDIT.c  4176      //Convert new line to LF
          EDIT.c  4177      if(iNLMode==NEWLMODECRLF) ConvertNewLine2LF(sText);
    00005DE2 9028                   MOV.W       L5273+4,R0 ; H'0090
    00005DE4 00FE                   MOV.L       @(R0,R15),R0
    00005DE6 8801                   CMP/EQ      #1,R0
    00005DE8 8B02                   BF          L4746
    00005DEA E07C                   MOV         #124,R0
    00005DEC B26D                   BSR         _ConvertNewLine2LF
    00005DEE 04FE                   MOV.L       @(R0,R15),R4
    00005DF0              L4746:                            
          EDIT.c  4178      
          EDIT.c  4179      //Place end mark again
          EDIT.c  4180      iLen=strlen(sText);
    00005DF0 D31D                   MOV.L       L5273+54,R3; _strlen
    00005DF2 E07C                   MOV         #124,R0
    00005DF4 430B                   JSR         @R3
    00005DF6 04FE                   MOV.L       @(R0,R15),R4
    00005DF8 61F3                   MOV         R15,R1
    00005DFA 7164                   ADD         #100,R1
    00005DFC 2102                   MOV.L       R0,@R1
          EDIT.c  4181      sText[iLen+0]=ENDMARK;
    00005DFE 62F3                   MOV         R15,R2
    00005E00 727C                   ADD         #124,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  293


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005E02 E10C                   MOV         #12,R1
    00005E04 6322                   MOV.L       @R2,R3
    00005E06 0314                   MOV.B       R1,@(R0,R3)
          EDIT.c  4182      sText[iLen+1]=0;
    00005E08 E07C                   MOV         #124,R0
    00005E0A 03FE                   MOV.L       @(R0,R15),R3
    00005E0C E064                   MOV         #100,R0
    00005E0E 02FE                   MOV.L       @(R0,R15),R2
    00005E10 323C                   ADD         R3,R2
    00005E12 E000                   MOV         #0,R0
          EDIT.c  4183      
          EDIT.c  4184      //Update directory in main memory
          EDIT.c  4185      MainDirectory(CREATE,sFile,sFolder);
    00005E14 D30B                   MOV.L       L5273+18,R3; _MainDirectory
    00005E16 8021                   MOV.B       R0,@(1,R2)
    00005E18 900E                   MOV.W       L5273+6,R0 ; H'0084
    00005E1A 06FE                   MOV.L       @(R0,R15),R6
    00005E1C 9009                   MOV.W       L5273,R0   ; H'0080
    00005E1E 05FE                   MOV.L       @(R0,R15),R5
    00005E20 430B                   JSR         @R3
    00005E22 E403                   MOV         #3,R4
          EDIT.c  4186      
          EDIT.c  4187      //Return code
          EDIT.c  4188      return(iRCode);
          EDIT.c  4189    }
    00005E24 9109                   MOV.W       L5273+8,R1 ; H'008C
    00005E26 E068                   MOV         #104,R0
    00005E28 00FE                   MOV.L       @(R0,R15),R0
    00005E2A 3F1C                   ADD         R1,R15
    00005E2C 4F26                   LDS.L       @R15+,PR
    00005E2E 000B                   RTS
    00005E30 0009                   NOP
    00005E32              L5273:                            
    00005E32 0080                   .DATA.W     H'0080
    00005E34 0088                   .DATA.W     H'0088
    00005E36 0090                   .DATA.W     H'0090
    00005E38 0084                   .DATA.W     H'0084
    00005E3A 008C                   .DATA.W     H'008C
    00005E3C <00000000>             .DATA.L     _Bfile_DeleteMainMemory
    00005E40 <00000000>             .DATA.L     L500
    00005E44 <00000000>             .DATA.L     _MainDirectory
    00005E48 <00000000>             .DATA.L     L620
    00005E4C <00000000>             .DATA.L     __slow_strcmp1
    00005E50 <00000000>             .DATA.L     _Bfile_CreateFile
    00005E54 <00000000>             .DATA.L     _Bfile_CreateMainMemory
    00005E58 <00000000>             .DATA.L     _Bfile_OpenFile
    00005E5C <00000000>             .DATA.L     _Bfile_OpenMainMemory
    00005E60 <00000000>             .DATA.L     _Bfile_WriteFile
    00005E64 <00000000>             .DATA.L     _Bfile_CloseFile
    00005E68 <00000000>             .DATA.L     _strlen
          EDIT.c  4190    
          EDIT.c  4191    // ----------------------------------------------------------------
          EDIT.c  4192    // Copy file
          EDIT.c  4193    int CopyFile(char *sRoot1, char *sFolder1, char *sFile1,
    00005E6C              _CopyFile:                       ; function: CopyFile
                                                           ; frame size=788
                                                           ; used runtime library name:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  294


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; __slow_strcmp1
    00005E6C 4F22                   STS.L       PR,@-R15
    00005E6E 907A                   MOV.W       L5274,R0   ; H'FCF8
    00005E70 937A                   MOV.W       L5274+2,R3 ; H'0304
    00005E72 3F0C                   ADD         R0,R15
    00005E74 9279                   MOV.W       L5274+4,R2 ; H'0300
    00005E76 33FC                   ADD         R15,R3
    00005E78 2342                   MOV.L       R4,@R3
    00005E7A 32FC                   ADD         R15,R2
    00005E7C 9376                   MOV.W       L5274+6,R3 ; H'02FC
    00005E7E 2252                   MOV.L       R5,@R2
    00005E80 9275                   MOV.W       L5274+8,R2 ; H'02F8
    00005E82 33FC                   ADD         R15,R3
          EDIT.c  4194                 char *sRoot2, char *sFolder2, char *sFile2)
          EDIT.c  4195    {
          EDIT.c  4196      //Constants
          EDIT.c  4197      #define COPYBUFF 512
          EDIT.c  4198      
          EDIT.c  4199      //Variables
          EDIT.c  4200      int i;
          EDIT.c  4201      int iError;
          EDIT.c  4202      int iErrFlag;
          EDIT.c  4203      int iLen0;
          EDIT.c  4204      int iLen;
          EDIT.c  4205      int iSpaces;
          EDIT.c  4206      int iSize;
          EDIT.c  4207      int iSize0;
          EDIT.c  4208      int iPos;
          EDIT.c  4209      int iHandle1;
          EDIT.c  4210      int iHandle2;
          EDIT.c  4211      FONTCHARACTER sFont1[MAXPATH];
          EDIT.c  4212      FONTCHARACTER sFont2[MAXPATH];
          EDIT.c  4213      char sBuff[COPYBUFF];
          EDIT.c  4214      char sSpaces[4];
          EDIT.c  4215      
          EDIT.c  4216      //Message
          EDIT.c  4217      PopupMessage(0,"Copying file...",NULL,NULL,NULL,NULL);
    00005E84 D53D                   MOV.L       L5274+22,R5; L1369
    00005E86 32FC                   ADD         R15,R2
    00005E88 2362                   MOV.L       R6,@R3
    00005E8A E300                   MOV         #0,R3
    00005E8C 2272                   MOV.L       R7,@R2
    00005E8E 6633                   MOV         R3,R6
    00005E90 2F36                   MOV.L       R3,@-R15
    00005E92 6733                   MOV         R3,R7
    00005E94 2F36                   MOV.L       R3,@-R15
    00005E96 B2D3                   BSR         _PopupMessage
    00005E98 6433                   MOV         R3,R4
    00005E9A 7F08                   ADD         #8,R15
          EDIT.c  4218      
          EDIT.c  4219      //Prepare source file
          EDIT.c  4220      if(strcmp(sRoot1,"main")!=0)
    00005E9C D538                   MOV.L       L5274+26,R5; L620
    00005E9E 9063                   MOV.W       L5274+2,R0 ; H'0304
    00005EA0 D338                   MOV.L       L5274+30,R3; __slow_strcmp1
    00005EA2 430B                   JSR         @R3
    00005EA4 04FE                   MOV.L       @(R0,R15),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  295


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005EA6 2008                   TST         R0,R0
    00005EA8 8910                   BT          L4748
          EDIT.c  4221      {
          EDIT.c  4222        FilePath(sRoot1,sFolder1,sFile1,sFont1);
    00005EAA 9761                   MOV.W       L5274+10,R7; H'0268
    00005EAC 905E                   MOV.W       L5274+6,R0 ; H'02FC
    00005EAE 37FC                   ADD         R15,R7
    00005EB0 D335                   MOV.L       L5274+34,R3; _FilePath
    00005EB2 06FE                   MOV.L       @(R0,R15),R6
    00005EB4 9059                   MOV.W       L5274+4,R0 ; H'0300
    00005EB6 05FE                   MOV.L       @(R0,R15),R5
    00005EB8 9056                   MOV.W       L5274+2,R0 ; H'0304
    00005EBA 430B                   JSR         @R3
    00005EBC 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4223        iHandle1=Bfile_OpenFile(sFont1,_OPENMODE_READ);
    00005EBE E501                   MOV         #1,R5
    00005EC0 9456                   MOV.W       L5274+10,R4; H'0268
    00005EC2 D232                   MOV.L       L5274+38,R2; _Bfile_OpenFile
    00005EC4 420B                   JSR         @R2
    00005EC6 34FC                   ADD         R15,R4
    00005EC8 A004                   BRA         L5002
    00005ECA 0009                   NOP
    00005ECC              L4748:                            
          EDIT.c  4224      }
          EDIT.c  4225      else
          EDIT.c  4226      {
          EDIT.c  4227        iHandle1=Bfile_OpenMainMemory(sFile1);
    00005ECC 904E                   MOV.W       L5274+6,R0 ; H'02FC
    00005ECE D330                   MOV.L       L5274+42,R3; _Bfile_OpenMainMemory
    00005ED0 430B                   JSR         @R3
    00005ED2 04FE                   MOV.L       @(R0,R15),R4
    00005ED4              L5002:                            
    00005ED4 914D                   MOV.W       L5274+12,R1; H'02D0
          EDIT.c  4228      }
          EDIT.c  4229      if(iHandle1<0)
    00005ED6 6303                   MOV         R0,R3
    00005ED8 31FC                   ADD         R15,R1
    00005EDA 4311                   CMP/PZ      R3
    00005EDC 8D07                   BT/S        L4750
    00005EDE 2102                   MOV.L       R0,@R1
          EDIT.c  4230      {
          EDIT.c  4231        PopupMessage(1,"Cannot open","source file!",NULL,NULL,NULL);
    00005EE0 D62C                   MOV.L       L5274+46,R6; L1374
    00005EE2 E100                   MOV         #0,R1
    00005EE4 2F16                   MOV.L       R1,@-R15
    00005EE6 6713                   MOV         R1,R7
    00005EE8 2F16                   MOV.L       R1,@-R15
          EDIT.c  4232        return(0);
    00005EEA A096                   BRA         L5010
    00005EEC 0009                   NOP
    00005EEE              L4750:                            
          EDIT.c  4233      }
          EDIT.c  4234      
          EDIT.c  4235      //File size
          EDIT.c  4236      if(strcmp(sRoot1,"main")!=0)
    00005EEE D524                   MOV.L       L5274+26,R5; L620
    00005EF0 903A                   MOV.W       L5274+2,R0 ; H'0304




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  296


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005EF2 D324                   MOV.L       L5274+30,R3; __slow_strcmp1
    00005EF4 430B                   JSR         @R3
    00005EF6 04FE                   MOV.L       @(R0,R15),R4
    00005EF8 2008                   TST         R0,R0
    00005EFA 8905                   BT          L4752
          EDIT.c  4237        iSize=Bfile_GetFileSize(iHandle1);
    00005EFC 9039                   MOV.W       L5274+12,R0; H'02D0
    00005EFE D326                   MOV.L       L5274+50,R3; _Bfile_GetFileSize
    00005F00 430B                   JSR         @R3
    00005F02 04FE                   MOV.L       @(R0,R15),R4
    00005F04 A005                   BRA         L5003
    00005F06 0009                   NOP
    00005F08              L4752:                            
          EDIT.c  4238      else
          EDIT.c  4239        iSize=Bfile_GetFileSize(iHandle1)-MAINHEADER;
    00005F08 9033                   MOV.W       L5274+12,R0; H'02D0
    00005F0A D323                   MOV.L       L5274+50,R3; _Bfile_GetFileSize
    00005F0C 430B                   JSR         @R3
    00005F0E 04FE                   MOV.L       @(R0,R15),R4
    00005F10 70EC                   ADD         #-20,R0
    00005F12              L5003:                            
    00005F12 912F                   MOV.W       L5274+14,R1; H'02DC
          EDIT.c  4240    
          EDIT.c  4241      //Prepare destination file
          EDIT.c  4242      if(strcmp(sRoot2,"main")!=0)
    00005F14 D51A                   MOV.L       L5274+26,R5; L620
    00005F16 31FC                   ADD         R15,R1
    00005F18 D31A                   MOV.L       L5274+30,R3; __slow_strcmp1
    00005F1A 2102                   MOV.L       R0,@R1
    00005F1C 9027                   MOV.W       L5274+8,R0 ; H'02F8
    00005F1E 430B                   JSR         @R3
    00005F20 04FE                   MOV.L       @(R0,R15),R4
    00005F22 2008                   TST         R0,R0
    00005F24 8949                   BT          L4754
          EDIT.c  4243      {
          EDIT.c  4244        FilePath(sRoot2,sFolder2,sFile2,sFont2);
    00005F26 9726                   MOV.W       L5274+16,R7; H'0204
    00005F28 9026                   MOV.W       L5274+18,R0; H'0310
    00005F2A 37FC                   ADD         R15,R7
    00005F2C D316                   MOV.L       L5274+34,R3; _FilePath
    00005F2E 06FE                   MOV.L       @(R0,R15),R6
    00005F30 9023                   MOV.W       L5274+20,R0; H'030C
    00005F32 05FE                   MOV.L       @(R0,R15),R5
    00005F34 901B                   MOV.W       L5274+8,R0 ; H'02F8
    00005F36 430B                   JSR         @R3
    00005F38 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4245        Bfile_DeleteFile(sFont2);
    00005F3A 941C                   MOV.W       L5274+16,R4; H'0204
    00005F3C D217                   MOV.L       L5274+54,R2; _Bfile_DeleteFile
    00005F3E 420B                   JSR         @R2
    00005F40 34FC                   ADD         R15,R4
          EDIT.c  4246        if(Bfile_CreateFile(sFont2,iSize)!=0)
    00005F42 9017                   MOV.W       L5274+14,R0; H'02DC
    00005F44 9417                   MOV.W       L5274+16,R4; H'0204
    00005F46 05FE                   MOV.L       @(R0,R15),R5
    00005F48 D315                   MOV.L       L5274+58,R3; _Bfile_CreateFile
    00005F4A 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  297


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005F4C 34FC                   ADD         R15,R4
    00005F4E 2008                   TST         R0,R0
    00005F50 892C                   BT          L4755
          EDIT.c  4247        {
          EDIT.c  4248          PopupMessage(1,"Cannot create","destination file!",NULL,NULL,NULL);
    00005F52 E300                   MOV         #0,R3
    00005F54 D613                   MOV.L       L5274+62,R6; L1378
    00005F56 6733                   MOV         R3,R7
    00005F58 D513                   MOV.L       L5274+66,R5; L1377
    00005F5A 2F36                   MOV.L       R3,@-R15
    00005F5C 2F36                   MOV.L       R3,@-R15
    00005F5E B26F                   BSR         _PopupMessage
    00005F60 E401                   MOV         #1,R4
          EDIT.c  4249          return(0);
    00005F62 A122                   BRA         L5009
    00005F64 0009                   NOP
    00005F66              L5274:                            
    00005F66 FCF8                   .DATA.W     H'FCF8
    00005F68 0304                   .DATA.W     H'0304
    00005F6A 0300                   .DATA.W     H'0300
    00005F6C 02FC                   .DATA.W     H'02FC
    00005F6E 02F8                   .DATA.W     H'02F8
    00005F70 0268                   .DATA.W     H'0268
    00005F72 02D0                   .DATA.W     H'02D0
    00005F74 02DC                   .DATA.W     H'02DC
    00005F76 0204                   .DATA.W     H'0204
    00005F78 0310                   .DATA.W     H'0310
    00005F7A 030C                   .DATA.W     H'030C
    00005F7C <00000000>             .DATA.L     L1369
    00005F80 <00000000>             .DATA.L     L620
    00005F84 <00000000>             .DATA.L     __slow_strcmp1
    00005F88 <00000000>             .DATA.L     _FilePath
    00005F8C <00000000>             .DATA.L     _Bfile_OpenFile
    00005F90 <00000000>             .DATA.L     _Bfile_OpenMainMemory
    00005F94 <00000000>             .DATA.L     L1374
    00005F98 <00000000>             .DATA.L     _Bfile_GetFileSize
    00005F9C <00000000>             .DATA.L     _Bfile_DeleteFile
    00005FA0 <00000000>             .DATA.L     _Bfile_CreateFile
    00005FA4 <00000000>             .DATA.L     L1378
    00005FA8 <00000000>             .DATA.L     L1377
    00005FAC              L4755:                            
          EDIT.c  4250        }
          EDIT.c  4251        iHandle2=Bfile_OpenFile(sFont2,_OPENMODE_WRITE);
    00005FAC 946A                   MOV.W       L5275,R4   ; H'0204
    00005FAE E502                   MOV         #2,R5
    00005FB0 D33A                   MOV.L       L5275+24,R3; _Bfile_OpenFile
    00005FB2 430B                   JSR         @R3
    00005FB4 34FC                   ADD         R15,R4
    00005FB6 A025                   BRA         L5006
    00005FB8 0009                   NOP
    00005FBA              L4754:                            
          EDIT.c  4252      }
          EDIT.c  4253      else
          EDIT.c  4254      {
          EDIT.c  4255        Bfile_DeleteMainMemory(sFile2);
    00005FBA 9064                   MOV.W       L5275+2,R0 ; H'0310
    00005FBC D338                   MOV.L       L5275+28,R3; _Bfile_DeleteMainMemory




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  298


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00005FBE 430B                   JSR         @R3
    00005FC0 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4256        if(Bfile_CreateMainMemory(sFile2)!=0)
    00005FC2 9060                   MOV.W       L5275+2,R0 ; H'0310
    00005FC4 D337                   MOV.L       L5275+32,R3; _Bfile_CreateMainMemory
    00005FC6 430B                   JSR         @R3
    00005FC8 04FE                   MOV.L       @(R0,R15),R4
    00005FCA 2008                   TST         R0,R0
    00005FCC 8909                   BT          L4757
          EDIT.c  4257        {
          EDIT.c  4258          PopupMessage(1,"Cannot create","destination file!",NULL,NULL,NULL);
    00005FCE E300                   MOV         #0,R3
    00005FD0 D635                   MOV.L       L5275+36,R6; L1378
    00005FD2 6733                   MOV         R3,R7
    00005FD4 D535                   MOV.L       L5275+40,R5; L1377
    00005FD6 2F36                   MOV.L       R3,@-R15
    00005FD8 2F36                   MOV.L       R3,@-R15
    00005FDA B231                   BSR         _PopupMessage
    00005FDC E401                   MOV         #1,R4
          EDIT.c  4259          return(0);
    00005FDE A0E4                   BRA         L5009
    00005FE0 0009                   NOP
    00005FE2              L4757:                            
          EDIT.c  4260        }
          EDIT.c  4261        MainDirectory(DELETE,sFile2,"");
    00005FE2 D633                   MOV.L       L5275+44,R6; L500
    00005FE4 904F                   MOV.W       L5275+2,R0 ; H'0310
    00005FE6 05FE                   MOV.L       @(R0,R15),R5
    00005FE8 D332                   MOV.L       L5275+48,R3; _MainDirectory
    00005FEA 430B                   JSR         @R3
    00005FEC E404                   MOV         #4,R4
          EDIT.c  4262        MainDirectory(CREATE,sFile2,sFolder2);
    00005FEE 904B                   MOV.W       L5275+4,R0 ; H'030C
    00005FF0 D330                   MOV.L       L5275+48,R3; _MainDirectory
    00005FF2 06FE                   MOV.L       @(R0,R15),R6
    00005FF4 9047                   MOV.W       L5275+2,R0 ; H'0310
    00005FF6 05FE                   MOV.L       @(R0,R15),R5
    00005FF8 430B                   JSR         @R3
    00005FFA E403                   MOV         #3,R4
          EDIT.c  4263        iHandle2=Bfile_OpenMainMemory(sFile2);
    00005FFC 9043                   MOV.W       L5275+2,R0 ; H'0310
    00005FFE D32E                   MOV.L       L5275+52,R3; _Bfile_OpenMainMemory
    00006000 430B                   JSR         @R3
    00006002 04FE                   MOV.L       @(R0,R15),R4
    00006004              L5006:                            
    00006004 9141                   MOV.W       L5275+6,R1 ; H'02CC
          EDIT.c  4264      }
          EDIT.c  4265      if(iHandle2<0)
    00006006 6303                   MOV         R0,R3
    00006008 31FC                   ADD         R15,R1
    0000600A 4311                   CMP/PZ      R3
    0000600C 8D0A                   BT/S        L4758
    0000600E 2102                   MOV.L       R0,@R1
          EDIT.c  4266      {
          EDIT.c  4267        PopupMessage(1,"Cannot open","destination file!",NULL,NULL,NULL);
    00006010 D625                   MOV.L       L5275+36,R6; L1378
    00006012 E100                   MOV         #0,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  299


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006014 2F16                   MOV.L       R1,@-R15
    00006016 6713                   MOV         R1,R7
    00006018 2F16                   MOV.L       R1,@-R15
          EDIT.c  4268        return(0);
    0000601A              L5010:                            
    0000601A D528                   MOV.L       L5275+56,R5; L1373
    0000601C B210                   BSR         _PopupMessage
    0000601E E401                   MOV         #1,R4
    00006020 A0C3                   BRA         L5009
    00006022 0009                   NOP
    00006024              L4758:                            
          EDIT.c  4269      }
          EDIT.c  4270    
          EDIT.c  4271      //Copy loop
          EDIT.c  4272      iPos=0;
    00006024 9032                   MOV.W       L5275+8,R0 ; H'02D4
    00006026 E200                   MOV         #0,R2
    00006028 0F26                   MOV.L       R2,@(R0,R15)
          EDIT.c  4273      iErrFlag=0; 
    0000602A 6323                   MOV         R2,R3
    0000602C 902F                   MOV.W       L5275+10,R0; H'02EC
    0000602E 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  4274      iSize0=iSize;
    00006030 902E                   MOV.W       L5275+12,R0; H'02DC
    00006032 02FE                   MOV.L       @(R0,R15),R2
    00006034 902D                   MOV.W       L5275+14,R0; H'02D8
          EDIT.c  4275      if(iSize0>COPYBUFF) iSize0=COPYBUFF;
    00006036 6123                   MOV         R2,R1
    00006038 932C                   MOV.W       L5275+16,R3; H'0200
    0000603A 0F26                   MOV.L       R2,@(R0,R15)
    0000603C 3137                   CMP/GT      R3,R1
    0000603E 8B01                   BF          L4760
    00006040 9027                   MOV.W       L5275+14,R0; H'02D8
    00006042 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  4276      do{
    00006044              L4760:                            
          EDIT.c  4277        iError=Bfile_ReadFile(iHandle1,sBuff,iSize0,iPos);
    00006044 9022                   MOV.W       L5275+8,R0 ; H'02D4
    00006046 65F3                   MOV         R15,R5
    00006048 D31D                   MOV.L       L5275+60,R3; _Bfile_ReadFile
    0000604A 7504                   ADD         #4,R5
    0000604C 07FE                   MOV.L       @(R0,R15),R7
    0000604E 9020                   MOV.W       L5275+14,R0; H'02D8
    00006050 06FE                   MOV.L       @(R0,R15),R6
    00006052 9020                   MOV.W       L5275+18,R0; H'02D0
    00006054 430B                   JSR         @R3
    00006056 04FE                   MOV.L       @(R0,R15),R4
    00006058 911E                   MOV.W       L5275+20,R1; H'02F0
          EDIT.c  4278        if(iError<0){ iErrFlag=1; break; }
    0000605A 4011                   CMP/PZ      R0
    0000605C 31FC                   ADD         R15,R1
    0000605E 8F0D                   BF/S        L5008
    00006060 2102                   MOV.L       R0,@R1
          EDIT.c  4279        iError=Bfile_WriteFile(iHandle2,sBuff,iSize0);    
    00006062 65F3                   MOV         R15,R5
    00006064 D317                   MOV.L       L5275+64,R3; _Bfile_WriteFile
    00006066 7504                   ADD         #4,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  300


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006068 9013                   MOV.W       L5275+14,R0; H'02D8
    0000606A 06FE                   MOV.L       @(R0,R15),R6
    0000606C 900D                   MOV.W       L5275+6,R0 ; H'02CC
    0000606E 430B                   JSR         @R3
    00006070 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4280        if(iError<0){ iErrFlag=1; break; }
    00006072 4011                   CMP/PZ      R0
    00006074 9110                   MOV.W       L5275+20,R1; H'02F0
    00006076 31FC                   ADD         R15,R1
    00006078 8D26                   BT/S        L4763
    0000607A 2102                   MOV.L       R0,@R1
    0000607C              L5008:                            
    0000607C 9007                   MOV.W       L5275+10,R0; H'02EC
    0000607E E201                   MOV         #1,R2
    00006080 A03B                   BRA         L4762
    00006082 0F26                   MOV.L       R2,@(R0,R15)
    00006084              L5275:                            
    00006084 0204                   .DATA.W     H'0204
    00006086 0310                   .DATA.W     H'0310
    00006088 030C                   .DATA.W     H'030C
    0000608A 02CC                   .DATA.W     H'02CC
    0000608C 02D4                   .DATA.W     H'02D4
    0000608E 02EC                   .DATA.W     H'02EC
    00006090 02DC                   .DATA.W     H'02DC
    00006092 02D8                   .DATA.W     H'02D8
    00006094 0200                   .DATA.W     H'0200
    00006096 02D0                   .DATA.W     H'02D0
    00006098 02F0                   .DATA.W     H'02F0
    0000609A 0000                   .DATA.W     0
    0000609C <00000000>             .DATA.L     _Bfile_OpenFile
    000060A0 <00000000>             .DATA.L     _Bfile_DeleteMainMemory
    000060A4 <00000000>             .DATA.L     _Bfile_CreateMainMemory
    000060A8 <00000000>             .DATA.L     L1378
    000060AC <00000000>             .DATA.L     L1377
    000060B0 <00000000>             .DATA.L     L500
    000060B4 <00000000>             .DATA.L     _MainDirectory
    000060B8 <00000000>             .DATA.L     _Bfile_OpenMainMemory
    000060BC <00000000>             .DATA.L     L1373
    000060C0 <00000000>             .DATA.L     _Bfile_ReadFile
    000060C4 <00000000>             .DATA.L     _Bfile_WriteFile
    000060C8              L4763:                            
          EDIT.c  4281        iPos=iPos+iSize0;
    000060C8 907B                   MOV.W       L5276,R0   ; H'02D4
    000060CA 03FE                   MOV.L       @(R0,R15),R3
    000060CC 907A                   MOV.W       L5276+2,R0 ; H'02D8
    000060CE 01FE                   MOV.L       @(R0,R15),R1
    000060D0 9077                   MOV.W       L5276,R0   ; H'02D4
    000060D2 313C                   ADD         R3,R1
    000060D4 0F16                   MOV.L       R1,@(R0,R15)
          EDIT.c  4282        if(iPos>=iSize) break;
    000060D6 9076                   MOV.W       L5276+4,R0 ; H'02DC
    000060D8 03FE                   MOV.L       @(R0,R15),R3
    000060DA 3133                   CMP/GE      R3,R1
    000060DC 890D                   BT          L4762
          EDIT.c  4283        iSize0=iSize-iPos;
    000060DE 9070                   MOV.W       L5276,R0   ; H'02D4
          EDIT.c  4284        if(iSize0>COPYBUFF) iSize0=COPYBUFF;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  301


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000060E0 9172                   MOV.W       L5276+6,R1 ; H'0200
    000060E2 03FE                   MOV.L       @(R0,R15),R3
    000060E4 906F                   MOV.W       L5276+4,R0 ; H'02DC
    000060E6 02FE                   MOV.L       @(R0,R15),R2
    000060E8 906C                   MOV.W       L5276+2,R0 ; H'02D8
    000060EA 3238                   SUB         R3,R2
    000060EC 0F26                   MOV.L       R2,@(R0,R15)
    000060EE 3217                   CMP/GT      R1,R2
    000060F0 8BA8                   BF          L4760
    000060F2 9169                   MOV.W       L5276+6,R1 ; H'0200
    000060F4 9066                   MOV.W       L5276+2,R0 ; H'02D8
          EDIT.c  4285      }while(1);
    000060F6 AFA5                   BRA         L4760
    000060F8 0F16                   MOV.L       R1,@(R0,R15)
    000060FA              L4762:                            
          EDIT.c  4286      
          EDIT.c  4287      //Add additional spaces at end (main memory only)
          EDIT.c  4288      if(strcmp(sRoot2,"main")==0)
    000060FA D538                   MOV.L       L5276+26,R5; L620
    000060FC 9065                   MOV.W       L5276+8,R0 ; H'02F8
    000060FE D338                   MOV.L       L5276+30,R3; __slow_strcmp1
    00006100 430B                   JSR         @R3
    00006102 04FE                   MOV.L       @(R0,R15),R4
    00006104 2008                   TST         R0,R0
    00006106 8B2B                   BF          L4766
          EDIT.c  4289      {
          EDIT.c  4290        iSpaces=((iSize%4)!=0?4-(iSize%4):0);
    00006108 905D                   MOV.W       L5276+4,R0 ; H'02DC
    0000610A 00FE                   MOV.L       @(R0,R15),R0
    0000610C 4011                   CMP/PZ      R0
    0000610E 8B01                   BF          L4768
    00006110 A005                   BRA         L4769
    00006112 C903                   AND         #3,R0
    00006114              L4768:                            
    00006114 6007                   NOT         R0,R0
    00006116 7001                   ADD         #1,R0
    00006118 C903                   AND         #3,R0
    0000611A 6007                   NOT         R0,R0
    0000611C 7001                   ADD         #1,R0
    0000611E              L4769:                            
    0000611E 2008                   TST         R0,R0
    00006120 890D                   BT          L4767
    00006122 9050                   MOV.W       L5276+4,R0 ; H'02DC
    00006124 00FE                   MOV.L       @(R0,R15),R0
    00006126 4011                   CMP/PZ      R0
    00006128 8F02                   BF/S        L4770
    0000612A E304                   MOV         #4,R3
    0000612C A005                   BRA         L4771
    0000612E C903                   AND         #3,R0
    00006130              L4770:                            
    00006130 6007                   NOT         R0,R0
    00006132 7001                   ADD         #1,R0
    00006134 C903                   AND         #3,R0
    00006136 6007                   NOT         R0,R0
    00006138 7001                   ADD         #1,R0
    0000613A              L4771:                            
    0000613A A001                   BRA         L4772




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  302


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000613C 3308                   SUB         R0,R3
    0000613E              L4767:                            
    0000613E E300                   MOV         #0,R3
    00006140              L4772:                            
    00006140 9044                   MOV.W       L5276+10,R0; H'02E0
          EDIT.c  4291        if(iSpaces>0)
    00006142 4315                   CMP/PL      R3
    00006144 8F0C                   BF/S        L4766
    00006146 0F36                   MOV.L       R3,@(R0,R15)
          EDIT.c  4292        { 
          EDIT.c  4293          memset(sSpaces,' ',4);
    00006148 D126                   MOV.L       L5276+34,R1; _memset
    0000614A E604                   MOV         #4,R6
    0000614C E520                   MOV         #32,R5
    0000614E 410B                   JSR         @R1
    00006150 64F3                   MOV         R15,R4
          EDIT.c  4294          Bfile_WriteFile(iHandle2,sSpaces,iSpaces);
    00006152 65F3                   MOV         R15,R5
    00006154 D324                   MOV.L       L5276+38,R3; _Bfile_WriteFile
    00006156 9039                   MOV.W       L5276+10,R0; H'02E0
    00006158 06FE                   MOV.L       @(R0,R15),R6
    0000615A 9038                   MOV.W       L5276+12,R0; H'02CC
    0000615C 430B                   JSR         @R3
    0000615E 04FE                   MOV.L       @(R0,R15),R4
    00006160              L4766:                            
          EDIT.c  4295        }
          EDIT.c  4296      }
          EDIT.c  4297      
          EDIT.c  4298      //Close files
          EDIT.c  4299      Bfile_CloseFile(iHandle1);
    00006160 9036                   MOV.W       L5276+14,R0; H'02D0
    00006162 D322                   MOV.L       L5276+42,R3; _Bfile_CloseFile
    00006164 430B                   JSR         @R3
    00006166 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4300      Bfile_CloseFile(iHandle2);
    00006168 9031                   MOV.W       L5276+12,R0; H'02CC
    0000616A D320                   MOV.L       L5276+42,R3; _Bfile_CloseFile
    0000616C 430B                   JSR         @R3
    0000616E 04FE                   MOV.L       @(R0,R15),R4
          EDIT.c  4301      
          EDIT.c  4302      //Error while copying files
          EDIT.c  4303      if(iErrFlag==1)
    00006170 902F                   MOV.W       L5276+16,R0; H'02EC
    00006172 00FE                   MOV.L       @(R0,R15),R0
    00006174 8801                   CMP/EQ      #1,R0
    00006176 8B1E                   BF          L4774
          EDIT.c  4304      {
          EDIT.c  4305        if(strcmp(sRoot2,"main")!=0)
    00006178 D518                   MOV.L       L5276+26,R5; L620
    0000617A 9026                   MOV.W       L5276+8,R0 ; H'02F8
    0000617C D318                   MOV.L       L5276+30,R3; __slow_strcmp1
    0000617E 430B                   JSR         @R3
    00006180 04FE                   MOV.L       @(R0,R15),R4
    00006182 2008                   TST         R0,R0
    00006184 8905                   BT          L4775
          EDIT.c  4306          Bfile_DeleteFile(sFont2);
    00006186 9425                   MOV.W       L5276+18,R4; H'0204




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  303


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006188 D319                   MOV.L       L5276+46,R3; _Bfile_DeleteFile
    0000618A 430B                   JSR         @R3
    0000618C 34FC                   ADD         R15,R4
    0000618E A004                   BRA         L4776
    00006190 0009                   NOP
    00006192              L4775:                            
          EDIT.c  4307        else
          EDIT.c  4308          Bfile_DeleteMainMemory(sFile2);
    00006192 9020                   MOV.W       L5276+20,R0; H'0310
    00006194 D317                   MOV.L       L5276+50,R3; _Bfile_DeleteMainMemory
    00006196 430B                   JSR         @R3
    00006198 04FE                   MOV.L       @(R0,R15),R4
    0000619A              L4776:                            
          EDIT.c  4309        PopupMessage(1,"Error while","Copying file!",NULL,NULL,NULL);
    0000619A E200                   MOV         #0,R2
    0000619C D616                   MOV.L       L5276+54,R6; L1388
    0000619E 6723                   MOV         R2,R7
    000061A0 D516                   MOV.L       L5276+58,R5; L1038
    000061A2 2F26                   MOV.L       R2,@-R15
    000061A4 2F26                   MOV.L       R2,@-R15
    000061A6 B14B                   BSR         _PopupMessage
    000061A8 E401                   MOV         #1,R4
          EDIT.c  4310        return(0);
    000061AA              L5009:                            
    000061AA 7F08                   ADD         #8,R15
    000061AC 9114                   MOV.W       L5276+22,R1; H'0308
    000061AE 3F1C                   ADD         R1,R15
    000061B0 4F26                   LDS.L       @R15+,PR
    000061B2 000B                   RTS
    000061B4 E000                   MOV         #0,R0
    000061B6              L4774:                            
          EDIT.c  4311      }
          EDIT.c  4312      
          EDIT.c  4313      //Return code
          EDIT.c  4314      return(1);
    000061B6 E001                   MOV         #1,R0
          EDIT.c  4315    }
    000061B8              L4751:                            
    000061B8 910E                   MOV.W       L5276+22,R1; H'0308
    000061BA 3F1C                   ADD         R1,R15
    000061BC 4F26                   LDS.L       @R15+,PR
    000061BE 000B                   RTS
    000061C0 0009                   NOP
    000061C2              L5276:                            
    000061C2 02D4                   .DATA.W     H'02D4
    000061C4 02D8                   .DATA.W     H'02D8
    000061C6 02DC                   .DATA.W     H'02DC
    000061C8 0200                   .DATA.W     H'0200
    000061CA 02F8                   .DATA.W     H'02F8
    000061CC 02E0                   .DATA.W     H'02E0
    000061CE 02CC                   .DATA.W     H'02CC
    000061D0 02D0                   .DATA.W     H'02D0
    000061D2 02EC                   .DATA.W     H'02EC
    000061D4 0204                   .DATA.W     H'0204
    000061D6 0310                   .DATA.W     H'0310
    000061D8 0308                   .DATA.W     H'0308
    000061DA 0000                   .DATA.W     0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  304


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000061DC <00000000>             .DATA.L     L620
    000061E0 <00000000>             .DATA.L     __slow_strcmp1
    000061E4 <00000000>             .DATA.L     _memset
    000061E8 <00000000>             .DATA.L     _Bfile_WriteFile
    000061EC <00000000>             .DATA.L     _Bfile_CloseFile
    000061F0 <00000000>             .DATA.L     _Bfile_DeleteFile
    000061F4 <00000000>             .DATA.L     _Bfile_DeleteMainMemory
    000061F8 <00000000>             .DATA.L     L1388
    000061FC <00000000>             .DATA.L     L1038
          EDIT.c  4316    
          EDIT.c  4317    // ----------------------------------------------------------------
          EDIT.c  4318    // Delete file
          EDIT.c  4319    int DeleteFile(char *sRoot, char *sFolder, char *sFile)
    00006200              _DeleteFile:                     ; function: DeleteFile
                                                           ; frame size=128
                                                           ; used runtime library name:
                                                           ; __slow_strcmp1
    00006200 2FE6                   MOV.L       R14,@-R15
    00006202 2FD6                   MOV.L       R13,@-R15
    00006204 4F22                   STS.L       PR,@-R15
    00006206 6D63                   MOV         R6,R13
          EDIT.c  4320    {
          EDIT.c  4321      //Variables
          EDIT.c  4322      int iError;
          EDIT.c  4323      FONTCHARACTER sFont[MAXPATH];
          EDIT.c  4324      
          EDIT.c  4325      //Delete file from main memory
          EDIT.c  4326      if(strcmp(sRoot,"main")==0)
    00006208 D351                   MOV.L       L5277+4,R3 ; __slow_strcmp1
    0000620A 7F94                   ADD         #-108,R15
    0000620C 2F42                   MOV.L       R4,@R15
    0000620E 1F51                   MOV.L       R5,@(4,R15)
    00006210 D54E                   MOV.L       L5277,R5   ; L620
    00006212 430B                   JSR         @R3
    00006214 64F2                   MOV.L       @R15,R4
    00006216 2008                   TST         R0,R0
    00006218 8B0A                   BF          L4777
          EDIT.c  4327      {
          EDIT.c  4328        iError=Bfile_DeleteMainMemory(sFile);
    0000621A D34E                   MOV.L       L5277+8,R3 ; _Bfile_DeleteMainMemory
    0000621C 430B                   JSR         @R3
    0000621E 64D3                   MOV         R13,R4
          EDIT.c  4329        MainDirectory(DELETE,sFile,"");
    00006220 D64D                   MOV.L       L5277+12,R6; L500
    00006222 65D3                   MOV         R13,R5
    00006224 D24D                   MOV.L       L5277+16,R2; _MainDirectory
    00006226 6E03                   MOV         R0,R14
    00006228 420B                   JSR         @R2
    0000622A E404                   MOV         #4,R4
    0000622C A00C                   BRA         L4778
    0000622E 0009                   NOP
    00006230              L4777:                            
          EDIT.c  4330      }
          EDIT.c  4331      else
          EDIT.c  4332      {
          EDIT.c  4333        FilePath(sRoot,sFolder,sFile,sFont);
    00006230 55F1                   MOV.L       @(4,R15),R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  305


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006232 67F3                   MOV         R15,R7
    00006234 D34A                   MOV.L       L5277+20,R3; _FilePath
    00006236 66D3                   MOV         R13,R6
    00006238 7708                   ADD         #8,R7
    0000623A 430B                   JSR         @R3
    0000623C 64F2                   MOV.L       @R15,R4
          EDIT.c  4334        iError=Bfile_DeleteFile(sFont);
    0000623E 64F3                   MOV         R15,R4
    00006240 D248                   MOV.L       L5277+24,R2; _Bfile_DeleteFile
    00006242 420B                   JSR         @R2
    00006244 7408                   ADD         #8,R4
    00006246 6E03                   MOV         R0,R14
    00006248              L4778:                            
          EDIT.c  4335      }
          EDIT.c  4336      
          EDIT.c  4337      //Return code
          EDIT.c  4338      if(iError==0)
    00006248 2EE8                   TST         R14,R14
    0000624A 8B01                   BF          L4779
          EDIT.c  4339      {
          EDIT.c  4340        return(1);
    0000624C A00A                   BRA         L4780
    0000624E E001                   MOV         #1,R0
    00006250              L4779:                            
          EDIT.c  4341      }
          EDIT.c  4342      else
          EDIT.c  4343      {
          EDIT.c  4344        PopupMessage(1,"Error while","deleting file!",NULL,NULL,NULL);
    00006250 D645                   MOV.L       L5277+28,R6; L1399
    00006252 E300                   MOV         #0,R3
    00006254 D545                   MOV.L       L5277+32,R5; L1038
    00006256 6733                   MOV         R3,R7
    00006258 2F36                   MOV.L       R3,@-R15
    0000625A 2F36                   MOV.L       R3,@-R15
    0000625C B0F0                   BSR         _PopupMessage
    0000625E E401                   MOV         #1,R4
    00006260 7F08                   ADD         #8,R15
          EDIT.c  4345        return(0);
    00006262 E000                   MOV         #0,R0
          EDIT.c  4346      }
          EDIT.c  4347    }
    00006264              L4780:                            
    00006264 7F6C                   ADD         #108,R15
    00006266 4F26                   LDS.L       @R15+,PR
    00006268 6DF6                   MOV.L       @R15+,R13
    0000626A 000B                   RTS
    0000626C 6EF6                   MOV.L       @R15+,R14
          EDIT.c  4348    
          EDIT.c  4349    // ----------------------------------------------------------------
          EDIT.c  4350    // Convert new line in text buffer from LF to CR+LF
          EDIT.c  4351    void ConvertNewLine2CRLF(char *sText)
    0000626E              _ConvertNewLine2CRLF:            ; function: ConvertNewLine2CRLF
                                                           ; frame size=20
    0000626E 2FE6                   MOV.L       R14,@-R15
    00006270 2FD6                   MOV.L       R13,@-R15
    00006272 6E43                   MOV         R4,R14
    00006274 2FC6                   MOV.L       R12,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  306


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006276 2FB6                   MOV.L       R11,@-R15
    00006278 4F22                   STS.L       PR,@-R15
          EDIT.c  4352    {
          EDIT.c  4353      //Variables
          EDIT.c  4354      int i,j;  //Counters
          EDIT.c  4355      int iLen; //String length
          EDIT.c  4356      int iPtr; //String pointer
          EDIT.c  4357      
          EDIT.c  4358      //Conversion loop
          EDIT.c  4359      j=0;
          EDIT.c  4360      iLen=strlen(sText);
    0000627A DC3D                   MOV.L       L5277+36,R12; _strlen
    0000627C 4C0B                   JSR         @R12
    0000627E ED00                   MOV         #0,R13
    00006280 6403                   MOV         R0,R4
    00006282 EB0D                   MOV         #13,R11
          EDIT.c  4361      do
    00006284              L4782:                            
          EDIT.c  4362      {
          EDIT.c  4363        if(sText[j]==NEWLINELF)
    00006284 60D3                   MOV         R13,R0
    00006286 00EC                   MOV.B       @(R0,R14),R0
    00006288 880A                   CMP/EQ      #10,R0
    0000628A 8B15                   BF          L4783
          EDIT.c  4364        {
          EDIT.c  4365          iPtr=j;
    0000628C 66D3                   MOV         R13,R6
          EDIT.c  4366          for(i=iLen+1;i>iPtr;i--) sText[i]=sText[i-1];
    0000628E 7401                   ADD         #1,R4
    00006290 6543                   MOV         R4,R5
    00006292 75FF                   ADD         #-1,R5
    00006294 35EC                   ADD         R14,R5
    00006296 6743                   MOV         R4,R7
    00006298 37EC                   ADD         R14,R7
    0000629A 3467                   CMP/GT      R6,R4
    0000629C 8F06                   BF/S        L4784
    0000629E 7701                   ADD         #1,R7
    000062A0              L4785:                            
    000062A0 6350                   MOV.B       @R5,R3
    000062A2 74FF                   ADD         #-1,R4
    000062A4 2734                   MOV.B       R3,@-R7
    000062A6 3467                   CMP/GT      R6,R4
    000062A8 8DFA                   BT/S        L4785
    000062AA 75FF                   ADD         #-1,R5
    000062AC              L4784:                            
          EDIT.c  4367          sText[iPtr]=NEWLINECR;
    000062AC 6063                   MOV         R6,R0
    000062AE 0EB4                   MOV.B       R11,@(R0,R14)
          EDIT.c  4368          iLen=strlen(sText);
    000062B0 4C0B                   JSR         @R12
    000062B2 64E3                   MOV         R14,R4
    000062B4 6403                   MOV         R0,R4
          EDIT.c  4369          j++;
    000062B6 7D01                   ADD         #1,R13
    000062B8              L4783:                            
          EDIT.c  4370        }
          EDIT.c  4371        j++;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  307


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000062B8 7D01                   ADD         #1,R13
          EDIT.c  4372      }while(j<iLen);
    000062BA 3D43                   CMP/GE      R4,R13
    000062BC 8BE2                   BF          L4782
          EDIT.c  4373    }
    000062BE 4F26                   LDS.L       @R15+,PR
    000062C0 6BF6                   MOV.L       @R15+,R11
    000062C2 6CF6                   MOV.L       @R15+,R12
    000062C4 6DF6                   MOV.L       @R15+,R13
    000062C6 000B                   RTS
    000062C8 6EF6                   MOV.L       @R15+,R14
          EDIT.c  4374    
          EDIT.c  4375    // ----------------------------------------------------------------
          EDIT.c  4376    // Convert new line in text buffer from CR+LF to LF
          EDIT.c  4377    void ConvertNewLine2LF(char *sText)
    000062CA              _ConvertNewLine2LF:              ; function: ConvertNewLine2LF
                                                           ; frame size=16
    000062CA 2FE6                   MOV.L       R14,@-R15
    000062CC 2FD6                   MOV.L       R13,@-R15
    000062CE 6D43                   MOV         R4,R13
    000062D0 2FC6                   MOV.L       R12,@-R15
    000062D2 4F22                   STS.L       PR,@-R15
          EDIT.c  4378    {
          EDIT.c  4379      //Variables
          EDIT.c  4380      int i,j;  //Counters
          EDIT.c  4381      int iLen; //String length
          EDIT.c  4382      int iPtr; //String pointer
          EDIT.c  4383      
          EDIT.c  4384      //Conversion loop
          EDIT.c  4385      j=0;
          EDIT.c  4386      iLen=strlen(sText);
    000062D4 DC26                   MOV.L       L5277+36,R12; _strlen
    000062D6 4C0B                   JSR         @R12
    000062D8 EE00                   MOV         #0,R14
    000062DA 6603                   MOV         R0,R6
          EDIT.c  4387      do
    000062DC              L4786:                            
          EDIT.c  4388      {
          EDIT.c  4389        if(sText[j]==NEWLINECR)
    000062DC 60E3                   MOV         R14,R0
    000062DE 00DC                   MOV.B       @(R0,R13),R0
    000062E0 880D                   CMP/EQ      #13,R0
    000062E2 8B0D                   BF          L4787
          EDIT.c  4390        {
          EDIT.c  4391          iPtr=j;
    000062E4 65E3                   MOV         R14,R5
    000062E6 64E3                   MOV         R14,R4
          EDIT.c  4392          for(i=iPtr;i<=iLen;i++) sText[i]=sText[i+1];
    000062E8 3567                   CMP/GT      R6,R5
    000062EA 8D06                   BT/S        L4788
    000062EC 34DC                   ADD         R13,R4
    000062EE              L4789:                            
    000062EE 7501                   ADD         #1,R5
    000062F0 8441                   MOV.B       @(1,R4),R0
    000062F2 3567                   CMP/GT      R6,R5
    000062F4 2400                   MOV.B       R0,@R4
    000062F6 8FFA                   BF/S        L4789




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  308


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000062F8 7401                   ADD         #1,R4
    000062FA              L4788:                            
          EDIT.c  4393          iLen=strlen(sText);
    000062FA 4C0B                   JSR         @R12
    000062FC 64D3                   MOV         R13,R4
    000062FE 6603                   MOV         R0,R6
    00006300              L4787:                            
          EDIT.c  4394        }
          EDIT.c  4395        j++;
    00006300 7E01                   ADD         #1,R14
          EDIT.c  4396      }while(j<iLen);
    00006302 3E63                   CMP/GE      R6,R14
    00006304 8BEA                   BF          L4786
          EDIT.c  4397    }
    00006306 4F26                   LDS.L       @R15+,PR
    00006308 6CF6                   MOV.L       @R15+,R12
    0000630A 6DF6                   MOV.L       @R15+,R13
    0000630C 000B                   RTS
    0000630E 6EF6                   MOV.L       @R15+,R14
          EDIT.c  4398    
          EDIT.c  4399    // ----------------------------------------------------------------
          EDIT.c  4400    // Get user input with mesage
          EDIT.c  4401    int PopupContinueYesNo(char *sLine1, char *sLine2, char *sLine3)
    00006310              _PopupContinueYesNo:             ; function: PopupContinueYesNo
                                                           ; frame size=28
    00006310 2FE6                   MOV.L       R14,@-R15
    00006312 2FD6                   MOV.L       R13,@-R15
    00006314 2FC6                   MOV.L       R12,@-R15
    00006316 6D43                   MOV         R4,R13
          EDIT.c  4402    {
          EDIT.c  4403      //Variables
          EDIT.c  4404      int iAnswer;
          EDIT.c  4405      int iLines;
          EDIT.c  4406      
          EDIT.c  4407      //Hide keyboard status
          EDIT.c  4408      KeyboardStatusHideStore();
    00006318 D316                   MOV.L       L5277+40,R3; _KeyboardStatusHideStore
    0000631A 2FB6                   MOV.L       R11,@-R15
    0000631C 2FA6                   MOV.L       R10,@-R15
    0000631E 6B53                   MOV         R5,R11
    00006320 2F96                   MOV.L       R9,@-R15
    00006322 4F22                   STS.L       PR,@-R15
    00006324 430B                   JSR         @R3
    00006326 6C63                   MOV         R6,R12
          EDIT.c  4409      KeyboardStatusHide(1);
    00006328 D213                   MOV.L       L5277+44,R2; _KeyboardStatusHide
    0000632A 420B                   JSR         @R2
    0000632C E401                   MOV         #1,R4
          EDIT.c  4410      
          EDIT.c  4411      //Number of lines
          EDIT.c  4412      iLines=0;
    0000632E EA00                   MOV         #0,R10
          EDIT.c  4413      if(sLine1!=NULL) iLines++;
    00006330 2DD8                   TST         R13,R13
    00006332 8D01                   BT/S        L4790
    00006334 6EA3                   MOV         R10,R14
    00006336 7E01                   ADD         #1,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  309


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006338              L4790:                            
          EDIT.c  4414      if(sLine2!=NULL) iLines++;
    00006338 2BB8                   TST         R11,R11
    0000633A 8900                   BT          L4791
    0000633C 7E01                   ADD         #1,R14
    0000633E              L4791:                            
          EDIT.c  4415      if(sLine3!=NULL) iLines++;
    0000633E 2CC8                   TST         R12,R12
    00006340 8900                   BT          L4792
    00006342 7E01                   ADD         #1,R14
    00006344              L4792:                            
          EDIT.c  4416      if(iLines==0) return(-1);
    00006344 2EE8                   TST         R14,R14
    00006346 8B19                   BF          L4793
    00006348 A059                   BRA         L4794
    0000634A E0FF                   MOV         #-1,R0
    0000634C              L5277:                            
    0000634C <00000000>             .DATA.L     L620
    00006350 <00000000>             .DATA.L     __slow_strcmp1
    00006354 <00000000>             .DATA.L     _Bfile_DeleteMainMemory
    00006358 <00000000>             .DATA.L     L500
    0000635C <00000000>             .DATA.L     _MainDirectory
    00006360 <00000000>             .DATA.L     _FilePath
    00006364 <00000000>             .DATA.L     _Bfile_DeleteFile
    00006368 <00000000>             .DATA.L     L1399
    0000636C <00000000>             .DATA.L     L1038
    00006370 <00000000>             .DATA.L     _strlen
    00006374 <00000000>             .DATA.L     _KeyboardStatusHideStore
    00006378 <00000000>             .DATA.L     _KeyboardStatusHide
    0000637C              L4793:                            
          EDIT.c  4417      
          EDIT.c  4418      //Save display & menu bar
          EDIT.c  4419      SaveDisp(SAVEDISP_PAGE2);
    0000637C D326                   MOV.L       L5278+10,R3; _SaveDisp
    0000637E 430B                   JSR         @R3
    00006380 E405                   MOV         #5,R4
          EDIT.c  4420      MenuStoreBar();
    00006382 D226                   MOV.L       L5278+14,R2; _MenuStoreBar
    00006384 420B                   JSR         @R2
    00006386 0009                   NOP
          EDIT.c  4421    
          EDIT.c  4422      //Write popup window
          EDIT.c  4423      PopUpWin(iLines);
    00006388 D325                   MOV.L       L5278+18,R3; _PopUpWin
    0000638A 430B                   JSR         @R3
    0000638C 64E3                   MOV         R14,R4
          EDIT.c  4424      if(sLine1!=NULL){ locate(3,3); Print(sLine1); }
    0000638E 2DD8                   TST         R13,R13
    00006390 D924                   MOV.L       L5278+22,R9; _locate
    00006392 DE25                   MOV.L       L5278+26,R14; _Print
    00006394 8904                   BT          L4795
    00006396 E503                   MOV         #3,R5
    00006398 490B                   JSR         @R9
    0000639A 6453                   MOV         R5,R4
    0000639C 4E0B                   JSR         @R14
    0000639E 64D3                   MOV         R13,R4
    000063A0              L4795:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  310


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4425      if(sLine2!=NULL){ locate(3,4); Print(sLine2); }
    000063A0 2BB8                   TST         R11,R11
    000063A2 8904                   BT          L4796
    000063A4 E504                   MOV         #4,R5
    000063A6 490B                   JSR         @R9
    000063A8 E403                   MOV         #3,R4
    000063AA 4E0B                   JSR         @R14
    000063AC 64B3                   MOV         R11,R4
    000063AE              L4796:                            
          EDIT.c  4426      if(sLine3!=NULL){ locate(3,5); Print(sLine3); }
    000063AE 2CC8                   TST         R12,R12
    000063B0 8904                   BT          L4797
    000063B2 E505                   MOV         #5,R5
    000063B4 490B                   JSR         @R9
    000063B6 E403                   MOV         #3,R4
    000063B8 4E0B                   JSR         @R14
    000063BA 64C3                   MOV         R12,R4
    000063BC              L4797:                            
          EDIT.c  4427      MenuSetBar(MENUBARYESN);
    000063BC D31B                   MOV.L       L5278+30,R3; _MenuSetBar
    000063BE 430B                   JSR         @R3
    000063C0 E404                   MOV         #4,R4
          EDIT.c  4428    
          EDIT.c  4429      //Wait for key
          EDIT.c  4430      switch(GetKeyb())
    000063C2 D21B                   MOV.L       L5278+34,R2; _GetKeyb
    000063C4 420B                   JSR         @R2
    000063C6 0009                   NOP
    000063C8 9121                   MOV.W       L5278,R1   ; H'7539
    000063CA 3010                   CMP/EQ      R1,R0
    000063CC 890C                   BT          L5012
    000063CE 911F                   MOV.W       L5278+2,R1 ; H'753E
    000063D0 3010                   CMP/EQ      R1,R0
    000063D2 8907                   BT          L5011
    000063D4 911D                   MOV.W       L5278+4,R1 ; H'7532
    000063D6 3010                   CMP/EQ      R1,R0
    000063D8 8904                   BT          L2970
    000063DA 911B                   MOV.W       L5278+6,R1 ; H'7534
    000063DC 3010                   CMP/EQ      R1,R0
    000063DE 8903                   BT          L2971
    000063E0 A003                   BRA         L4798
    000063E2 0009                   NOP
    000063E4              L2970:                           ; case label 
          EDIT.c  4431      {
          EDIT.c  4432        case KEY_CTRL_F1:   iAnswer=1; break;
          EDIT.c  4433        case KEY_CTRL_F6:   iAnswer=0; break;
          EDIT.c  4434        case KEY_CTRL_EXIT: iAnswer=0; break;
    000063E4              L5011:                            
    000063E4 A001                   BRA         L4798
    000063E6 6EA3                   MOV         R10,R14
    000063E8              L2971:                           ; case label 
          EDIT.c  4435        case KEY_CTRL_EXE:  iAnswer=1; break;
    000063E8              L5012:                            
    000063E8 EE01                   MOV         #1,R14
    000063EA              L4798:                            
          EDIT.c  4436      }
          EDIT.c  4437      




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  311


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4438      //Restore display & Menu bar
          EDIT.c  4439      RestoreDisp(SAVEDISP_PAGE2);
    000063EA D312                   MOV.L       L5278+38,R3; _RestoreDisp
    000063EC 430B                   JSR         @R3
    000063EE E405                   MOV         #5,R4
          EDIT.c  4440      MenuRestoreBar();
    000063F0 D211                   MOV.L       L5278+42,R2; _MenuRestoreBar
    000063F2 420B                   JSR         @R2
    000063F4 0009                   NOP
          EDIT.c  4441      
          EDIT.c  4442      //Unhide keyboard status
          EDIT.c  4443      KeyboardStatusHideRestore();
    000063F6 D311                   MOV.L       L5278+46,R3; _KeyboardStatusHideRestore
    000063F8 430B                   JSR         @R3
    000063FA 0009                   NOP
          EDIT.c  4444      
          EDIT.c  4445      //Return result
          EDIT.c  4446      return(iAnswer);  
    000063FC 60E3                   MOV         R14,R0
          EDIT.c  4447    
          EDIT.c  4448    }
    000063FE              L4794:                            
    000063FE 4F26                   LDS.L       @R15+,PR
    00006400 69F6                   MOV.L       @R15+,R9
    00006402 6AF6                   MOV.L       @R15+,R10
    00006404 6BF6                   MOV.L       @R15+,R11
    00006406 6CF6                   MOV.L       @R15+,R12
    00006408 6DF6                   MOV.L       @R15+,R13
    0000640A 000B                   RTS
    0000640C 6EF6                   MOV.L       @R15+,R14
    0000640E              L5278:                            
    0000640E 7539                   .DATA.W     H'7539
    00006410 753E                   .DATA.W     H'753E
    00006412 7532                   .DATA.W     H'7532
    00006414 7534                   .DATA.W     H'7534
    00006416 0000                   .DATA.W     0
    00006418 <00000000>             .DATA.L     _SaveDisp
    0000641C <00000000>             .DATA.L     _MenuStoreBar
    00006420 <00000000>             .DATA.L     _PopUpWin
    00006424 <00000000>             .DATA.L     _locate
    00006428 <00000000>             .DATA.L     _Print
    0000642C <00000000>             .DATA.L     _MenuSetBar
    00006430 <00000000>             .DATA.L     _GetKeyb
    00006434 <00000000>             .DATA.L     _RestoreDisp
    00006438 <00000000>             .DATA.L     _MenuRestoreBar
    0000643C <00000000>             .DATA.L     _KeyboardStatusHideRestore
          EDIT.c  4449    
          EDIT.c  4450    // ----------------------------------------------------------------
          EDIT.c  4451    // Get user input with mesage
          EDIT.c  4452    void PopupMessage(int iWait,char *sLine1, char *sLine2, 
    00006440              _PopupMessage:                   ; function: PopupMessage
                                                           ; frame size=32
    00006440 2FE6                   MOV.L       R14,@-R15
    00006442 2FD6                   MOV.L       R13,@-R15
    00006444 2FC6                   MOV.L       R12,@-R15
    00006446 6C43                   MOV         R4,R12
    00006448 2FB6                   MOV.L       R11,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  312


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000644A 2FA6                   MOV.L       R10,@-R15
    0000644C 2F96                   MOV.L       R9,@-R15
    0000644E 6A53                   MOV         R5,R10
    00006450 2F86                   MOV.L       R8,@-R15
    00006452 6963                   MOV         R6,R9
    00006454 4F22                   STS.L       PR,@-R15
    00006456 6873                   MOV         R7,R8
          EDIT.c  4453                      char *sLine3,char *sLine4,char *sLine5)
          EDIT.c  4454    {
          EDIT.c  4455      //Variables
          EDIT.c  4456      int iLines;
          EDIT.c  4457    
          EDIT.c  4458      //Number of lines
          EDIT.c  4459      iLines=0;
          EDIT.c  4460      if(sLine1!=NULL) iLines++;
    00006458 2AA8                   TST         R10,R10
    0000645A 8D01                   BT/S        L4799
    0000645C EB00                   MOV         #0,R11
    0000645E 7B01                   ADD         #1,R11
    00006460              L4799:                            
          EDIT.c  4461      if(sLine2!=NULL) iLines++;
    00006460 2998                   TST         R9,R9
    00006462 8900                   BT          L4800
    00006464 7B01                   ADD         #1,R11
    00006466              L4800:                            
          EDIT.c  4462      if(sLine3!=NULL) iLines++;
    00006466 2888                   TST         R8,R8
    00006468 8900                   BT          L4801
    0000646A 7B01                   ADD         #1,R11
    0000646C              L4801:                            
          EDIT.c  4463      if(sLine4!=NULL) iLines++;
    0000646C 52F8                   MOV.L       @(32,R15),R2
    0000646E 2228                   TST         R2,R2
    00006470 8900                   BT          L4802
    00006472 7B01                   ADD         #1,R11
    00006474              L4802:                            
          EDIT.c  4464      if(sLine5!=NULL) iLines++;
    00006474 53F9                   MOV.L       @(36,R15),R3
    00006476 2338                   TST         R3,R3
    00006478 8900                   BT          L4803
    0000647A 7B01                   ADD         #1,R11
    0000647C              L4803:                            
          EDIT.c  4465      if(iLines==0) return;
    0000647C 2BB8                   TST         R11,R11
    0000647E 8B01                   BF          L5279
    00006480 A0A0                   BRA         L4805
    00006482 0009                   NOP
    00006484              L5279:                            
          EDIT.c  4466      
          EDIT.c  4467      //Save display & menu bar
          EDIT.c  4468      if(iWait==1) SaveDisp(SAVEDISP_PAGE2);
    00006484 60C3                   MOV         R12,R0
    00006486 8801                   CMP/EQ      #1,R0
    00006488 8B14                   BF          L4809
    0000648A D353                   MOV.L       L5280+2,R3 ; _SaveDisp
    0000648C 430B                   JSR         @R3
    0000648E E405                   MOV         #5,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  313


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4469      if(iWait==1) MenuStoreBar();
    00006490 60C3                   MOV         R12,R0
    00006492 8801                   CMP/EQ      #1,R0
    00006494 8B0E                   BF          L4809
    00006496 D351                   MOV.L       L5280+6,R3 ; _MenuStoreBar
    00006498 430B                   JSR         @R3
    0000649A 0009                   NOP
          EDIT.c  4470      if(iWait==1) KeyboardStatusHideStore();
    0000649C 60C3                   MOV         R12,R0
    0000649E 8801                   CMP/EQ      #1,R0
    000064A0 8B08                   BF          L4809
    000064A2 D34F                   MOV.L       L5280+10,R3; _KeyboardStatusHideStore
    000064A4 430B                   JSR         @R3
    000064A6 0009                   NOP
          EDIT.c  4471      if(iWait==1) KeyboardStatusHide(1);
    000064A8 60C3                   MOV         R12,R0
    000064AA 8801                   CMP/EQ      #1,R0
    000064AC 8B02                   BF          L4809
    000064AE D34D                   MOV.L       L5280+14,R3; _KeyboardStatusHide
    000064B0 430B                   JSR         @R3
    000064B2 E401                   MOV         #1,R4
    000064B4              L4809:                            
          EDIT.c  4472    
          EDIT.c  4473      //Write popup window
          EDIT.c  4474      PopUpWin(iLines);
    000064B4 D24C                   MOV.L       L5280+18,R2; _PopUpWin
    000064B6 420B                   JSR         @R2
    000064B8 64B3                   MOV         R11,R4
          EDIT.c  4475      switch(iLines)
    000064BA 60B3                   MOV         R11,R0
    000064BC DD4B                   MOV.L       L5280+22,R13; _locate
    000064BE 8801                   CMP/EQ      #1,R0
    000064C0 DE4B                   MOV.L       L5280+26,R14; _Print
    000064C2 8909                   BT          L2972
    000064C4 8802                   CMP/EQ      #2,R0
    000064C6 890C                   BT          L2973
    000064C8 8803                   CMP/EQ      #3,R0
    000064CA 8914                   BT          L2974
    000064CC 8804                   CMP/EQ      #4,R0
    000064CE 8921                   BT          L2975
    000064D0 8805                   CMP/EQ      #5,R0
    000064D2 8933                   BT          L2976
    000064D4 A04C                   BRA         L4810
    000064D6 0009                   NOP
    000064D8              L2972:                           ; case label 
          EDIT.c  4476      {
          EDIT.c  4477        case 1: 
          EDIT.c  4478          locate(3,4); Print(sLine1); 
    000064D8 E504                   MOV         #4,R5
    000064DA 4D0B                   JSR         @R13
    000064DC E403                   MOV         #3,R4
          EDIT.c  4479          break;
    000064DE A045                   BRA         L5016
    000064E0 64A3                   MOV         R10,R4
    000064E2              L2973:                           ; case label 
          EDIT.c  4480        case 2:
          EDIT.c  4481          locate(3,3); Print(sLine1);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  314


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000064E2 E503                   MOV         #3,R5
    000064E4 4D0B                   JSR         @R13
    000064E6 6453                   MOV         R5,R4
    000064E8 4E0B                   JSR         @R14
    000064EA 64A3                   MOV         R10,R4
          EDIT.c  4482          locate(3,4); Print(sLine2);
    000064EC E504                   MOV         #4,R5
    000064EE 4D0B                   JSR         @R13
    000064F0 E403                   MOV         #3,R4
          EDIT.c  4483          break;
    000064F2 A03B                   BRA         L5016
    000064F4 6493                   MOV         R9,R4
    000064F6              L2974:                           ; case label 
          EDIT.c  4484        case 3:
          EDIT.c  4485          locate(3,3); Print(sLine1);
    000064F6 E503                   MOV         #3,R5
    000064F8 4D0B                   JSR         @R13
    000064FA 6453                   MOV         R5,R4
    000064FC 4E0B                   JSR         @R14
    000064FE 64A3                   MOV         R10,R4
          EDIT.c  4486          locate(3,4); Print(sLine2);
    00006500 E504                   MOV         #4,R5
    00006502 4D0B                   JSR         @R13
    00006504 E403                   MOV         #3,R4
    00006506 4E0B                   JSR         @R14
    00006508 6493                   MOV         R9,R4
          EDIT.c  4487          locate(3,5); Print(sLine3);
    0000650A E505                   MOV         #5,R5
    0000650C 4D0B                   JSR         @R13
    0000650E E403                   MOV         #3,R4
          EDIT.c  4488          break;
    00006510 A02C                   BRA         L5016
    00006512 6483                   MOV         R8,R4
    00006514              L2975:                           ; case label 
          EDIT.c  4489        case 4:
          EDIT.c  4490          locate(3,2); Print(sLine1);
    00006514 E502                   MOV         #2,R5
    00006516 4D0B                   JSR         @R13
    00006518 E403                   MOV         #3,R4
    0000651A 4E0B                   JSR         @R14
    0000651C 64A3                   MOV         R10,R4
          EDIT.c  4491          locate(3,3); Print(sLine2);
    0000651E E503                   MOV         #3,R5
    00006520 4D0B                   JSR         @R13
    00006522 6453                   MOV         R5,R4
    00006524 4E0B                   JSR         @R14
    00006526 6493                   MOV         R9,R4
          EDIT.c  4492          locate(3,4); Print(sLine3);
    00006528 E504                   MOV         #4,R5
    0000652A 4D0B                   JSR         @R13
    0000652C E403                   MOV         #3,R4
    0000652E 4E0B                   JSR         @R14
    00006530 6483                   MOV         R8,R4
          EDIT.c  4493          locate(3,5); Print(sLine4);      
    00006532 E505                   MOV         #5,R5
    00006534 4D0B                   JSR         @R13
    00006536 E403                   MOV         #3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  315


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4494          break;
    00006538 A018                   BRA         L5016
    0000653A 54F8                   MOV.L       @(32,R15),R4
    0000653C              L2976:                           ; case label 
          EDIT.c  4495        case 5:
          EDIT.c  4496          locate(3,2); Print(sLine1);
    0000653C E502                   MOV         #2,R5
    0000653E 4D0B                   JSR         @R13
    00006540 E403                   MOV         #3,R4
    00006542 4E0B                   JSR         @R14
    00006544 64A3                   MOV         R10,R4
          EDIT.c  4497          locate(3,3); Print(sLine2);
    00006546 E503                   MOV         #3,R5
    00006548 4D0B                   JSR         @R13
    0000654A 6453                   MOV         R5,R4
    0000654C 4E0B                   JSR         @R14
    0000654E 6493                   MOV         R9,R4
          EDIT.c  4498          locate(3,4); Print(sLine3);
    00006550 E504                   MOV         #4,R5
    00006552 4D0B                   JSR         @R13
    00006554 E403                   MOV         #3,R4
    00006556 4E0B                   JSR         @R14
    00006558 6483                   MOV         R8,R4
          EDIT.c  4499          locate(3,5); Print(sLine4);      
    0000655A E505                   MOV         #5,R5
    0000655C 4D0B                   JSR         @R13
    0000655E E403                   MOV         #3,R4
    00006560 4E0B                   JSR         @R14
    00006562 54F8                   MOV.L       @(32,R15),R4
          EDIT.c  4500          locate(3,6); Print(sLine5);      
    00006564 E506                   MOV         #6,R5
    00006566 4D0B                   JSR         @R13
    00006568 E403                   MOV         #3,R4
    0000656A 54F9                   MOV.L       @(36,R15),R4
          EDIT.c  4501          break;
    0000656C              L5016:                            
    0000656C 4E0B                   JSR         @R14
    0000656E 0009                   NOP
    00006570              L4810:                            
          EDIT.c  4502      }
          EDIT.c  4503      if(iWait==1) MenuSetBar(MENUBARMESS);
    00006570 60C3                   MOV         R12,R0
    00006572 8801                   CMP/EQ      #1,R0
    00006574 8B1A                   BF          L4815
    00006576 D31F                   MOV.L       L5280+30,R3; _MenuSetBar
    00006578 430B                   JSR         @R3
    0000657A E406                   MOV         #6,R4
          EDIT.c  4504    
          EDIT.c  4505      //Wait for key
          EDIT.c  4506      if(iWait==1) GetKeyb();
    0000657C 60C3                   MOV         R12,R0
    0000657E 8801                   CMP/EQ      #1,R0
    00006580 8B14                   BF          L4815
    00006582 D31D                   MOV.L       L5280+34,R3; _GetKeyb
    00006584 430B                   JSR         @R3
    00006586 0009                   NOP
          EDIT.c  4507    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  316


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4508      //Restore display & Menu bar
          EDIT.c  4509      if(iWait==1) RestoreDisp(SAVEDISP_PAGE2);
    00006588 60C3                   MOV         R12,R0
    0000658A 8801                   CMP/EQ      #1,R0
    0000658C 8B0E                   BF          L4815
    0000658E D31B                   MOV.L       L5280+38,R3; _RestoreDisp
    00006590 430B                   JSR         @R3
    00006592 E405                   MOV         #5,R4
          EDIT.c  4510      if(iWait==1) MenuRestoreBar();
    00006594 60C3                   MOV         R12,R0
    00006596 8801                   CMP/EQ      #1,R0
    00006598 8B08                   BF          L4815
    0000659A D319                   MOV.L       L5280+42,R3; _MenuRestoreBar
    0000659C 430B                   JSR         @R3
    0000659E 0009                   NOP
          EDIT.c  4511      if(iWait==1) KeyboardStatusHideRestore();
    000065A0 60C3                   MOV         R12,R0
    000065A2 8801                   CMP/EQ      #1,R0
    000065A4 8B02                   BF          L4815
    000065A6 D317                   MOV.L       L5280+46,R3; _KeyboardStatusHideRestore
    000065A8 430B                   JSR         @R3
    000065AA 0009                   NOP
    000065AC              L4815:                            
          EDIT.c  4512      
          EDIT.c  4513      //Show display it no wait
          EDIT.c  4514      if(iWait==0) Bdisp_PutDisp_DD();
    000065AC 2CC8                   TST         R12,R12
    000065AE 8B09                   BF          L4805
    000065B0 4F26                   LDS.L       @R15+,PR
    000065B2 68F6                   MOV.L       @R15+,R8
    000065B4 D314                   MOV.L       L5280+50,R3; _Bdisp_PutDisp_DD
    000065B6 69F6                   MOV.L       @R15+,R9
    000065B8 6AF6                   MOV.L       @R15+,R10
    000065BA 6BF6                   MOV.L       @R15+,R11
    000065BC 6CF6                   MOV.L       @R15+,R12
    000065BE 6DF6                   MOV.L       @R15+,R13
    000065C0 432B                   JMP         @R3
    000065C2 6EF6                   MOV.L       @R15+,R14
    000065C4              L4805:                            
          EDIT.c  4515    
          EDIT.c  4516    }
    000065C4 4F26                   LDS.L       @R15+,PR
    000065C6 68F6                   MOV.L       @R15+,R8
    000065C8 69F6                   MOV.L       @R15+,R9
    000065CA 6AF6                   MOV.L       @R15+,R10
    000065CC 6BF6                   MOV.L       @R15+,R11
    000065CE 6CF6                   MOV.L       @R15+,R12
    000065D0 6DF6                   MOV.L       @R15+,R13
    000065D2 000B                   RTS
    000065D4 6EF6                   MOV.L       @R15+,R14
    000065D6              L5280:                            
    000065D6 0000                   .DATA.W     0
    000065D8 <00000000>             .DATA.L     _SaveDisp
    000065DC <00000000>             .DATA.L     _MenuStoreBar
    000065E0 <00000000>             .DATA.L     _KeyboardStatusHideStore
    000065E4 <00000000>             .DATA.L     _KeyboardStatusHide
    000065E8 <00000000>             .DATA.L     _PopUpWin




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  317


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000065EC <00000000>             .DATA.L     _locate
    000065F0 <00000000>             .DATA.L     _Print
    000065F4 <00000000>             .DATA.L     _MenuSetBar
    000065F8 <00000000>             .DATA.L     _GetKeyb
    000065FC <00000000>             .DATA.L     _RestoreDisp
    00006600 <00000000>             .DATA.L     _MenuRestoreBar
    00006604 <00000000>             .DATA.L     _KeyboardStatusHideRestore
    00006608 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
          EDIT.c  4517    
          EDIT.c  4518    // ----------------------------------------------------------------
          EDIT.c  4519    // Get memory status
          EDIT.c  4520    void PopupMemory(struct Config *sConfig)
    0000660C              _PopupMemory:                    ; function: PopupMemory
                                                           ; frame size=100
    0000660C 4F22                   STS.L       PR,@-R15
          EDIT.c  4521    {
          EDIT.c  4522      //Variables
          EDIT.c  4523      char sLine[50];
          EDIT.c  4524      int iLines;
          EDIT.c  4525      int iMain=0;
    0000660E E200                   MOV         #0,R2
    00006610 7FB8                   ADD         #-72,R15
    00006612 63F3                   MOV         R15,R3
    00006614 7344                   ADD         #68,R3
          EDIT.c  4526      int iStoM=0;
          EDIT.c  4527      int iSDCr=0;
          EDIT.c  4528      
          EDIT.c  4529      //Get memory status
          EDIT.c  4530      if(Bfile_GetMediaFree(DEVICE_MAIN_MEMORY,&iMain)!=0) iMain=0;
    00006616 65F3                   MOV         R15,R5
    00006618 2342                   MOV.L       R4,@R3
    0000661A 6323                   MOV         R2,R3
    0000661C 1F22                   MOV.L       R2,@(8,R15)
    0000661E 6433                   MOV         R3,R4
    00006620 1F31                   MOV.L       R3,@(4,R15)
    00006622 2F22                   MOV.L       R2,@R15
    00006624 D352                   MOV.L       L5281,R3   ; _Bfile_GetMediaFree
    00006626 430B                   JSR         @R3
    00006628 7508                   ADD         #8,R5
    0000662A 2008                   TST         R0,R0
    0000662C 8901                   BT          L4817
    0000662E E300                   MOV         #0,R3
    00006630 1F32                   MOV.L       R3,@(8,R15)
    00006632              L4817:                            
          EDIT.c  4531      if(Bfile_GetMediaFree(DEVICE_STORAGE    ,&iStoM)!=0) iStoM=0;
    00006632 65F3                   MOV         R15,R5
    00006634 D34E                   MOV.L       L5281,R3   ; _Bfile_GetMediaFree
    00006636 7504                   ADD         #4,R5
    00006638 430B                   JSR         @R3
    0000663A E401                   MOV         #1,R4
    0000663C 2008                   TST         R0,R0
    0000663E 8901                   BT          L4818
    00006640 E300                   MOV         #0,R3
    00006642 1F31                   MOV.L       R3,@(4,R15)
    00006644              L4818:                            
          EDIT.c  4532      if(sConfig->iTrySD==1) if(Bfile_GetMediaFree(DEVICE_SD_CARD,&iSDCr)!=0) iSDCr=0;
    00006644 E044                   MOV         #68,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  318


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006646 00FE                   MOV.L       @(R0,R15),R0
    00006648 5002                   MOV.L       @(8,R0),R0
    0000664A 8801                   CMP/EQ      #1,R0
    0000664C 8B07                   BF          L4819
    0000664E 65F3                   MOV         R15,R5
    00006650 D247                   MOV.L       L5281,R2   ; _Bfile_GetMediaFree
    00006652 420B                   JSR         @R2
    00006654 E402                   MOV         #2,R4
    00006656 2008                   TST         R0,R0
    00006658 8901                   BT          L4819
    0000665A E200                   MOV         #0,R2
    0000665C 2F22                   MOV.L       R2,@R15
    0000665E              L4819:                            
          EDIT.c  4533      
          EDIT.c  4534      //Hide keyboard status
          EDIT.c  4535      KeyboardStatusHideStore();
    0000665E D345                   MOV.L       L5281+4,R3 ; _KeyboardStatusHideStore
    00006660 430B                   JSR         @R3
    00006662 0009                   NOP
          EDIT.c  4536      KeyboardStatusHide(1);
    00006664 D244                   MOV.L       L5281+8,R2 ; _KeyboardStatusHide
    00006666 420B                   JSR         @R2
    00006668 E401                   MOV         #1,R4
          EDIT.c  4537      
          EDIT.c  4538      //Save display & menu bar
          EDIT.c  4539      SaveDisp(SAVEDISP_PAGE2);
    0000666A D344                   MOV.L       L5281+12,R3; _SaveDisp
    0000666C 430B                   JSR         @R3
    0000666E E405                   MOV         #5,R4
          EDIT.c  4540      MenuStoreBar();
    00006670 D243                   MOV.L       L5281+16,R2; _MenuStoreBar
    00006672 420B                   JSR         @R2
    00006674 0009                   NOP
          EDIT.c  4541    
          EDIT.c  4542      //Write popup window
          EDIT.c  4543      if(sConfig->iTrySD==1)
    00006676 E044                   MOV         #68,R0
    00006678 00FE                   MOV.L       @(R0,R15),R0
    0000667A 5002                   MOV.L       @(8,R0),R0
    0000667C 8801                   CMP/EQ      #1,R0
    0000667E 8B38                   BF          L4821
          EDIT.c  4544      {
          EDIT.c  4545        PopUpWin(5);
    00006680 D240                   MOV.L       L5281+20,R2; _PopUpWin
    00006682 420B                   JSR         @R2
    00006684 E405                   MOV         #5,R4
          EDIT.c  4546        locate(3,2); Print("   Free memory   ");
    00006686 E502                   MOV         #2,R5
    00006688 D33F                   MOV.L       L5281+24,R3; _locate
    0000668A 430B                   JSR         @R3
    0000668C E403                   MOV         #3,R4
    0000668E D43F                   MOV.L       L5281+28,R4; L1443
    00006690 D23F                   MOV.L       L5281+32,R2; _Print
    00006692 420B                   JSR         @R2
    00006694 0009                   NOP
          EDIT.c  4547        locate(3,4); sprintf(sLine,"Main   :%i",iMain); Print(sLine);
    00006696 E504                   MOV         #4,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  319


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006698 D33B                   MOV.L       L5281+24,R3; _locate
    0000669A 430B                   JSR         @R3
    0000669C E403                   MOV         #3,R4
    0000669E 52F2                   MOV.L       @(8,R15),R2
    000066A0 D33C                   MOV.L       L5281+36,R3; L1444
    000066A2 2F26                   MOV.L       R2,@-R15
    000066A4 2F36                   MOV.L       R3,@-R15
    000066A6 64F3                   MOV         R15,R4
    000066A8 D23B                   MOV.L       L5281+40,R2; _sprintf
    000066AA 420B                   JSR         @R2
    000066AC 7418                   ADD         #24,R4
    000066AE 64F3                   MOV         R15,R4
    000066B0 D337                   MOV.L       L5281+32,R3; _Print
    000066B2 430B                   JSR         @R3
    000066B4 7418                   ADD         #24,R4
          EDIT.c  4548        locate(3,5); sprintf(sLine,"Storage:%i",iStoM); Print(sLine);
    000066B6 E505                   MOV         #5,R5
    000066B8 D233                   MOV.L       L5281+24,R2; _locate
    000066BA 420B                   JSR         @R2
    000066BC E403                   MOV         #3,R4
    000066BE 53F3                   MOV.L       @(12,R15),R3
    000066C0 D236                   MOV.L       L5281+44,R2; L1445
    000066C2 2F36                   MOV.L       R3,@-R15
    000066C4 2F26                   MOV.L       R2,@-R15
    000066C6 64F3                   MOV         R15,R4
    000066C8 D333                   MOV.L       L5281+40,R3; _sprintf
    000066CA 430B                   JSR         @R3
    000066CC 7420                   ADD         #32,R4
    000066CE 64F3                   MOV         R15,R4
    000066D0 D22F                   MOV.L       L5281+32,R2; _Print
    000066D2 420B                   JSR         @R2
    000066D4 7420                   ADD         #32,R4
          EDIT.c  4549        locate(3,6); sprintf(sLine,"SD Card:%i",iSDCr); Print(sLine);
    000066D6 E506                   MOV         #6,R5
    000066D8 D32B                   MOV.L       L5281+24,R3; _locate
    000066DA 430B                   JSR         @R3
    000066DC E403                   MOV         #3,R4
    000066DE 52F4                   MOV.L       @(16,R15),R2
    000066E0 D32F                   MOV.L       L5281+48,R3; L1446
    000066E2 2F26                   MOV.L       R2,@-R15
    000066E4 2F36                   MOV.L       R3,@-R15
    000066E6 64F3                   MOV         R15,R4
    000066E8 D22B                   MOV.L       L5281+40,R2; _sprintf
    000066EA 420B                   JSR         @R2
    000066EC 7428                   ADD         #40,R4
    000066EE A028                   BRA         L5017
    000066F0 7F18                   ADD         #24,R15
    000066F2              L4821:                            
          EDIT.c  4550      }
          EDIT.c  4551      else
          EDIT.c  4552      {
          EDIT.c  4553        PopUpWin(4);
    000066F2 D324                   MOV.L       L5281+20,R3; _PopUpWin
    000066F4 430B                   JSR         @R3
    000066F6 E404                   MOV         #4,R4
          EDIT.c  4554        locate(3,2); Print("   Free memory   ");
    000066F8 D223                   MOV.L       L5281+24,R2; _locate




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  320


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000066FA E502                   MOV         #2,R5
    000066FC 420B                   JSR         @R2
    000066FE E403                   MOV         #3,R4
    00006700 D422                   MOV.L       L5281+28,R4; L1443
    00006702 D323                   MOV.L       L5281+32,R3; _Print
    00006704 430B                   JSR         @R3
    00006706 0009                   NOP
          EDIT.c  4555        locate(3,4); sprintf(sLine,"Main   :%i",iMain); Print(sLine);
    00006708 D21F                   MOV.L       L5281+24,R2; _locate
    0000670A E504                   MOV         #4,R5
    0000670C 420B                   JSR         @R2
    0000670E E403                   MOV         #3,R4
    00006710 53F2                   MOV.L       @(8,R15),R3
    00006712 2F36                   MOV.L       R3,@-R15
    00006714 D21F                   MOV.L       L5281+36,R2; L1444
    00006716 2F26                   MOV.L       R2,@-R15
    00006718 D31F                   MOV.L       L5281+40,R3; _sprintf
    0000671A 64F3                   MOV         R15,R4
    0000671C 430B                   JSR         @R3
    0000671E 7418                   ADD         #24,R4
    00006720 D21B                   MOV.L       L5281+32,R2; _Print
    00006722 64F3                   MOV         R15,R4
    00006724 420B                   JSR         @R2
    00006726 7418                   ADD         #24,R4
          EDIT.c  4556        locate(3,5); sprintf(sLine,"Storage:%i",iStoM); Print(sLine);
    00006728 D317                   MOV.L       L5281+24,R3; _locate
    0000672A E505                   MOV         #5,R5
    0000672C 430B                   JSR         @R3
    0000672E E403                   MOV         #3,R4
    00006730 52F3                   MOV.L       @(12,R15),R2
    00006732 2F26                   MOV.L       R2,@-R15
    00006734 D319                   MOV.L       L5281+44,R3; L1445
    00006736 2F36                   MOV.L       R3,@-R15
    00006738 D217                   MOV.L       L5281+40,R2; _sprintf
    0000673A 64F3                   MOV         R15,R4
    0000673C 420B                   JSR         @R2
    0000673E 7420                   ADD         #32,R4
    00006740 7F10                   ADD         #16,R15
    00006742              L5017:                            
    00006742 64F3                   MOV         R15,R4
    00006744 D312                   MOV.L       L5281+32,R3; _Print
    00006746 430B                   JSR         @R3
    00006748 7410                   ADD         #16,R4
          EDIT.c  4557      }
          EDIT.c  4558      MenuSetBar(MENUBARMESS);
    0000674A D216                   MOV.L       L5281+52,R2; _MenuSetBar
    0000674C 420B                   JSR         @R2
    0000674E E406                   MOV         #6,R4
          EDIT.c  4559    
          EDIT.c  4560      //Wait for key
          EDIT.c  4561      GetKeyb();
    00006750 D315                   MOV.L       L5281+56,R3; _GetKeyb
    00006752 430B                   JSR         @R3
    00006754 0009                   NOP
          EDIT.c  4562    
          EDIT.c  4563      //Restore display & Menu bar
          EDIT.c  4564      RestoreDisp(SAVEDISP_PAGE2);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  321


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006756 D215                   MOV.L       L5281+60,R2; _RestoreDisp
    00006758 420B                   JSR         @R2
    0000675A E405                   MOV         #5,R4
          EDIT.c  4565      MenuRestoreBar();
    0000675C D314                   MOV.L       L5281+64,R3; _MenuRestoreBar
    0000675E 430B                   JSR         @R3
    00006760 0009                   NOP
          EDIT.c  4566      
          EDIT.c  4567      //Unhide keyboard status
          EDIT.c  4568      KeyboardStatusHideRestore();
    00006762 D214                   MOV.L       L5281+68,R2; _KeyboardStatusHideRestore
    00006764 420B                   JSR         @R2
    00006766 0009                   NOP
          EDIT.c  4569      
          EDIT.c  4570    }
    00006768 7F48                   ADD         #72,R15
    0000676A 4F26                   LDS.L       @R15+,PR
    0000676C 000B                   RTS
    0000676E 0009                   NOP
    00006770              L5281:                            
    00006770 <00000000>             .DATA.L     _Bfile_GetMediaFree
    00006774 <00000000>             .DATA.L     _KeyboardStatusHideStore
    00006778 <00000000>             .DATA.L     _KeyboardStatusHide
    0000677C <00000000>             .DATA.L     _SaveDisp
    00006780 <00000000>             .DATA.L     _MenuStoreBar
    00006784 <00000000>             .DATA.L     _PopUpWin
    00006788 <00000000>             .DATA.L     _locate
    0000678C <00000000>             .DATA.L     L1443
    00006790 <00000000>             .DATA.L     _Print
    00006794 <00000000>             .DATA.L     L1444
    00006798 <00000000>             .DATA.L     _sprintf
    0000679C <00000000>             .DATA.L     L1445
    000067A0 <00000000>             .DATA.L     L1446
    000067A4 <00000000>             .DATA.L     _MenuSetBar
    000067A8 <00000000>             .DATA.L     _GetKeyb
    000067AC <00000000>             .DATA.L     _RestoreDisp
    000067B0 <00000000>             .DATA.L     _MenuRestoreBar
    000067B4 <00000000>             .DATA.L     _KeyboardStatusHideRestore
          EDIT.c  4571    
          EDIT.c  4572    // ----------------------------------------------------------------
          EDIT.c  4573    // Get file name dialog box
          EDIT.c  4574    int GetFileName(char *sFile,int iMaxLen)
    000067B8              _GetFileName:                    ; function: GetFileName
                                                           ; frame size=56
                                                           ; used runtime library name:
                                                           ; __slow_strcpy
    000067B8 2FE6                   MOV.L       R14,@-R15
    000067BA 4F22                   STS.L       PR,@-R15
          EDIT.c  4575    {
          EDIT.c  4576      //Variables
          EDIT.c  4577      int iAnswer;
          EDIT.c  4578      char sName[MAXFNAME];
          EDIT.c  4579      
          EDIT.c  4580      //Keyboard status show
          EDIT.c  4581      KeyboardStatusHideStore();
    000067BC D334                   MOV.L       L5282+6,R3 ; _KeyboardStatusHideStore
    000067BE 7FE8                   ADD         #-24,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  322


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000067C0 2F42                   MOV.L       R4,@R15
    000067C2 430B                   JSR         @R3
    000067C4 1F51                   MOV.L       R5,@(4,R15)
          EDIT.c  4582      KeyboardStatusHide(0);
    000067C6 D233                   MOV.L       L5282+10,R2; _KeyboardStatusHide
    000067C8 420B                   JSR         @R2
    000067CA E400                   MOV         #0,R4
          EDIT.c  4583      
          EDIT.c  4584      //Save display & menu bar
          EDIT.c  4585      SaveDisp(SAVEDISP_PAGE1);
    000067CC D332                   MOV.L       L5282+14,R3; _SaveDisp
    000067CE 430B                   JSR         @R3
    000067D0 E401                   MOV         #1,R4
          EDIT.c  4586      MenuStoreBar();
    000067D2 D232                   MOV.L       L5282+18,R2; _MenuStoreBar
    000067D4 420B                   JSR         @R2
    000067D6 0009                   NOP
          EDIT.c  4587    
          EDIT.c  4588      //Write popup window
          EDIT.c  4589      PopUpWin(2);
    000067D8 D331                   MOV.L       L5282+22,R3; _PopUpWin
    000067DA 430B                   JSR         @R3
    000067DC E402                   MOV         #2,R4
          EDIT.c  4590      locate(3,3); Print("Enter file name:");
    000067DE E503                   MOV         #3,R5
    000067E0 D230                   MOV.L       L5282+26,R2; _locate
    000067E2 420B                   JSR         @R2
    000067E4 6453                   MOV         R5,R4
    000067E6 D430                   MOV.L       L5282+30,R4; L1453
    000067E8 D330                   MOV.L       L5282+34,R3; _Print
    000067EA 430B                   JSR         @R3
    000067EC 0009                   NOP
          EDIT.c  4591      locate(3,4); Print("[            ]");
    000067EE E504                   MOV         #4,R5
    000067F0 D22C                   MOV.L       L5282+26,R2; _locate
    000067F2 420B                   JSR         @R2
    000067F4 E403                   MOV         #3,R4
    000067F6 D42E                   MOV.L       L5282+38,R4; L1454
    000067F8 D32C                   MOV.L       L5282+34,R3; _Print
    000067FA 430B                   JSR         @R3
    000067FC 0009                   NOP
          EDIT.c  4592      MenuSetBar(MENUBARSTRN);
    000067FE D22D                   MOV.L       L5282+42,R2; _MenuSetBar
    00006800 420B                   JSR         @R2
    00006802 E41B                   MOV         #27,R4
          EDIT.c  4593    
          EDIT.c  4594      //Get string
          EDIT.c  4595      strcpy(sName,sFile);
    00006804 61F2                   MOV.L       @R15,R1
    00006806 60F3                   MOV         R15,R0
    00006808 D32B                   MOV.L       L5282+46,R3; __slow_strcpy
    0000680A 430B                   JSR         @R3
    0000680C 7008                   ADD         #8,R0
          EDIT.c  4596      iAnswer=GetString(3,3,iMaxLen,sName,KEY_CTRL_F1,KEY_CTRL_F6,KEY_CTRL_F3,KEY_CTRL_F4,113,13);
    0000680E E20D                   MOV         #13,R2
    00006810 913B                   MOV.W       L5282,R1   ; H'753C
    00006812 E503                   MOV         #3,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  323


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006814 2F26                   MOV.L       R2,@-R15
    00006816 E371                   MOV         #113,R3
    00006818 9239                   MOV.W       L5282+4,R2 ; H'753E
    0000681A 2F36                   MOV.L       R3,@-R15
    0000681C 2F16                   MOV.L       R1,@-R15
    0000681E 9335                   MOV.W       L5282+2,R3 ; H'753B
    00006820 2F36                   MOV.L       R3,@-R15
    00006822 73FE                   ADD         #-2,R3
    00006824 2F26                   MOV.L       R2,@-R15
    00006826 2F36                   MOV.L       R3,@-R15
    00006828 56F7                   MOV.L       @(28,R15),R6
    0000682A 67F3                   MOV         R15,R7
    0000682C D223                   MOV.L       L5282+50,R2; _GetString
    0000682E 7720                   ADD         #32,R7
    00006830 420B                   JSR         @R2
    00006832 6453                   MOV         R5,R4
          EDIT.c  4597    
          EDIT.c  4598      //Restore display & Menu bar
          EDIT.c  4599      RestoreDisp(SAVEDISP_PAGE1);
    00006834 D322                   MOV.L       L5282+54,R3; _RestoreDisp
    00006836 7F18                   ADD         #24,R15
    00006838 6E03                   MOV         R0,R14
    0000683A 430B                   JSR         @R3
    0000683C E401                   MOV         #1,R4
          EDIT.c  4600      MenuRestoreBar();
    0000683E D221                   MOV.L       L5282+58,R2; _MenuRestoreBar
    00006840 420B                   JSR         @R2
    00006842 0009                   NOP
          EDIT.c  4601      
          EDIT.c  4602      //Check empty file name
          EDIT.c  4603      if(strlen(sName)==0 && iAnswer==1)
    00006844 D320                   MOV.L       L5282+62,R3; _strlen
    00006846 64F3                   MOV         R15,R4
    00006848 430B                   JSR         @R3
    0000684A 7408                   ADD         #8,R4
    0000684C 2008                   TST         R0,R0
    0000684E 8B0C                   BF          L4823
    00006850 60E3                   MOV         R14,R0
    00006852 8801                   CMP/EQ      #1,R0
    00006854 8B09                   BF          L4823
          EDIT.c  4604      {
          EDIT.c  4605        PopupMessage(1,"Invalid filename!",NULL,NULL,NULL,NULL);
    00006856 E200                   MOV         #0,R2
    00006858 D51C                   MOV.L       L5282+66,R5; L1456
    0000685A 6723                   MOV         R2,R7
    0000685C 2F26                   MOV.L       R2,@-R15
    0000685E 6623                   MOV         R2,R6
    00006860 2F26                   MOV.L       R2,@-R15
    00006862 BDED                   BSR         _PopupMessage
    00006864 E401                   MOV         #1,R4
    00006866 7F08                   ADD         #8,R15
          EDIT.c  4606        iAnswer=0;
    00006868 EE00                   MOV         #0,R14
    0000686A              L4823:                            
          EDIT.c  4607      }
          EDIT.c  4608      
          EDIT.c  4609      //Keyboard status restore




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  324


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4610      KeyboardStatusHideRestore();
    0000686A D219                   MOV.L       L5282+70,R2; _KeyboardStatusHideRestore
    0000686C 420B                   JSR         @R2
    0000686E 0009                   NOP
          EDIT.c  4611      
          EDIT.c  4612      //Return result
          EDIT.c  4613      if(iAnswer==1) strcpy(sFile,sName);
    00006870 60E3                   MOV         R14,R0
    00006872 8801                   CMP/EQ      #1,R0
    00006874 8B04                   BF          L4824
    00006876 61F3                   MOV         R15,R1
    00006878 D20F                   MOV.L       L5282+46,R2; __slow_strcpy
    0000687A 7108                   ADD         #8,R1
    0000687C 420B                   JSR         @R2
    0000687E 60F2                   MOV.L       @R15,R0
    00006880              L4824:                            
          EDIT.c  4614      return(iAnswer);  
    00006880 60E3                   MOV         R14,R0
          EDIT.c  4615    
          EDIT.c  4616    }
    00006882 7F18                   ADD         #24,R15
    00006884 4F26                   LDS.L       @R15+,PR
    00006886 000B                   RTS
    00006888 6EF6                   MOV.L       @R15+,R14
    0000688A              L5282:                            
    0000688A 753C                   .DATA.W     H'753C
    0000688C 753B                   .DATA.W     H'753B
    0000688E 753E                   .DATA.W     H'753E
    00006890 <00000000>             .DATA.L     _KeyboardStatusHideStore
    00006894 <00000000>             .DATA.L     _KeyboardStatusHide
    00006898 <00000000>             .DATA.L     _SaveDisp
    0000689C <00000000>             .DATA.L     _MenuStoreBar
    000068A0 <00000000>             .DATA.L     _PopUpWin
    000068A4 <00000000>             .DATA.L     _locate
    000068A8 <00000000>             .DATA.L     L1453
    000068AC <00000000>             .DATA.L     _Print
    000068B0 <00000000>             .DATA.L     L1454
    000068B4 <00000000>             .DATA.L     _MenuSetBar
    000068B8 <00000000>             .DATA.L     __slow_strcpy
    000068BC <00000000>             .DATA.L     _GetString
    000068C0 <00000000>             .DATA.L     _RestoreDisp
    000068C4 <00000000>             .DATA.L     _MenuRestoreBar
    000068C8 <00000000>             .DATA.L     _strlen
    000068CC <00000000>             .DATA.L     L1456
    000068D0 <00000000>             .DATA.L     _KeyboardStatusHideRestore
          EDIT.c  4617    
          EDIT.c  4618    // ----------------------------------------------------------------
          EDIT.c  4619    // Get folder name dialog box
          EDIT.c  4620    int GetFolderName(char *sFolder)
    000068D4              _GetFolderName:                  ; function: GetFolderName
                                                           ; frame size=52
                                                           ; used runtime library name:
                                                           ; __slow_strcpy
    000068D4 2FE6                   MOV.L       R14,@-R15
    000068D6 4F22                   STS.L       PR,@-R15
          EDIT.c  4621    {
          EDIT.c  4622      //Variables




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  325


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4623      int iAnswer;
          EDIT.c  4624      char sName[MAXFNAME];
          EDIT.c  4625      
          EDIT.c  4626      //Keyboard status show
          EDIT.c  4627      KeyboardStatusHideStore();
    000068D8 D334                   MOV.L       L5283+8,R3 ; _KeyboardStatusHideStore
    000068DA 7FEC                   ADD         #-20,R15
    000068DC 430B                   JSR         @R3
    000068DE 2F42                   MOV.L       R4,@R15
          EDIT.c  4628      KeyboardStatusHide(0);
    000068E0 D233                   MOV.L       L5283+12,R2; _KeyboardStatusHide
    000068E2 420B                   JSR         @R2
    000068E4 E400                   MOV         #0,R4
          EDIT.c  4629      
          EDIT.c  4630      //Save display & menu bar
          EDIT.c  4631      SaveDisp(SAVEDISP_PAGE1);
    000068E6 D333                   MOV.L       L5283+16,R3; _SaveDisp
    000068E8 430B                   JSR         @R3
    000068EA E401                   MOV         #1,R4
          EDIT.c  4632      MenuStoreBar();
    000068EC D232                   MOV.L       L5283+20,R2; _MenuStoreBar
    000068EE 420B                   JSR         @R2
    000068F0 0009                   NOP
          EDIT.c  4633    
          EDIT.c  4634      //Write popup window
          EDIT.c  4635      PopUpWin(2);
    000068F2 D332                   MOV.L       L5283+24,R3; _PopUpWin
    000068F4 430B                   JSR         @R3
    000068F6 E402                   MOV         #2,R4
          EDIT.c  4636      locate(3,3); Print("Folder name:  ");
    000068F8 D231                   MOV.L       L5283+28,R2; _locate
    000068FA E503                   MOV         #3,R5
    000068FC 420B                   JSR         @R2
    000068FE 6453                   MOV         R5,R4
    00006900 D430                   MOV.L       L5283+32,R4; L1461
    00006902 D331                   MOV.L       L5283+36,R3; _Print
    00006904 430B                   JSR         @R3
    00006906 0009                   NOP
          EDIT.c  4637      locate(3,4); Print("[            ]");
    00006908 D22D                   MOV.L       L5283+28,R2; _locate
    0000690A E504                   MOV         #4,R5
    0000690C 420B                   JSR         @R2
    0000690E E403                   MOV         #3,R4
    00006910 D42E                   MOV.L       L5283+40,R4; L1454
    00006912 D32D                   MOV.L       L5283+36,R3; _Print
    00006914 430B                   JSR         @R3
    00006916 0009                   NOP
          EDIT.c  4638      MenuSetBar(MENUBARSTRN);
    00006918 D22D                   MOV.L       L5283+44,R2; _MenuSetBar
    0000691A 420B                   JSR         @R2
    0000691C E41B                   MOV         #27,R4
          EDIT.c  4639    
          EDIT.c  4640      //Get string
          EDIT.c  4641      strcpy(sName,sFolder);
    0000691E 60F3                   MOV         R15,R0
    00006920 D32C                   MOV.L       L5283+48,R3; __slow_strcpy
    00006922 61F2                   MOV.L       @R15,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  326


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006924 430B                   JSR         @R3
    00006926 7004                   ADD         #4,R0
          EDIT.c  4642      iAnswer=GetString(3,3,8,sName,KEY_CTRL_F1,KEY_CTRL_F6,KEY_CTRL_F3,KEY_CTRL_F4,113,13);
    00006928 913C                   MOV.W       L5283,R1   ; H'753C
    0000692A E608                   MOV         #8,R6
    0000692C E20D                   MOV         #13,R2
    0000692E E371                   MOV         #113,R3
    00006930 2F26                   MOV.L       R2,@-R15
    00006932 E503                   MOV         #3,R5
    00006934 2F36                   MOV.L       R3,@-R15
    00006936 2F16                   MOV.L       R1,@-R15
    00006938 9335                   MOV.W       L5283+2,R3 ; H'753B
    0000693A 2F36                   MOV.L       R3,@-R15
    0000693C 9234                   MOV.W       L5283+4,R2 ; H'753E
    0000693E 73FE                   ADD         #-2,R3
    00006940 2F26                   MOV.L       R2,@-R15
    00006942 2F36                   MOV.L       R3,@-R15
    00006944 D224                   MOV.L       L5283+52,R2; _GetString
    00006946 67F3                   MOV         R15,R7
    00006948 771C                   ADD         #28,R7
    0000694A 420B                   JSR         @R2
    0000694C 6453                   MOV         R5,R4
    0000694E 7F18                   ADD         #24,R15
          EDIT.c  4643    
          EDIT.c  4644      //Restore display & Menu bar
          EDIT.c  4645      RestoreDisp(SAVEDISP_PAGE1);
    00006950 D322                   MOV.L       L5283+56,R3; _RestoreDisp
    00006952 6E03                   MOV         R0,R14
    00006954 430B                   JSR         @R3
    00006956 E401                   MOV         #1,R4
          EDIT.c  4646      MenuRestoreBar();
    00006958 D221                   MOV.L       L5283+60,R2; _MenuRestoreBar
    0000695A 420B                   JSR         @R2
    0000695C 0009                   NOP
          EDIT.c  4647      
          EDIT.c  4648      //Check empty file name
          EDIT.c  4649      if(strlen(sName)==0 && iAnswer==1)
    0000695E 64F3                   MOV         R15,R4
    00006960 D320                   MOV.L       L5283+64,R3; _strlen
    00006962 430B                   JSR         @R3
    00006964 7404                   ADD         #4,R4
    00006966 2008                   TST         R0,R0
    00006968 8B0C                   BF          L4826
    0000696A 60E3                   MOV         R14,R0
    0000696C 8801                   CMP/EQ      #1,R0
    0000696E 8B09                   BF          L4826
          EDIT.c  4650      {
          EDIT.c  4651        PopupMessage(1,"Invalid folder!",NULL,NULL,NULL,NULL);
    00006970 D51D                   MOV.L       L5283+68,R5; L1463
    00006972 E200                   MOV         #0,R2
    00006974 2F26                   MOV.L       R2,@-R15
    00006976 6723                   MOV         R2,R7
    00006978 2F26                   MOV.L       R2,@-R15
    0000697A 6623                   MOV         R2,R6
    0000697C BD60                   BSR         _PopupMessage
    0000697E E401                   MOV         #1,R4
    00006980 7F08                   ADD         #8,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  327


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4652        iAnswer=0;
    00006982 EE00                   MOV         #0,R14
    00006984              L4826:                            
          EDIT.c  4653      }
          EDIT.c  4654      
          EDIT.c  4655      //Keyboard status restore
          EDIT.c  4656      KeyboardStatusHideRestore();
    00006984 D219                   MOV.L       L5283+72,R2; _KeyboardStatusHideRestore
    00006986 420B                   JSR         @R2
    00006988 0009                   NOP
          EDIT.c  4657      
          EDIT.c  4658      //Return result
          EDIT.c  4659      if(iAnswer==1) strcpy(sFolder,sName);
    0000698A 60E3                   MOV         R14,R0
    0000698C 8801                   CMP/EQ      #1,R0
    0000698E 8B04                   BF          L4827
    00006990 D210                   MOV.L       L5283+48,R2; __slow_strcpy
    00006992 61F3                   MOV         R15,R1
    00006994 7104                   ADD         #4,R1
    00006996 420B                   JSR         @R2
    00006998 60F2                   MOV.L       @R15,R0
    0000699A              L4827:                            
          EDIT.c  4660      return(iAnswer);  
    0000699A 60E3                   MOV         R14,R0
          EDIT.c  4661    
          EDIT.c  4662    }
    0000699C 7F14                   ADD         #20,R15
    0000699E 4F26                   LDS.L       @R15+,PR
    000069A0 000B                   RTS
    000069A2 6EF6                   MOV.L       @R15+,R14
    000069A4              L5283:                            
    000069A4 753C                   .DATA.W     H'753C
    000069A6 753B                   .DATA.W     H'753B
    000069A8 753E                   .DATA.W     H'753E
    000069AA 0000                   .DATA.W     0
    000069AC <00000000>             .DATA.L     _KeyboardStatusHideStore
    000069B0 <00000000>             .DATA.L     _KeyboardStatusHide
    000069B4 <00000000>             .DATA.L     _SaveDisp
    000069B8 <00000000>             .DATA.L     _MenuStoreBar
    000069BC <00000000>             .DATA.L     _PopUpWin
    000069C0 <00000000>             .DATA.L     _locate
    000069C4 <00000000>             .DATA.L     L1461
    000069C8 <00000000>             .DATA.L     _Print
    000069CC <00000000>             .DATA.L     L1454
    000069D0 <00000000>             .DATA.L     _MenuSetBar
    000069D4 <00000000>             .DATA.L     __slow_strcpy
    000069D8 <00000000>             .DATA.L     _GetString
    000069DC <00000000>             .DATA.L     _RestoreDisp
    000069E0 <00000000>             .DATA.L     _MenuRestoreBar
    000069E4 <00000000>             .DATA.L     _strlen
    000069E8 <00000000>             .DATA.L     L1463
    000069EC <00000000>             .DATA.L     _KeyboardStatusHideRestore
          EDIT.c  4663    
          EDIT.c  4664    // ----------------------------------------------------------------
          EDIT.c  4665    // Get string to search
          EDIT.c  4666    int GetSearchString(char *sString)
    000069F0              _GetSearchString:                ; function: GetSearchString




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  328


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=52
                                                           ; used runtime library name:
                                                           ; __slow_strcpy
    000069F0 2FE6                   MOV.L       R14,@-R15
    000069F2 4F22                   STS.L       PR,@-R15
          EDIT.c  4667    {
          EDIT.c  4668      //Variables
          EDIT.c  4669      int iAnswer;
          EDIT.c  4670      char sString0[16];
          EDIT.c  4671      
          EDIT.c  4672      //Keyboard status show
          EDIT.c  4673      KeyboardStatusHideStore();
    000069F4 D341                   MOV.L       L5284+12,R3; _KeyboardStatusHideStore
    000069F6 7FEC                   ADD         #-20,R15
    000069F8 430B                   JSR         @R3
    000069FA 2F42                   MOV.L       R4,@R15
          EDIT.c  4674      KeyboardStatusHide(0);
    000069FC D240                   MOV.L       L5284+16,R2; _KeyboardStatusHide
    000069FE 420B                   JSR         @R2
    00006A00 E400                   MOV         #0,R4
          EDIT.c  4675      
          EDIT.c  4676      //Save display & menu bar
          EDIT.c  4677      SaveDisp(SAVEDISP_PAGE1);
    00006A02 D340                   MOV.L       L5284+20,R3; _SaveDisp
    00006A04 430B                   JSR         @R3
    00006A06 E401                   MOV         #1,R4
          EDIT.c  4678      MenuStoreBar();
    00006A08 D23F                   MOV.L       L5284+24,R2; _MenuStoreBar
    00006A0A 420B                   JSR         @R2
    00006A0C 0009                   NOP
          EDIT.c  4679    
          EDIT.c  4680      //Write popup window
          EDIT.c  4681      PopUpWin(2);
    00006A0E D33F                   MOV.L       L5284+28,R3; _PopUpWin
    00006A10 430B                   JSR         @R3
    00006A12 E402                   MOV         #2,R4
          EDIT.c  4682      locate(3,3); Print("Search string:   ");
    00006A14 D23E                   MOV.L       L5284+32,R2; _locate
    00006A16 E503                   MOV         #3,R5
    00006A18 420B                   JSR         @R2
    00006A1A 6453                   MOV         R5,R4
    00006A1C D43D                   MOV.L       L5284+36,R4; L1468
    00006A1E D33E                   MOV.L       L5284+40,R3; _Print
    00006A20 430B                   JSR         @R3
    00006A22 0009                   NOP
          EDIT.c  4683      locate(3,4); Print("[               ]");
    00006A24 D23A                   MOV.L       L5284+32,R2; _locate
    00006A26 E504                   MOV         #4,R5
    00006A28 420B                   JSR         @R2
    00006A2A E403                   MOV         #3,R4
    00006A2C D43B                   MOV.L       L5284+44,R4; L1469
    00006A2E D33A                   MOV.L       L5284+40,R3; _Print
    00006A30 430B                   JSR         @R3
    00006A32 0009                   NOP
          EDIT.c  4684      MenuSetBar(MENUBARSTRN);
    00006A34 D23A                   MOV.L       L5284+48,R2; _MenuSetBar
    00006A36 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  329


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006A38 E41B                   MOV         #27,R4
          EDIT.c  4685    
          EDIT.c  4686      //Get string
          EDIT.c  4687      strcpy(sString0,sString);
    00006A3A 60F3                   MOV         R15,R0
    00006A3C D339                   MOV.L       L5284+52,R3; __slow_strcpy
    00006A3E 61F2                   MOV.L       @R15,R1
    00006A40 430B                   JSR         @R3
    00006A42 7004                   ADD         #4,R0
          EDIT.c  4688      iAnswer=GetString(3,3,15,sString0,KEY_CTRL_F1,KEY_CTRL_F6,KEY_CTRL_F3,KEY_CTRL_F4,113,13);
    00006A44 9154                   MOV.W       L5284,R1   ; H'753C
    00006A46 E60F                   MOV         #15,R6
    00006A48 E20D                   MOV         #13,R2
    00006A4A E371                   MOV         #113,R3
    00006A4C 2F26                   MOV.L       R2,@-R15
    00006A4E E503                   MOV         #3,R5
    00006A50 2F36                   MOV.L       R3,@-R15
    00006A52 2F16                   MOV.L       R1,@-R15
    00006A54 934D                   MOV.W       L5284+2,R3 ; H'753B
    00006A56 2F36                   MOV.L       R3,@-R15
    00006A58 924C                   MOV.W       L5284+4,R2 ; H'753E
    00006A5A 73FE                   ADD         #-2,R3
    00006A5C 2F26                   MOV.L       R2,@-R15
    00006A5E 2F36                   MOV.L       R3,@-R15
    00006A60 D231                   MOV.L       L5284+56,R2; _GetString
    00006A62 67F3                   MOV         R15,R7
    00006A64 771C                   ADD         #28,R7
    00006A66 420B                   JSR         @R2
    00006A68 6453                   MOV         R5,R4
    00006A6A 7F18                   ADD         #24,R15
          EDIT.c  4689    
          EDIT.c  4690      //Restore display & Menu bar
          EDIT.c  4691      RestoreDisp(SAVEDISP_PAGE1);
    00006A6C D32F                   MOV.L       L5284+60,R3; _RestoreDisp
    00006A6E 6E03                   MOV         R0,R14
    00006A70 430B                   JSR         @R3
    00006A72 E401                   MOV         #1,R4
          EDIT.c  4692      MenuRestoreBar();
    00006A74 D22E                   MOV.L       L5284+64,R2; _MenuRestoreBar
    00006A76 420B                   JSR         @R2
    00006A78 0009                   NOP
          EDIT.c  4693      
          EDIT.c  4694      //Check empty file name
          EDIT.c  4695      if(strlen(sString0)==0 && iAnswer==1)
    00006A7A 64F3                   MOV         R15,R4
    00006A7C D32D                   MOV.L       L5284+68,R3; _strlen
    00006A7E 430B                   JSR         @R3
    00006A80 7404                   ADD         #4,R4
    00006A82 2008                   TST         R0,R0
    00006A84 8B0C                   BF          L4829
    00006A86 60E3                   MOV         R14,R0
    00006A88 8801                   CMP/EQ      #1,R0
    00006A8A 8B09                   BF          L4829
          EDIT.c  4696      {
          EDIT.c  4697        PopupMessage(1,"Empty string!",NULL,NULL,NULL,NULL);
    00006A8C D52A                   MOV.L       L5284+72,R5; L1471
    00006A8E E200                   MOV         #0,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  330


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006A90 2F26                   MOV.L       R2,@-R15
    00006A92 6723                   MOV         R2,R7
    00006A94 2F26                   MOV.L       R2,@-R15
    00006A96 6623                   MOV         R2,R6
    00006A98 BCD2                   BSR         _PopupMessage
    00006A9A E401                   MOV         #1,R4
    00006A9C 7F08                   ADD         #8,R15
          EDIT.c  4698        iAnswer=0;
    00006A9E EE00                   MOV         #0,R14
    00006AA0              L4829:                            
          EDIT.c  4699      }
          EDIT.c  4700      
          EDIT.c  4701      //Keyboard status restore
          EDIT.c  4702      KeyboardStatusHideRestore();
    00006AA0 D226                   MOV.L       L5284+76,R2; _KeyboardStatusHideRestore
    00006AA2 420B                   JSR         @R2
    00006AA4 0009                   NOP
          EDIT.c  4703      
          EDIT.c  4704      //Return result
          EDIT.c  4705      if(iAnswer==1) strcpy(sString,sString0);
    00006AA6 60E3                   MOV         R14,R0
    00006AA8 8801                   CMP/EQ      #1,R0
    00006AAA 8B04                   BF          L4830
    00006AAC D21D                   MOV.L       L5284+52,R2; __slow_strcpy
    00006AAE 61F3                   MOV         R15,R1
    00006AB0 7104                   ADD         #4,R1
    00006AB2 420B                   JSR         @R2
    00006AB4 60F2                   MOV.L       @R15,R0
    00006AB6              L4830:                            
          EDIT.c  4706      return(iAnswer);  
    00006AB6 60E3                   MOV         R14,R0
          EDIT.c  4707    
          EDIT.c  4708    }
    00006AB8 7F14                   ADD         #20,R15
    00006ABA 4F26                   LDS.L       @R15+,PR
    00006ABC 000B                   RTS
    00006ABE 6EF6                   MOV.L       @R15+,R14
          EDIT.c  4709    
          EDIT.c  4710    // ----------------------------------------------------------------
          EDIT.c  4711    // Help text
          EDIT.c  4712    void HelpText(void)
    00006AC0              _HelpText:                       ; function: HelpText
                                                           ; frame size=6844
                                                           ; used runtime library name:
                                                           ; __divls, __slow_mvn, __slow_strcmp1
    00006AC0 4F22                   STS.L       PR,@-R15
    00006AC2 4F12                   STS.L       MACL,@-R15
    00006AC4 9017                   MOV.W       L5284+6,R0 ; H'E54C
    00006AC6 3F0C                   ADD         R0,R15
          EDIT.c  4713    {
          EDIT.c  4714      
          EDIT.c  4715      //Help text
          EDIT.c  4716      char sHelp[][33]=
          EDIT.c  4717      {"Text editor for fx-9860G series ",  
          EDIT.c  4718       "---------FILE EXPLORER----------",
          EDIT.c  4719       "Main menu commands:             ",
          EDIT.c  4720       "-OPEN: Open selected file/folder",




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  331


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4721       "-NEW:  Create new file.         ",
          EDIT.c  4722       "-FILE: Go to File menu.         ",
          EDIT.c  4723       "-OPTN: Go to options menu.      ",
          EDIT.c  4724       "-ROOT: Changes root directory.  ",
          EDIT.c  4725       "-DEL:  Delete selected file.    ",
          EDIT.c  4726       "File menu commands:             ",
          EDIT.c  4727       "-REN:  Rename file.             ",
          EDIT.c  4728       "-COPY: Copy file.               ",
          EDIT.c  4729       "-MOVE: Move file.               ",
          EDIT.c  4730       "-NEWF: Create new folder.       ",
          EDIT.c  4731       "-DELF: Delete selected folder.  ",
          EDIT.c  4732       "                                ",
          EDIT.c  4733       "                                ",
          EDIT.c  4734       "                                ",
          EDIT.c  4735       "Options menu commands:          ",
          EDIT.c  4736       "-OPTN: Enter set up screen. Set ",
          EDIT.c  4737       "       up screen is also called ",
          EDIT.c  4738       "       with Shift+SETUP.        ",
          EDIT.c  4739       "-MEM : Display memory status.   ",
          EDIT.c  4740       "-HELP: This help screen.        ",
          EDIT.c  4741       "-ABOU: Information about program",
          EDIT.c  4742       "                                ",
          EDIT.c  4743       "                                ",
          EDIT.c  4744       "Root menu commands:             ",
          EDIT.c  4745       "-MAIN: Change to main memory as ",
          EDIT.c  4746       "       root directory.          ",
          EDIT.c  4747       "-SMEM: Change to storage memory ",
          EDIT.c  4748       "       as root directory.       ",
          EDIT.c  4749       "-SDC:  Change to SD Card as root",
          EDIT.c  4750       "       directory.               ",
          EDIT.c  4751       "                                ",
          EDIT.c  4752       "                                ",
          EDIT.c  4753       "----------TEXT EDITOR-----------",
          EDIT.c  4754       "Main menu commands:             ",
          EDIT.c  4755       "-FILE: Go to file menu.         ",
          EDIT.c  4756       "-EDIT: Go to edit menu.         ",
          EDIT.c  4757       "-GOTO: Go to goto menu.         ",
          EDIT.c  4758       "-OPTN: Go to options menu.      ",
          EDIT.c  4759       "-CHAR: ASCII character set.     ",
          EDIT.c  4760       "-A<>a: Change upper/lower case. ",
          EDIT.c  4761       "                                ",
          EDIT.c  4762       "File menu commands:             ",
          EDIT.c  4763       "-SAVE :Save file to current     ",
          EDIT.c  4764       "       location memory.         ",
          EDIT.c  4765       "-S.AS: Save file with different ",
          EDIT.c  4766       "       file/folder names.       ",
          EDIT.c  4767       "-AUTO: Set current file to be   ",
          EDIT.c  4768       "       opened automatically when",
          EDIT.c  4769       "       program starts           ",
          EDIT.c  4770       "                                ",
          EDIT.c  4771       "Edit menu commands:             ",
          EDIT.c  4772       "-CLIP: Text selection on / off. ",
          EDIT.c  4773       "       Same as SHIFT+CLIP.      ",
          EDIT.c  4774       "-COPY: Copy text to clipboard.  ",
          EDIT.c  4775       "-CUT:  Copy text to clipboard   ",
          EDIT.c  4776       "       and delete.              ",
          EDIT.c  4777       "-PAST: Paste text from clipboard",




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  332


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4778       "       Same as SHIFT+PASTE.     ",
          EDIT.c  4779       "-DEL:  Delete selected text.    ",
          EDIT.c  4780       "-SRC:  Search string within text",
          EDIT.c  4781       "-SRC+: Search again.            ",
          EDIT.c  4782       "                                ",
          EDIT.c  4783       "Goto menu commands:             ",
          EDIT.c  4784       "-TOP:  Move cursor to beginning.",
          EDIT.c  4785       "-BOTM: Move cursor to ending.   ",
          EDIT.c  4786       "-HOME: Go to begining of line.  ",
          EDIT.c  4787       "-END:  Go to ending of line.    ",
          EDIT.c  4788       "-PAG-: Page up.                 ",
          EDIT.c  4789       "-PAG+: Page down.               ",
          EDIT.c  4790       "                                ",
          EDIT.c  4791       "Options menu commands:          ",
          EDIT.c  4792       "-OPTN: Enter set up screen.     ",
          EDIT.c  4793       "       Same as SHIFT+SETUP.     ",
          EDIT.c  4794       "-MEM:  Display memory status.   ",
          EDIT.c  4795       "-HELP: This help screen.        ",
          EDIT.c  4796       "-ABOU: Information about program",
          EDIT.c  4797       "                                ",
          EDIT.c  4798       "ASCII character set commands:   ",
          EDIT.c  4799       "-INSR: Inserts char. into text. ",
          EDIT.c  4800       "-BIND: Binds character to key.  ",
          EDIT.c  4801       "-UBND: Unbinds character.       ",
          EDIT.c  4802       "                                ",
          EDIT.c  4803       "Bound characters are used in the",
          EDIT.c  4804       "editor window by pressing VARS  ",
          EDIT.c  4805       "key and then the key defined for",
          EDIT.c  4806       "the bound character.            ",
          EDIT.c  4807       "Information in the top bar:     ",
          EDIT.c  4808       "-MM/SM/SD: Root directory.      ",
          EDIT.c  4809       "-File name + [Folder] or Cursor.",
          EDIT.c  4810       "-S/-: File saved flag           ",
          EDIT.c  4811       "-T/B: Text file / Binary file   ",
          EDIT.c  4812       "-1/S/a/A/b/B:Keyboard mode->    ",
          EDIT.c  4813       " Numeric,Shift,Alpha lower,     ",
          EDIT.c  4814       " Alpha upper,Alpha locked lower,",
          EDIT.c  4815       " Alpha locked upper.            ",
          EDIT.c  4816       "-------------SET UP-------------",
          EDIT.c  4817       "<Try SDC>                       ",
          EDIT.c  4818       "-YES: card is checked everytime ",
          EDIT.c  4819       " the file explorer is called.   ",
          EDIT.c  4820       "-NO: card is not tried never.   ",
          EDIT.c  4821       " Use this option if your calc   ",
          EDIT.c  4822       " does not have SD card because  ",
          EDIT.c  4823       " file explorer opens faster.    ",
          EDIT.c  4824       "                                ",
          EDIT.c  4825       "<System Files>:                 ",
          EDIT.c  4826       "-HIDN: System files are hidden  ",
          EDIT.c  4827       " in the file explorer. System   ",
          EDIT.c  4828       " files are *.g1? and those in   ",
          EDIT.c  4829       " which attribute is not DT_FILE ",
          EDIT.c  4830       " or DT_DIRECTORY. Files EDIT.CFG",
          EDIT.c  4831       " and EDIT.DIR are system files. ",
          EDIT.c  4832       "-DISP: System files are         ",
          EDIT.c  4833       " displayed in the file explorer.",
          EDIT.c  4834       "<New Line>                      ",




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  333


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4835       "-WIN: Files are stored using    ",
          EDIT.c  4836       " CR+LF as line terminator as in ",
          EDIT.c  4837       " windows systems.               ", 
          EDIT.c  4838       "-UNIX: Files are stored using LF",
          EDIT.c  4839       " as line terminator as in unix  ",
          EDIT.c  4840       " systems.                       ", 
          EDIT.c  4841       "                                ",
          EDIT.c  4842       "                                ",
          EDIT.c  4843       "<Word Wrap>                     ",
          EDIT.c  4844       "-ON: Line breaks happen in      ",
          EDIT.c  4845       " between of words, no cuts in   ",
          EDIT.c  4846       " in the middle of words.        ",
          EDIT.c  4847       "-OFF: Line breaks happen        ",
          EDIT.c  4848       " anywhere, words are cut in     ",
          EDIT.c  4849       " between.                       ",
          EDIT.c  4850       "                                ",
          EDIT.c  4851       "                                ",
          EDIT.c  4852       "<Bytes free>                    ",
          EDIT.c  4853       "-YES: Remaining memory is       ",
          EDIT.c  4854       " displayed in last row of file  ",
          EDIT.c  4855       " explorer.                      ",
          EDIT.c  4856       "-NO: Remaining memory is not    ",
          EDIT.c  4857       " displayed.                     ",
          EDIT.c  4858       "                                ",
          EDIT.c  4859       "                                ",
          EDIT.c  4860       "                                ",
          EDIT.c  4861       "<Default root directory>        ",
          EDIT.c  4862       "-MAIN: Set main memory as root  ",
          EDIT.c  4863       " when file explorer opens.      ",
          EDIT.c  4864       "-SMEM: Set storage memory as    ",
          EDIT.c  4865       " root when file explorer opens. ",
          EDIT.c  4866       "-SDC: Set SD Card as root when  ",
          EDIT.c  4867       " file explorer opens.            ",
          EDIT.c  4868       "                                ",
          EDIT.c  4869       "                                ",
          EDIT.c  4870       "<Font size>                     ",
          EDIT.c  4871       "-TINY: Set font size to 3x5     ",
          EDIT.c  4872       " 32 columns x 8 rows            ",
          EDIT.c  4873       "-SMAL: Set font size to 3x6     ",
          EDIT.c  4874       " 32 columns x 7 rows            ",
          EDIT.c  4875       "-MEDM: Set font size to 3x6     ",
          EDIT.c  4876       " 25 columns x 7 rows            ",
          EDIT.c  4877       "-LARG: Set font size to 5x7     ",
          EDIT.c  4878       " 21 columns x 6 rows            ",
          EDIT.c  4879       "<Info Bar>                      ",
          EDIT.c  4880       "-FOLD: Folder name is displayed ",
          EDIT.c  4881       " in the top bar.                ",
          EDIT.c  4882       "-CURS: Current line and total   ",
          EDIT.c  4883       " lines are displayed in the top ",
          EDIT.c  4884       " bar.                           ", 
          EDIT.c  4885       "                                ",
          EDIT.c  4886       "                                ",
          EDIT.c  4887       "                                ",
          EDIT.c  4888       "<Text buffer size>              ",
          EDIT.c  4889       "This option sets the size of the",
          EDIT.c  4890       "buffer used to load the files.  ",
          EDIT.c  4891       "It is maximun file size that can",




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  334


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4892       "be loaded in the text editor.   ",
          EDIT.c  4893       "<Clipboard buffer size>         ",
          EDIT.c  4894       "Size of the clipboard buffer. It",
          EDIT.c  4895       "is the maximun data that you can",
          EDIT.c  4896       "and copy and paste.             ",
          EDIT.c  4897       "<Files/Dir.>                    ",
          EDIT.c  4898       "This is the maximun number of   ",
          EDIT.c  4899       "files per folder that can be    ",
          EDIT.c  4900       "displayed in the file explorer  ",
          EDIT.c  4901       "<Foldr.Max.>                    ",
          EDIT.c  4902       "This is the maximun number of   ",
          EDIT.c  4903       "folders that can be displayed in",
          EDIT.c  4904       "the folder selection window.    ",
          EDIT.c  4905       "                                ",
          EDIT.c  4906       "<Auto open>                     ",
          EDIT.c  4907       "-YES: Enable automatic file open",
          EDIT.c  4908       " when application starts.       ",
          EDIT.c  4909       "-NO: Disable automatic file open",
          EDIT.c  4910       "<Auto root/Auto name/Auto foldr>",
          EDIT.c  4911       "-SET: Set path for file to be   ",
          EDIT.c  4912       " opened automatically.          ",
          EDIT.c  4913       "-CLR: Clear file path.          ",
          EDIT.c  4914       "                                ",
          EDIT.c  4915       "                                ",
          EDIT.c  4916       "  This program was developed    ",
          EDIT.c  4917       "  from August 2008 to April     ",
          EDIT.c  4918       "  2009 by Diego Marin. Report   ", 
          EDIT.c  4919       "  any bugs or comments to:      ",
          EDIT.c  4920       "                                ",
          EDIT.c  4921       "       dmarin75@yahoo.es        ",
          EDIT.c  4922       "%HELPEND%"
          EDIT.c  4923       };
    00006AC8 D21D                   MOV.L       L5284+80,R2; L1474
    00006ACA 61F3                   MOV         R15,R1
    00006ACC 9014                   MOV.W       L5284+8,R0 ; H'1A8E
    00006ACE D31D                   MOV.L       L5284+84,R3; __slow_mvn
    00006AD0 430B                   JSR         @R3
    00006AD2 7124                   ADD         #36,R1
          EDIT.c  4924      
          EDIT.c  4925      //Variables
          EDIT.c  4926      int i;
          EDIT.c  4927      int iHPag=0;
    00006AD4 E100                   MOV         #0,R1
          EDIT.c  4928      int iHPagMax;
          EDIT.c  4929      int iStart;
          EDIT.c  4930      int iExit;
          EDIT.c  4931      int iRefresh=1;
    00006AD6 E301                   MOV         #1,R3
    00006AD8 1F17                   MOV.L       R1,@(28,R15)
          EDIT.c  4932      int iCode;
          EDIT.c  4933      int iHelpLines;
          EDIT.c  4934      unsigned int iKey;
          EDIT.c  4935      
          EDIT.c  4936      //Hide keyboard status
          EDIT.c  4937      KeyboardStatusHide(1);
    00006ADA 6433                   MOV         R3,R4
    00006ADC 1F33                   MOV.L       R3,@(12,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  335


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006ADE D308                   MOV.L       L5284+16,R3; _KeyboardStatusHide
    00006AE0 430B                   JSR         @R3
    00006AE2 0009                   NOP
          EDIT.c  4938      MenuStoreBar();
    00006AE4 D208                   MOV.L       L5284+24,R2; _MenuStoreBar
    00006AE6 420B                   JSR         @R2
    00006AE8 0009                   NOP
          EDIT.c  4939      
          EDIT.c  4940      //Calculate help lines
          EDIT.c  4941      for(i=0;strcmp(sHelp[i],"%HELPEND%")!=0;i++);
    00006AEA E300                   MOV         #0,R3
    00006AEC A02F                   BRA         L4832
    00006AEE 1F38                   MOV.L       R3,@(32,R15)
    00006AF0              L5284:                            
    00006AF0 753C                   .DATA.W     H'753C
    00006AF2 753B                   .DATA.W     H'753B
    00006AF4 753E                   .DATA.W     H'753E
    00006AF6 E54C                   .DATA.W     H'E54C
    00006AF8 1A8E                   .DATA.W     H'1A8E
    00006AFA 0000                   .DATA.W     0
    00006AFC <00000000>             .DATA.L     _KeyboardStatusHideStore
    00006B00 <00000000>             .DATA.L     _KeyboardStatusHide
    00006B04 <00000000>             .DATA.L     _SaveDisp
    00006B08 <00000000>             .DATA.L     _MenuStoreBar
    00006B0C <00000000>             .DATA.L     _PopUpWin
    00006B10 <00000000>             .DATA.L     _locate
    00006B14 <00000000>             .DATA.L     L1468
    00006B18 <00000000>             .DATA.L     _Print
    00006B1C <00000000>             .DATA.L     L1469
    00006B20 <00000000>             .DATA.L     _MenuSetBar
    00006B24 <00000000>             .DATA.L     __slow_strcpy
    00006B28 <00000000>             .DATA.L     _GetString
    00006B2C <00000000>             .DATA.L     _RestoreDisp
    00006B30 <00000000>             .DATA.L     _MenuRestoreBar
    00006B34 <00000000>             .DATA.L     _strlen
    00006B38 <00000000>             .DATA.L     L1471
    00006B3C <00000000>             .DATA.L     _KeyboardStatusHideRestore
    00006B40 <00000000>             .DATA.L     L1474
    00006B44 <00000000>             .DATA.L     __slow_mvn
    00006B48              L4833:                            
    00006B48 51F8                   MOV.L       @(32,R15),R1
    00006B4A 7101                   ADD         #1,R1
    00006B4C 1F18                   MOV.L       R1,@(32,R15)
    00006B4E              L4832:                            
    00006B4E 62F3                   MOV         R15,R2
    00006B50 D521                   MOV.L       L5285+2,R5 ; L1484
    00006B52 7224                   ADD         #36,R2
    00006B54 54F8                   MOV.L       @(32,R15),R4
    00006B56 6343                   MOV         R4,R3
    00006B58 4408                   SHLL2       R4
    00006B5A 4408                   SHLL2       R4
    00006B5C 4400                   SHLL        R4
    00006B5E 343C                   ADD         R3,R4
    00006B60 D31E                   MOV.L       L5285+6,R3 ; __slow_strcmp1
    00006B62 430B                   JSR         @R3
    00006B64 342C                   ADD         R2,R4
    00006B66 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  336


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006B68 8BEE                   BF          L4833
          EDIT.c  4942      iHelpLines=i;
    00006B6A 53F8                   MOV.L       @(32,R15),R3
          EDIT.c  4943      
          EDIT.c  4944      //Init screen
          EDIT.c  4945      Bdisp_AllClr_DDVRAM();
    00006B6C D21C                   MOV.L       L5285+10,R2; _Bdisp_AllClr_DDVRAM
    00006B6E 420B                   JSR         @R2
    00006B70 1F31                   MOV.L       R3,@(4,R15)
          EDIT.c  4946      MenuSetBar(MENUBARHNAV);
    00006B72 D31C                   MOV.L       L5285+14,R3; _MenuSetBar
    00006B74 430B                   JSR         @R3
    00006B76 E40A                   MOV         #10,R4
          EDIT.c  4947      iHPagMax=iHelpLines/(GetScrCAy()-1);
    00006B78 D21B                   MOV.L       L5285+18,R2; _GetScrCAy
    00006B7A 420B                   JSR         @R2
    00006B7C 0009                   NOP
    00006B7E 70FF                   ADD         #-1,R0
    00006B80 D31A                   MOV.L       L5285+22,R3; __divls
    00006B82 430B                   JSR         @R3
    00006B84 51F1                   MOV.L       @(4,R15),R1
          EDIT.c  4948      
          EDIT.c  4949      //Main loop
          EDIT.c  4950      iExit=0;
    00006B86 E300                   MOV         #0,R3
    00006B88 1F06                   MOV.L       R0,@(24,R15)
    00006B8A 1F34                   MOV.L       R3,@(16,R15)
          EDIT.c  4951      do{
    00006B8C              L4834:                            
          EDIT.c  4952          
          EDIT.c  4953        //Rewrite screen
          EDIT.c  4954        if(iRefresh==1)
    00006B8C 50F3                   MOV.L       @(12,R15),R0
    00006B8E 8801                   CMP/EQ      #1,R0
    00006B90 8B41                   BF          L4835
          EDIT.c  4955        {
          EDIT.c  4956          SetFont(FONTS);
    00006B92 D217                   MOV.L       L5285+26,R2; _SetFont
    00006B94 420B                   JSR         @R2
    00006B96 E400                   MOV         #0,R4
          EDIT.c  4957          SetColor(COLNOR);
    00006B98 D316                   MOV.L       L5285+30,R3; _SetColor
    00006B9A 430B                   JSR         @R3
    00006B9C E400                   MOV         #0,R4
          EDIT.c  4958          iStart=iHPag*(GetScrCAy()-1);
    00006B9E D212                   MOV.L       L5285+18,R2; _GetScrCAy
    00006BA0 420B                   JSR         @R2
    00006BA2 0009                   NOP
    00006BA4 53F7                   MOV.L       @(28,R15),R3
          EDIT.c  4959          for(i=0;i<(GetScrCAy()-1);i++)
    00006BA6 E100                   MOV         #0,R1
    00006BA8 70FF                   ADD         #-1,R0
    00006BAA 0307                   MUL.L       R0,R3
    00006BAC 001A                   STS         MACL,R0
    00006BAE 1F05                   MOV.L       R0,@(20,R15)
    00006BB0 A02A                   BRA         L4836
    00006BB2 1F18                   MOV.L       R1,@(32,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  337


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006BB4              L4837:                            
          EDIT.c  4960          {
          EDIT.c  4961            if(i+iStart<iHelpLines) 
    00006BB4 53F5                   MOV.L       @(20,R15),R3
    00006BB6 52F8                   MOV.L       @(32,R15),R2
    00006BB8 51F1                   MOV.L       @(4,R15),R1
    00006BBA 323C                   ADD         R3,R2
    00006BBC 3213                   CMP/GE      R1,R2
    00006BBE 891B                   BT          L4838
          EDIT.c  4962              PrintStr(0,i,sHelp[i+iStart]);
    00006BC0 56F8                   MOV.L       @(32,R15),R6
    00006BC2 61F3                   MOV         R15,R1
    00006BC4 363C                   ADD         R3,R6
    00006BC6 6263                   MOV         R6,R2
    00006BC8 4608                   SHLL2       R6
    00006BCA 4608                   SHLL2       R6
    00006BCC 4600                   SHLL        R6
    00006BCE 362C                   ADD         R2,R6
    00006BD0 7124                   ADD         #36,R1
    00006BD2 A012                   BRA         L5018
    00006BD4 361C                   ADD         R1,R6
    00006BD6              L5285:                            
    00006BD6 0000                   .DATA.W     0
    00006BD8 <00000000>             .DATA.L     L1484
    00006BDC <00000000>             .DATA.L     __slow_strcmp1
    00006BE0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00006BE4 <00000000>             .DATA.L     _MenuSetBar
    00006BE8 <00000000>             .DATA.L     _GetScrCAy
    00006BEC <00000000>             .DATA.L     __divls
    00006BF0 <00000000>             .DATA.L     _SetFont
    00006BF4 <00000000>             .DATA.L     _SetColor
    00006BF8              L4838:                            
          EDIT.c  4963            else
          EDIT.c  4964              PrintStr(0,i,"                                ");
    00006BF8 D630                   MOV.L       L5286+14,R6; L1488
    00006BFA              L5018:                            
    00006BFA 55F8                   MOV.L       @(32,R15),R5
    00006BFC D230                   MOV.L       L5286+18,R2; _PrintStr
    00006BFE 420B                   JSR         @R2
    00006C00 E400                   MOV         #0,R4
    00006C02 53F8                   MOV.L       @(32,R15),R3
    00006C04 7301                   ADD         #1,R3
    00006C06 1F38                   MOV.L       R3,@(32,R15)
    00006C08              L4836:                            
    00006C08 D22E                   MOV.L       L5286+22,R2; _GetScrCAy
    00006C0A 420B                   JSR         @R2
    00006C0C 0009                   NOP
    00006C0E 70FF                   ADD         #-1,R0
    00006C10 53F8                   MOV.L       @(32,R15),R3
    00006C12 3303                   CMP/GE      R0,R3
    00006C14 8BCE                   BF          L4837
    00006C16              L4835:                            
          EDIT.c  4965          }
          EDIT.c  4966        }
          EDIT.c  4967        
          EDIT.c  4968        //Flush screen
          EDIT.c  4969        if(iRefresh!=0)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  338


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006C16 50F3                   MOV.L       @(12,R15),R0
    00006C18 2008                   TST         R0,R0
    00006C1A 8904                   BT          L4840
          EDIT.c  4970        {
          EDIT.c  4971          Bdisp_PutDisp_DD();
    00006C1C D22A                   MOV.L       L5286+26,R2; _Bdisp_PutDisp_DD
    00006C1E 420B                   JSR         @R2
    00006C20 0009                   NOP
          EDIT.c  4972          iRefresh=0;
    00006C22 E000                   MOV         #0,R0
    00006C24 1F03                   MOV.L       R0,@(12,R15)
    00006C26              L4840:                            
          EDIT.c  4973        }
          EDIT.c  4974        
          EDIT.c  4975        //Check keystroke
          EDIT.c  4976        if(KbHit()){
    00006C26 D329                   MOV.L       L5286+30,R3; _KbHit
    00006C28 430B                   JSR         @R3
    00006C2A 0009                   NOP
    00006C2C 2008                   TST         R0,R0
    00006C2E 8955                   BT          L4841
          EDIT.c  4977            
          EDIT.c  4978          //Get Key
          EDIT.c  4979          iKey=GetKeyb();
    00006C30 D327                   MOV.L       L5286+34,R3; _GetKeyb
    00006C32 430B                   JSR         @R3
    00006C34 0009                   NOP
    00006C36 2F02                   MOV.L       R0,@R15
          EDIT.c  4980            
          EDIT.c  4981          //Process keys
          EDIT.c  4982          switch(iKey)
    00006C38 9139                   MOV.W       L5286,R1   ; H'7539
    00006C3A 3010                   CMP/EQ      R1,R0
    00006C3C 8913                   BT          L2992
    00006C3E 9137                   MOV.W       L5286+2,R1 ; H'753A
    00006C40 3010                   CMP/EQ      R1,R0
    00006C42 8910                   BT          L2993
    00006C44 9135                   MOV.W       L5286+4,R1 ; H'753B
    00006C46 3010                   CMP/EQ      R1,R0
    00006C48 890D                   BT          L2994
    00006C4A 9133                   MOV.W       L5286+6,R1 ; H'753C
    00006C4C 3010                   CMP/EQ      R1,R0
    00006C4E 890A                   BT          L2995
    00006C50 9131                   MOV.W       L5286+8,R1 ; H'753D
    00006C52 3010                   CMP/EQ      R1,R0
    00006C54 8907                   BT          L2996
    00006C56 912F                   MOV.W       L5286+10,R1; H'753E
    00006C58 3010                   CMP/EQ      R1,R0
    00006C5A 8904                   BT          L2997
    00006C5C 912D                   MOV.W       L5286+12,R1; H'7532
    00006C5E 3010                   CMP/EQ      R1,R0
    00006C60 893A                   BT          L3001
    00006C62 A03B                   BRA         L4841
    00006C64 0009                   NOP
    00006C66              L2992:                           ; case label 
          EDIT.c  4983          {
          EDIT.c  4984            //Process menu commands




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  339


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  4985            case KEY_CTRL_F1:
          EDIT.c  4986            case KEY_CTRL_F2:
    00006C66              L2993:                           ; case label 
          EDIT.c  4987            case KEY_CTRL_F3:
    00006C66              L2994:                           ; case label 
          EDIT.c  4988            case KEY_CTRL_F4:
    00006C66              L2995:                           ; case label 
          EDIT.c  4989            case KEY_CTRL_F5:
    00006C66              L2996:                           ; case label 
          EDIT.c  4990            case KEY_CTRL_F6:
    00006C66              L2997:                           ; case label 
          EDIT.c  4991              iCode=MenuFunctionKey(iKey);
    00006C66 D31B                   MOV.L       L5286+38,R3; _MenuFunctionKey
    00006C68 430B                   JSR         @R3
    00006C6A 64F2                   MOV.L       @R15,R4
          EDIT.c  4992              if(iCode!=NODENOFUNCT)
    00006C6C 2008                   TST         R0,R0
    00006C6E 8D35                   BT/S        L4841
    00006C70 1F02                   MOV.L       R0,@(8,R15)
          EDIT.c  4993              {
          EDIT.c  4994                switch(iCode)
    00006C72 881B                   CMP/EQ      #27,R0
    00006C74 8905                   BT          L2998
    00006C76 881C                   CMP/EQ      #28,R0
    00006C78 890D                   BT          L2999
    00006C7A 881D                   CMP/EQ      #29,R0
    00006C7C 8914                   BT          L3000
    00006C7E A02D                   BRA         L4841
    00006C80 0009                   NOP
    00006C82              L2998:                           ; case label 
          EDIT.c  4995                {
          EDIT.c  4996                
          EDIT.c  4997                  //Page+
          EDIT.c  4998                  case NODEHELPPAGD:
          EDIT.c  4999                    if(iHPag<iHPagMax)
    00006C82 52F6                   MOV.L       @(24,R15),R2
    00006C84 53F7                   MOV.L       @(28,R15),R3
    00006C86 3323                   CMP/GE      R2,R3
    00006C88 8928                   BT          L4841
          EDIT.c  5000                    {
          EDIT.c  5001                      iHPag++;
          EDIT.c  5002                      iRefresh=1;
    00006C8A E101                   MOV         #1,R1
    00006C8C 53F7                   MOV.L       @(28,R15),R3
    00006C8E 7301                   ADD         #1,R3
    00006C90 1F37                   MOV.L       R3,@(28,R15)
          EDIT.c  5003                    }
          EDIT.c  5004                    break;
    00006C92 A023                   BRA         L4841
    00006C94 1F13                   MOV.L       R1,@(12,R15)
    00006C96              L2999:                           ; case label 
          EDIT.c  5005                  
          EDIT.c  5006                  //Page-
          EDIT.c  5007                  case NODEHELPPAGU:
          EDIT.c  5008                    if(iHPag>0)
    00006C96 52F7                   MOV.L       @(28,R15),R2
    00006C98 4215                   CMP/PL      R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  340


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006C9A 8B1F                   BF          L4841
          EDIT.c  5009                    {
          EDIT.c  5010                      iHPag--;
    00006C9C 51F7                   MOV.L       @(28,R15),R1
          EDIT.c  5011                      iRefresh=1;
    00006C9E E301                   MOV         #1,R3
    00006CA0 71FF                   ADD         #-1,R1
    00006CA2 1F17                   MOV.L       R1,@(28,R15)
          EDIT.c  5012                    }
          EDIT.c  5013                    break;
    00006CA4 A01A                   BRA         L4841
    00006CA6 1F33                   MOV.L       R3,@(12,R15)
    00006CA8              L3000:                           ; case label 
          EDIT.c  5014                  
          EDIT.c  5015                  //Exit
          EDIT.c  5016                  case NODEHELPEXIT:
          EDIT.c  5017                    iExit=1;
    00006CA8 E101                   MOV         #1,R1
          EDIT.c  5018                    break;
          EDIT.c  5019                  
          EDIT.c  5020                }
          EDIT.c  5021                break;
    00006CAA A017                   BRA         L4841
    00006CAC 1F14                   MOV.L       R1,@(16,R15)
    00006CAE              L5286:                            
    00006CAE 7539                   .DATA.W     H'7539
    00006CB0 753A                   .DATA.W     H'753A
    00006CB2 753B                   .DATA.W     H'753B
    00006CB4 753C                   .DATA.W     H'753C
    00006CB6 753D                   .DATA.W     H'753D
    00006CB8 753E                   .DATA.W     H'753E
    00006CBA 7532                   .DATA.W     H'7532
    00006CBC <00000000>             .DATA.L     L1488
    00006CC0 <00000000>             .DATA.L     _PrintStr
    00006CC4 <00000000>             .DATA.L     _GetScrCAy
    00006CC8 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00006CCC <00000000>             .DATA.L     _KbHit
    00006CD0 <00000000>             .DATA.L     _GetKeyb
    00006CD4 <00000000>             .DATA.L     _MenuFunctionKey
    00006CD8              L3001:                           ; case label 
          EDIT.c  5022              }
          EDIT.c  5023              break;
          EDIT.c  5024             
          EDIT.c  5025              //Exit
          EDIT.c  5026              case KEY_CTRL_EXIT:
          EDIT.c  5027                iExit=1;
    00006CD8 E201                   MOV         #1,R2
    00006CDA 1F24                   MOV.L       R2,@(16,R15)
          EDIT.c  5028                break;
    00006CDC              L4841:                            
          EDIT.c  5029          }
          EDIT.c  5030       
          EDIT.c  5031        }
          EDIT.c  5032      
          EDIT.c  5033      }while(iExit==0);
    00006CDC 51F4                   MOV.L       @(16,R15),R1
    00006CDE 2118                   TST         R1,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  341


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006CE0 8B01                   BF          L5287
    00006CE2 AF53                   BRA         L4834
    00006CE4 0009                   NOP
    00006CE6              L5287:                            
          EDIT.c  5034    
          EDIT.c  5035      //Unhide keyboard status
          EDIT.c  5036      KeyboardStatusHide(0);
    00006CE6 D333                   MOV.L       L5288+4,R3 ; _KeyboardStatusHide
    00006CE8 430B                   JSR         @R3
    00006CEA E400                   MOV         #0,R4
          EDIT.c  5037      MenuRestoreBar();
    00006CEC D232                   MOV.L       L5288+8,R2 ; _MenuRestoreBar
    00006CEE 420B                   JSR         @R2
    00006CF0 0009                   NOP
          EDIT.c  5038      
          EDIT.c  5039    }
    00006CF2 915D                   MOV.W       L5288,R1   ; H'1AB4
    00006CF4 3F1C                   ADD         R1,R15
    00006CF6 4F16                   LDS.L       @R15+,MACL
    00006CF8 4F26                   LDS.L       @R15+,PR
    00006CFA 000B                   RTS
    00006CFC 0009                   NOP
          EDIT.c  5040    
          EDIT.c  5041    // ----------------------------------------------------------------
          EDIT.c  5042    // Character selection 
          EDIT.c  5043    char CharacterSelect(int iBindMode,struct Config *sConfig)
    00006CFE              _CharacterSelect:                ; function: CharacterSelect
                                                           ; frame size=76
          EDIT.c  5044    {
          EDIT.c  5045      //Macros
          EDIT.c  5046      #define MINCHAR 32
          EDIT.c  5047      #define MAXCHAR 126
          EDIT.c  5048      #define CHARACTER(x,y) (MINCHAR+(y -1)*19+x)
          EDIT.c  5049      
          EDIT.c  5050      //Variables
          EDIT.c  5051      int i,j,k;
          EDIT.c  5052      int iExit;
          EDIT.c  5053      int iMapIndex;
          EDIT.c  5054      int iBindKey;
          EDIT.c  5055      int iFound;
          EDIT.c  5056      int iOffsetX;
          EDIT.c  5057      int iOffsetY;
          EDIT.c  5058      int iRefresh=1;
    00006CFE E301                   MOV         #1,R3
          EDIT.c  5059      int iCode;
          EDIT.c  5060      int iChr;
          EDIT.c  5061      static int iCx=0,iCy=1;
          EDIT.c  5062      static int iACx=0,iACy=1;
          EDIT.c  5063      unsigned int iKey;
          EDIT.c  5064      
          EDIT.c  5065      //Init screen
          EDIT.c  5066      KeyboardStatusHideStore();
    00006D00 D22E                   MOV.L       L5288+12,R2; _KeyboardStatusHideStore
    00006D02 4F22                   STS.L       PR,@-R15
    00006D04 4F12                   STS.L       MACL,@-R15
    00006D06 7FC4                   ADD         #-60,R15
    00006D08 1F4E                   MOV.L       R4,@(56,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  342


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006D0A 1F5D                   MOV.L       R5,@(52,R15)
    00006D0C 420B                   JSR         @R2
    00006D0E 1F33                   MOV.L       R3,@(12,R15)
          EDIT.c  5067      KeyboardStatusHide(1);
    00006D10 D328                   MOV.L       L5288+4,R3 ; _KeyboardStatusHide
    00006D12 430B                   JSR         @R3
    00006D14 E401                   MOV         #1,R4
          EDIT.c  5068      MenuStoreBar();
    00006D16 D22A                   MOV.L       L5288+16,R2; _MenuStoreBar
    00006D18 420B                   JSR         @R2
    00006D1A 0009                   NOP
          EDIT.c  5069      
          EDIT.c  5070      //Main loop
          EDIT.c  5071      iExit=0;
    00006D1C E300                   MOV         #0,R3
    00006D1E 1F39                   MOV.L       R3,@(36,R15)
          EDIT.c  5072      do{
    00006D20              L4847:                            
          EDIT.c  5073          
          EDIT.c  5074        //Rewrite screen
          EDIT.c  5075        if(iRefresh==1)
    00006D20 50F3                   MOV.L       @(12,R15),R0
    00006D22 8801                   CMP/EQ      #1,R0
    00006D24 8901                   BT          L5289
    00006D26 A0C9                   BRA         L4848
    00006D28 0009                   NOP
    00006D2A              L5289:                            
          EDIT.c  5076        {
          EDIT.c  5077          
          EDIT.c  5078          //Clear display
          EDIT.c  5079          Bdisp_AllClr_DDVRAM();
    00006D2A D226                   MOV.L       L5288+20,R2; _Bdisp_AllClr_DDVRAM
    00006D2C 420B                   JSR         @R2
    00006D2E 0009                   NOP
          EDIT.c  5080      
          EDIT.c  5081          //Set menu bar
          EDIT.c  5082          if(iBindMode==1){
    00006D30 50FE                   MOV.L       @(56,R15),R0
    00006D32 8801                   CMP/EQ      #1,R0
    00006D34 8B09                   BF          L4849
          EDIT.c  5083            MenuEnableNode(MENUBARCHAR,4);
    00006D36 E504                   MOV         #4,R5
    00006D38 D223                   MOV.L       L5288+24,R2; _MenuEnableNode
    00006D3A 420B                   JSR         @R2
    00006D3C E411                   MOV         #17,R4
          EDIT.c  5084            MenuEnableNode(MENUBARCHAR,5);
    00006D3E E505                   MOV         #5,R5
    00006D40 D321                   MOV.L       L5288+24,R3; _MenuEnableNode
    00006D42 430B                   JSR         @R3
    00006D44 E411                   MOV         #17,R4
    00006D46 A008                   BRA         L4850
    00006D48 0009                   NOP
    00006D4A              L4849:                            
          EDIT.c  5085          }
          EDIT.c  5086          else{
          EDIT.c  5087           MenuDisableNode(MENUBARCHAR,4);
    00006D4A E504                   MOV         #4,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  343


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006D4C D31F                   MOV.L       L5288+28,R3; _MenuDisableNode
    00006D4E 430B                   JSR         @R3
    00006D50 E411                   MOV         #17,R4
          EDIT.c  5088           MenuDisableNode(MENUBARCHAR,5);
    00006D52 E505                   MOV         #5,R5
    00006D54 D21D                   MOV.L       L5288+28,R2; _MenuDisableNode
    00006D56 420B                   JSR         @R2
    00006D58 E411                   MOV         #17,R4
    00006D5A              L4850:                            
          EDIT.c  5089          }
          EDIT.c  5090          MenuSetBar(MENUBARCHAR); 
    00006D5A D31D                   MOV.L       L5288+32,R3; _MenuSetBar
    00006D5C 430B                   JSR         @R3
    00006D5E E411                   MOV         #17,R4
          EDIT.c  5091      
          EDIT.c  5092          //Print char map
          EDIT.c  5093          SetFont(FONTL);
    00006D60 D21C                   MOV.L       L5288+36,R2; _SetFont
    00006D62 420B                   JSR         @R2
    00006D64 E403                   MOV         #3,R4
          EDIT.c  5094          PrintStr(0,0," ASCII Character set ");
    00006D66 E500                   MOV         #0,R5
    00006D68 D31C                   MOV.L       L5288+44,R3; _PrintStr
    00006D6A D61B                   MOV.L       L5288+40,R6; L1520
    00006D6C 430B                   JSR         @R3
    00006D6E 6453                   MOV         R5,R4
          EDIT.c  5095          for(i=0;i<19;i++){
    00006D70 E200                   MOV         #0,R2
    00006D72 A09A                   BRA         L4851
    00006D74 1F2C                   MOV.L       R2,@(48,R15)
    00006D76              L4852:                            
          EDIT.c  5096          for(j=1;j< 6;j++){
    00006D76 E101                   MOV         #1,R1
    00006D78 A08E                   BRA         L4853
    00006D7A 1F1B                   MOV.L       R1,@(44,R15)
    00006D7C              L4854:                            
          EDIT.c  5097            iOffsetX=-1;
    00006D7C E2FF                   MOV         #-1,R2
          EDIT.c  5098            iOffsetY=0;
    00006D7E E300                   MOV         #0,R3
    00006D80 1F25                   MOV.L       R2,@(20,R15)
    00006D82 1F34                   MOV.L       R3,@(16,R15)
          EDIT.c  5099            SetFont(FONTL);
    00006D84 D313                   MOV.L       L5288+36,R3; _SetFont
    00006D86 430B                   JSR         @R3
    00006D88 E403                   MOV         #3,R4
          EDIT.c  5100            SetColor(COLNOR);
    00006D8A D215                   MOV.L       L5288+48,R2; _SetColor
    00006D8C 420B                   JSR         @R2
    00006D8E E400                   MOV         #0,R4
          EDIT.c  5101            iChr=CHARACTER(i,j);
    00006D90 53FB                   MOV.L       @(44,R15),R3
    00006D92 E213                   MOV         #19,R2
    00006D94 51FC                   MOV.L       @(48,R15),R1
    00006D96 73FF                   ADD         #-1,R3
    00006D98 0327                   MUL.L       R2,R3
    00006D9A 031A                   STS         MACL,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  344


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006D9C 331C                   ADD         R1,R3
    00006D9E 7320                   ADD         #32,R3
    00006DA0 1F31                   MOV.L       R3,@(4,R15)
          EDIT.c  5102            if(iBindMode==1){
    00006DA2 50FE                   MOV.L       @(56,R15),R0
    00006DA4 8801                   CMP/EQ      #1,R0
    00006DA6 8B53                   BF          L4855
          EDIT.c  5103              for(k=0;k<MAXCHARMAP;k++){
    00006DA8 E200                   MOV         #0,R2
    00006DAA 1F2A                   MOV.L       R2,@(40,R15)
    00006DAC A04C                   BRA         L4856
    00006DAE 0009                   NOP
    00006DB0              L5288:                            
    00006DB0 1AB4                   .DATA.W     H'1AB4
    00006DB2 0000                   .DATA.W     0
    00006DB4 <00000000>             .DATA.L     _KeyboardStatusHide
    00006DB8 <00000000>             .DATA.L     _MenuRestoreBar
    00006DBC <00000000>             .DATA.L     _KeyboardStatusHideStore
    00006DC0 <00000000>             .DATA.L     _MenuStoreBar
    00006DC4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00006DC8 <00000000>             .DATA.L     _MenuEnableNode
    00006DCC <00000000>             .DATA.L     _MenuDisableNode
    00006DD0 <00000000>             .DATA.L     _MenuSetBar
    00006DD4 <00000000>             .DATA.L     _SetFont
    00006DD8 <00000000>             .DATA.L     L1520
    00006DDC <00000000>             .DATA.L     _PrintStr
    00006DE0 <00000000>             .DATA.L     _SetColor
    00006DE4              L4857:                            
          EDIT.c  5104                if((int)(sConfig->sCharMap[k].cAscii)==iChr){
    00006DE4 53FD                   MOV.L       @(52,R15),R3
    00006DE6 52FA                   MOV.L       @(40,R15),R2
    00006DE8 4208                   SHLL2       R2
    00006DEA 4200                   SHLL        R2
    00006DEC 7360                   ADD         #96,R3
    00006DEE 323C                   ADD         R3,R2
    00006DF0 8424                   MOV.B       @(4,R2),R0
    00006DF2 53F1                   MOV.L       @(4,R15),R3
    00006DF4 3030                   CMP/EQ      R3,R0
    00006DF6 8B24                   BF          L4858
          EDIT.c  5105                  iOffsetX=1;
    00006DF8 E001                   MOV         #1,R0
          EDIT.c  5106                  iOffsetY=1;
    00006DFA 6303                   MOV         R0,R3
    00006DFC 1F05                   MOV.L       R0,@(20,R15)
    00006DFE 1F34                   MOV.L       R3,@(16,R15)
          EDIT.c  5107                  SetFont(FONTS);
    00006E00 D319                   MOV.L       L5290,R3   ; _SetFont
    00006E02 430B                   JSR         @R3
    00006E04 E400                   MOV         #0,R4
          EDIT.c  5108                  SetColor(COLREV);
    00006E06 D219                   MOV.L       L5290+4,R2 ; _SetColor
    00006E08 420B                   JSR         @R2
    00006E0A E401                   MOV         #1,R4
          EDIT.c  5109                  Rectangle(7+(i+0)*6+0,4+(j+0)*8+0,
          EDIT.c  5110                            7+(i+1)*6-2,4+(j+1)*8-2,1);
    00006E0C E301                   MOV         #1,R3
    00006E0E 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  345


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006E10 57FC                   MOV.L       @(48,R15),R7
    00006E12 373C                   ADD         R3,R7
    00006E14 56FD                   MOV.L       @(52,R15),R6
    00006E16 4708                   SHLL2       R7
    00006E18 55FC                   MOV.L       @(48,R15),R5
    00006E1A 363C                   ADD         R3,R6
    00006E1C 54FD                   MOV.L       @(52,R15),R4
    00006E1E 4700                   SHLL        R7
    00006E20 7702                   ADD         #2,R7
    00006E22 6263                   MOV         R6,R2
    00006E24 4600                   SHLL        R6
    00006E26 4208                   SHLL2       R2
    00006E28 362C                   ADD         R2,R6
    00006E2A 7605                   ADD         #5,R6
    00006E2C 4508                   SHLL2       R5
    00006E2E 4500                   SHLL        R5
    00006E30 7504                   ADD         #4,R5
    00006E32 6243                   MOV         R4,R2
    00006E34 4400                   SHLL        R4
    00006E36 4208                   SHLL2       R2
    00006E38 342C                   ADD         R2,R4
    00006E3A B313                   BSR         _Rectangle
    00006E3C 7407                   ADD         #7,R4
          EDIT.c  5111                  break;
    00006E3E A007                   BRA         L4855
    00006E40 7F04                   ADD         #4,R15
    00006E42              L4858:                            
    00006E42 52FA                   MOV.L       @(40,R15),R2
    00006E44 7201                   ADD         #1,R2
    00006E46 1F2A                   MOV.L       R2,@(40,R15)
    00006E48              L4856:                            
    00006E48 51FA                   MOV.L       @(40,R15),R1
    00006E4A E314                   MOV         #20,R3
    00006E4C 3133                   CMP/GE      R3,R1
    00006E4E 8BC9                   BF          L4857
    00006E50              L4855:                            
          EDIT.c  5112                } 
          EDIT.c  5113              }
          EDIT.c  5114            }  
          EDIT.c  5115            if(iChr<=MAXCHAR)
    00006E50 52F1                   MOV.L       @(4,R15),R2
    00006E52 E37E                   MOV         #126,R3
    00006E54 3237                   CMP/GT      R3,R2
    00006E56 890B                   BT          L4860
          EDIT.c  5116              PrintCharXY(7+i*6+iOffsetX,4+j*8+iOffsetY,iChr);
    00006E58 56F1                   MOV.L       @(4,R15),R6
    00006E5A 55FB                   MOV.L       @(44,R15),R5
    00006E5C 52F4                   MOV.L       @(16,R15),R2
    00006E5E 4508                   SHLL2       R5
    00006E60 4500                   SHLL        R5
    00006E62 352C                   ADD         R2,R5
    00006E64 A00A                   BRA         L5019
    00006E66 0009                   NOP
    00006E68              L5290:                            
    00006E68 <00000000>             .DATA.L     _SetFont
    00006E6C <00000000>             .DATA.L     _SetColor
    00006E70              L4860:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  346


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  5117            else
          EDIT.c  5118              PrintCharXY(7+i*6+iOffsetX,4+j*8+iOffsetY,' ');
    00006E70 55FB                   MOV.L       @(44,R15),R5
    00006E72 E620                   MOV         #32,R6
    00006E74 52F4                   MOV.L       @(16,R15),R2
    00006E76 4508                   SHLL2       R5
    00006E78 4500                   SHLL        R5
    00006E7A 352C                   ADD         R2,R5
    00006E7C              L5019:                            
    00006E7C 54FC                   MOV.L       @(48,R15),R4
    00006E7E 7504                   ADD         #4,R5
    00006E80 D34A                   MOV.L       L5291+12,R3; _PrintCharXY
    00006E82 6143                   MOV         R4,R1
    00006E84 4400                   SHLL        R4
    00006E86 4108                   SHLL2       R1
    00006E88 341C                   ADD         R1,R4
    00006E8A 51F5                   MOV.L       @(20,R15),R1
    00006E8C 341C                   ADD         R1,R4
    00006E8E 430B                   JSR         @R3
    00006E90 7407                   ADD         #7,R4
    00006E92 52FB                   MOV.L       @(44,R15),R2
    00006E94 7201                   ADD         #1,R2
    00006E96 1F2B                   MOV.L       R2,@(44,R15)
    00006E98              L4853:                            
    00006E98 51FB                   MOV.L       @(44,R15),R1
    00006E9A E306                   MOV         #6,R3
    00006E9C 3133                   CMP/GE      R3,R1
    00006E9E 8901                   BT          L5292
    00006EA0 AF6C                   BRA         L4854
    00006EA2 0009                   NOP
    00006EA4              L5292:                            
    00006EA4 53FC                   MOV.L       @(48,R15),R3
    00006EA6 7301                   ADD         #1,R3
    00006EA8 1F3C                   MOV.L       R3,@(48,R15)
    00006EAA              L4851:                            
    00006EAA E213                   MOV         #19,R2
    00006EAC 51FC                   MOV.L       @(48,R15),R1
    00006EAE 3123                   CMP/GE      R2,R1
    00006EB0 8901                   BT          L5293
    00006EB2 AF60                   BRA         L4852
    00006EB4 0009                   NOP
    00006EB6              L5293:                            
          EDIT.c  5119          }}
          EDIT.c  5120          SetColor(COLNOR);
    00006EB6 D23E                   MOV.L       L5291+16,R2; _SetColor
    00006EB8 420B                   JSR         @R2
    00006EBA E400                   MOV         #0,R4
    00006EBC              L4848:                            
          EDIT.c  5121        }
          EDIT.c  5122        
          EDIT.c  5123        //Cursor position
          EDIT.c  5124        if(iCx!=iACx || iCy!=iACy || iRefresh!=0)
    00006EBC D13D                   MOV.L       L5291+20,R1; __$iACx$1513
    00006EBE 6312                   MOV.L       @R1,R3
    00006EC0 D03D                   MOV.L       L5291+24,R0; __$iCx$1511
    00006EC2 6202                   MOV.L       @R0,R2
    00006EC4 3230                   CMP/EQ      R3,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  347


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006EC6 8B08                   BF          L4863
    00006EC8 D03C                   MOV.L       L5291+28,R0; __$iACy$1514
    00006ECA 6202                   MOV.L       @R0,R2
    00006ECC D33C                   MOV.L       L5291+32,R3; __$iCy$1512
    00006ECE 6032                   MOV.L       @R3,R0
    00006ED0 3020                   CMP/EQ      R2,R0
    00006ED2 8B02                   BF          L4863
    00006ED4 53F3                   MOV.L       @(12,R15),R3
    00006ED6 2338                   TST         R3,R3
    00006ED8 8944                   BT          L4864
    00006EDA              L4863:                            
          EDIT.c  5125        {
          EDIT.c  5126         
          EDIT.c  5127         //Clear previous cursor position
          EDIT.c  5128         Rectangle(7+(iACx+0)*6-1,4+(iACy+0)*8-1,
          EDIT.c  5129                   7+(iACx+1)*6-1,4+(iACy+1)*8-1,0);
    00006EDA E100                   MOV         #0,R1
    00006EDC D337                   MOV.L       L5291+28,R3; __$iACy$1514
    00006EDE 2F16                   MOV.L       R1,@-R15
    00006EE0 6732                   MOV.L       @R3,R7
    00006EE2 7701                   ADD         #1,R7
    00006EE4 D233                   MOV.L       L5291+20,R2; __$iACx$1513
    00006EE6 4708                   SHLL2       R7
    00006EE8 6622                   MOV.L       @R2,R6
    00006EEA 6023                   MOV         R2,R0
    00006EEC 6402                   MOV.L       @R0,R4
    00006EEE 4700                   SHLL        R7
    00006EF0 7703                   ADD         #3,R7
    00006EF2 7601                   ADD         #1,R6
    00006EF4 6363                   MOV         R6,R3
    00006EF6 4600                   SHLL        R6
    00006EF8 4308                   SHLL2       R3
    00006EFA 363C                   ADD         R3,R6
    00006EFC D32F                   MOV.L       L5291+28,R3; __$iACy$1514
    00006EFE 6243                   MOV         R4,R2
    00006F00 6532                   MOV.L       @R3,R5
    00006F02 7606                   ADD         #6,R6
    00006F04 4508                   SHLL2       R5
    00006F06 4500                   SHLL        R5
    00006F08 7503                   ADD         #3,R5
    00006F0A 4400                   SHLL        R4
    00006F0C 4208                   SHLL2       R2
    00006F0E 342C                   ADD         R2,R4
    00006F10 B2A8                   BSR         _Rectangle
    00006F12 7406                   ADD         #6,R4
          EDIT.c  5130         
          EDIT.c  5131         //Set current cursor position
          EDIT.c  5132         Rectangle(7+(iCx+0)*6-1,4+(iCy+0)*8-1,
          EDIT.c  5133                   7+(iCx+1)*6-1,4+(iCy+1)*8-1,1);
    00006F14 D32A                   MOV.L       L5291+32,R3; __$iCy$1512
    00006F16 E201                   MOV         #1,R2
    00006F18 2F26                   MOV.L       R2,@-R15
    00006F1A 6732                   MOV.L       @R3,R7
    00006F1C D326                   MOV.L       L5291+24,R3; __$iCx$1511
    00006F1E 372C                   ADD         R2,R7
    00006F20 6632                   MOV.L       @R3,R6
    00006F22 4708                   SHLL2       R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  348


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00006F24 D326                   MOV.L       L5291+32,R3; __$iCy$1512
    00006F26 362C                   ADD         R2,R6
    00006F28 6532                   MOV.L       @R3,R5
    00006F2A 4700                   SHLL        R7
    00006F2C 7703                   ADD         #3,R7
    00006F2E 6163                   MOV         R6,R1
    00006F30 4600                   SHLL        R6
    00006F32 4108                   SHLL2       R1
    00006F34 361C                   ADD         R1,R6
    00006F36 7606                   ADD         #6,R6
    00006F38 D11F                   MOV.L       L5291+24,R1; __$iCx$1511
    00006F3A 4508                   SHLL2       R5
    00006F3C 6412                   MOV.L       @R1,R4
    00006F3E 4500                   SHLL        R5
    00006F40 7503                   ADD         #3,R5
    00006F42 6343                   MOV         R4,R3
    00006F44 4400                   SHLL        R4
    00006F46 4308                   SHLL2       R3
    00006F48 343C                   ADD         R3,R4
    00006F4A B28B                   BSR         _Rectangle
    00006F4C 7406                   ADD         #6,R4
    00006F4E 7F08                   ADD         #8,R15
          EDIT.c  5134         
          EDIT.c  5135         //Screen refresh
          EDIT.c  5136         iRefresh=1;
    00006F50 E201                   MOV         #1,R2
    00006F52 1F23                   MOV.L       R2,@(12,R15)
          EDIT.c  5137        
          EDIT.c  5138        }    
          EDIT.c  5139        
          EDIT.c  5140        //Flush screen
          EDIT.c  5141        if(iRefresh!=0)
    00006F54 53F3                   MOV.L       @(12,R15),R3
    00006F56 2338                   TST         R3,R3
    00006F58 8904                   BT          L4864
          EDIT.c  5142        {
          EDIT.c  5143          Bdisp_PutDisp_DD();
    00006F5A D31A                   MOV.L       L5291+36,R3; _Bdisp_PutDisp_DD
    00006F5C 430B                   JSR         @R3
    00006F5E 0009                   NOP
          EDIT.c  5144          iRefresh=0;
    00006F60 E100                   MOV         #0,R1
    00006F62 1F13                   MOV.L       R1,@(12,R15)
    00006F64              L4864:                            
          EDIT.c  5145        }
          EDIT.c  5146        
          EDIT.c  5147        //Previous cursor position
          EDIT.c  5148        iACx=iCx;
    00006F64 D214                   MOV.L       L5291+24,R2; __$iCx$1511
    00006F66 6322                   MOV.L       @R2,R3
    00006F68 D112                   MOV.L       L5291+20,R1; __$iACx$1513
    00006F6A 2132                   MOV.L       R3,@R1
          EDIT.c  5149        iACy=iCy;
    00006F6C D314                   MOV.L       L5291+32,R3; __$iCy$1512
    00006F6E 6032                   MOV.L       @R3,R0
    00006F70 D212                   MOV.L       L5291+28,R2; __$iACy$1514
          EDIT.c  5150        




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  349


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  5151        //Get Key
          EDIT.c  5152        iKey=GetKeyb();
    00006F72 D115                   MOV.L       L5291+40,R1; _GetKeyb
    00006F74 410B                   JSR         @R1
    00006F76 2202                   MOV.L       R0,@R2
          EDIT.c  5153          
          EDIT.c  5154        //Get menu commands
          EDIT.c  5155        if(iKey==KEY_CTRL_F1 || iKey==KEY_CTRL_F2
          EDIT.c  5156        || iKey==KEY_CTRL_F3 || iKey==KEY_CTRL_F4
          EDIT.c  5157        || iKey==KEY_CTRL_F5 || iKey==KEY_CTRL_F6)
    00006F78 9312                   MOV.W       L5291,R3   ; H'7539
    00006F7A 3030                   CMP/EQ      R3,R0
    00006F7C 8D27                   BT/S        L4866
    00006F7E 2F02                   MOV.L       R0,@R15
    00006F80 910F                   MOV.W       L5291+2,R1 ; H'753A
    00006F82 3010                   CMP/EQ      R1,R0
    00006F84 8923                   BT          L4866
    00006F86 920D                   MOV.W       L5291+4,R2 ; H'753B
    00006F88 3020                   CMP/EQ      R2,R0
    00006F8A 8920                   BT          L4866
    00006F8C 910B                   MOV.W       L5291+6,R1 ; H'753C
    00006F8E 3010                   CMP/EQ      R1,R0
    00006F90 891D                   BT          L4866
    00006F92 9209                   MOV.W       L5291+8,R2 ; H'753D
    00006F94 3020                   CMP/EQ      R2,R0
    00006F96 891A                   BT          L4866
    00006F98 9107                   MOV.W       L5291+10,R1; H'753E
    00006F9A 3010                   CMP/EQ      R1,R0
    00006F9C A016                   BRA         L5023
    00006F9E 0009                   NOP
    00006FA0              L5291:                            
    00006FA0 7539                   .DATA.W     H'7539
    00006FA2 753A                   .DATA.W     H'753A
    00006FA4 753B                   .DATA.W     H'753B
    00006FA6 753C                   .DATA.W     H'753C
    00006FA8 753D                   .DATA.W     H'753D
    00006FAA 753E                   .DATA.W     H'753E
    00006FAC <00000000>             .DATA.L     _PrintCharXY
    00006FB0 <00000000>             .DATA.L     _SetColor
    00006FB4 <00000000>             .DATA.L     __$iACx$1513
    00006FB8 <00000000>             .DATA.L     __$iCx$1511
    00006FBC <00000000>             .DATA.L     __$iACy$1514
    00006FC0 <00000000>             .DATA.L     __$iCy$1512
    00006FC4 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00006FC8 <00000000>             .DATA.L     _GetKeyb
    00006FCC              L5023:                            
    00006FCC 8B04                   BF          L4865
    00006FCE              L4866:                            
          EDIT.c  5158          iKey=-MenuFunctionKey(iKey);
    00006FCE D33B                   MOV.L       L5294+12,R3; _MenuFunctionKey
    00006FD0 430B                   JSR         @R3
    00006FD2 64F2                   MOV.L       @R15,R4
    00006FD4 600B                   NEG         R0,R0
    00006FD6 2F02                   MOV.L       R0,@R15
    00006FD8              L4865:                            
          EDIT.c  5159        
          EDIT.c  5160        //Process keys




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  350


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  5161        switch(iKey)
    00006FD8 60F2                   MOV.L       @R15,R0
    00006FDA 88D3                   CMP/EQ      #-45,R0
    00006FDC 8925                   BT          L3007
    00006FDE 889D                   CMP/EQ      #-99,R0
    00006FE0 8932                   BT          L3008
    00006FE2 889C                   CMP/EQ      #-100,R0
    00006FE4 8B01                   BF          L5295
    00006FE6 A142                   BRA         L3039
    00006FE8 0009                   NOP
    00006FEA              L5295:                            
    00006FEA 9161                   MOV.W       L5294,R1   ; H'7532
    00006FEC 3010                   CMP/EQ      R1,R0
    00006FEE 8B01                   BF          L5296
    00006FF0 A18D                   BRA         L3043
    00006FF2 0009                   NOP
    00006FF4              L5296:                            
    00006FF4 915D                   MOV.W       L5294+2,R1 ; H'7534
    00006FF6 3010                   CMP/EQ      R1,R0
    00006FF8 8B01                   BF          L5297
    00006FFA A18D                   BRA         L3044
    00006FFC 0009                   NOP
    00006FFE              L5297:                            
    00006FFE 9159                   MOV.W       L5294+4,R1 ; H'7545
    00007000 3010                   CMP/EQ      R1,R0
    00007002 8B01                   BF          L5298
    00007004 A197                   BRA         L3045
    00007006 0009                   NOP
    00007008              L5298:                            
    00007008 9155                   MOV.W       L5294+6,R1 ; H'7544
    0000700A 3010                   CMP/EQ      R1,R0
    0000700C 8B01                   BF          L5299
    0000700E A1AD                   BRA         L3046
    00007010 0009                   NOP
    00007012              L5299:                            
    00007012 9151                   MOV.W       L5294+8,R1 ; H'7547
    00007014 3010                   CMP/EQ      R1,R0
    00007016 8B01                   BF          L5300
    00007018 A1C2                   BRA         L3047
    0000701A 0009                   NOP
    0000701C              L5300:                            
    0000701C 914D                   MOV.W       L5294+10,R1; H'7542
    0000701E 3010                   CMP/EQ      R1,R0
    00007020 8B01                   BF          L5301
    00007022 A1D9                   BRA         L3048
    00007024 0009                   NOP
    00007026              L5301:                            
    00007026 A1F1                   BRA         L4867
    00007028 0009                   NOP
    0000702A              L3007:                           ; case label 
          EDIT.c  5162        {
          EDIT.c  5163          //Character selection
          EDIT.c  5164          case -NODECHARINSR:
          EDIT.c  5165            iChr=CHARACTER(iCx,iCy);
    0000702A E113                   MOV         #19,R1
    0000702C D224                   MOV.L       L5294+16,R2; __$iCy$1512
    0000702E 6322                   MOV.L       @R2,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  351


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00007030 D224                   MOV.L       L5294+20,R2; __$iCx$1511
    00007032 73FF                   ADD         #-1,R3
    00007034 6022                   MOV.L       @R2,R0
          EDIT.c  5166            iExit=1;
    00007036 E201                   MOV         #1,R2
    00007038 0317                   MUL.L       R1,R3
    0000703A 031A                   STS         MACL,R3
    0000703C 330C                   ADD         R0,R3
    0000703E 7320                   ADD         #32,R3
    00007040 1F31                   MOV.L       R3,@(4,R15)
    00007042 1F29                   MOV.L       R2,@(36,R15)
          EDIT.c  5167            break;
    00007044 A1E2                   BRA         L4867
    00007046 0009                   NOP
    00007048              L3008:                           ; case label 
          EDIT.c  5168           
          EDIT.c  5169          //Bind character into char map
          EDIT.c  5170          case -NODECHARBIND:
          EDIT.c  5171            
          EDIT.c  5172            //Get character to bind
          EDIT.c  5173            iChr=CHARACTER(iCx,iCy);
    00007048 D11D                   MOV.L       L5294+16,R1; __$iCy$1512
    0000704A E213                   MOV         #19,R2
    0000704C 6312                   MOV.L       @R1,R3
    0000704E 73FF                   ADD         #-1,R3
    00007050 0327                   MUL.L       R2,R3
          EDIT.c  5174            
          EDIT.c  5175            //Check that character has not been bound before
          EDIT.c  5176            iFound=0;
    00007052 E200                   MOV         #0,R2
    00007054 D11B                   MOV.L       L5294+20,R1; __$iCx$1511
    00007056 031A                   STS         MACL,R3
    00007058 6012                   MOV.L       @R1,R0
    0000705A 330C                   ADD         R0,R3
    0000705C 7320                   ADD         #32,R3
    0000705E 1F31                   MOV.L       R3,@(4,R15)
    00007060 1F26                   MOV.L       R2,@(24,R15)
          EDIT.c  5177            for(k=0;k<MAXCHARMAP;k++){
    00007062 1F2A                   MOV.L       R2,@(40,R15)
    00007064 A010                   BRA         L4868
    00007066 0009                   NOP
    00007068              L4869:                            
          EDIT.c  5178              if((int)(sConfig->sCharMap[k].cAscii)==iChr){
    00007068 53FD                   MOV.L       @(52,R15),R3
    0000706A 52FA                   MOV.L       @(40,R15),R2
    0000706C 4208                   SHLL2       R2
    0000706E 4200                   SHLL        R2
    00007070 7360                   ADD         #96,R3
    00007072 323C                   ADD         R3,R2
    00007074 8424                   MOV.B       @(4,R2),R0
    00007076 53F1                   MOV.L       @(4,R15),R3
    00007078 3030                   CMP/EQ      R3,R0
    0000707A 8B02                   BF          L4870
          EDIT.c  5179                iFound=1;
    0000707C E001                   MOV         #1,R0
          EDIT.c  5180                break;
    0000707E A007                   BRA         L4871




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  352


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00007080 1F06                   MOV.L       R0,@(24,R15)
    00007082              L4870:                            
    00007082 51FA                   MOV.L       @(40,R15),R1
    00007084 7101                   ADD         #1,R1
    00007086 1F1A                   MOV.L       R1,@(40,R15)
    00007088              L4868:                            
    00007088 52FA                   MOV.L       @(40,R15),R2
    0000708A E314                   MOV         #20,R3
    0000708C 3233                   CMP/GE      R3,R2
    0000708E 8BEB                   BF          L4869
    00007090              L4871:                            
          EDIT.c  5181              }
          EDIT.c  5182            }
          EDIT.c  5183            if(iFound==1){
    00007090 50F6                   MOV.L       @(24,R15),R0
    00007092 8801                   CMP/EQ      #1,R0
    00007094 8B07                   BF          L4872
          EDIT.c  5184              PopupMessage(1,"Character is","already bound.",NULL,NULL,NULL);
    00007096 E200                   MOV         #0,R2
    00007098 D60B                   MOV.L       L5294+24,R6; L1533
    0000709A 6723                   MOV         R2,R7
    0000709C D50B                   MOV.L       L5294+28,R5; L1532
    0000709E 2F26                   MOV.L       R2,@-R15
    000070A0 2F26                   MOV.L       R2,@-R15
          EDIT.c  5185              break;
    000070A2 A030                   BRA         L5020
    000070A4 0009                   NOP
    000070A6              L4872:                            
          EDIT.c  5186            }
          EDIT.c  5187            
          EDIT.c  5188            //Find a free space in the char map
          EDIT.c  5189            iMapIndex=-1;
    000070A6 E3FF                   MOV         #-1,R3
    000070A8 1F38                   MOV.L       R3,@(32,R15)
          EDIT.c  5190            for(k=0;k<MAXCHARMAP;k++){
    000070AA E200                   MOV         #0,R2
    000070AC A01E                   BRA         L4873
    000070AE 1F2A                   MOV.L       R2,@(40,R15)
    000070B0              L5294:                            
    000070B0 7532                   .DATA.W     H'7532
    000070B2 7534                   .DATA.W     H'7534
    000070B4 7545                   .DATA.W     H'7545
    000070B6 7544                   .DATA.W     H'7544
    000070B8 7547                   .DATA.W     H'7547
    000070BA 7542                   .DATA.W     H'7542
    000070BC <00000000>             .DATA.L     _MenuFunctionKey
    000070C0 <00000000>             .DATA.L     __$iCy$1512
    000070C4 <00000000>             .DATA.L     __$iCx$1511
    000070C8 <00000000>             .DATA.L     L1533
    000070CC <00000000>             .DATA.L     L1532
    000070D0              L4874:                            
          EDIT.c  5191              if(sConfig->sCharMap[k].iKey==-1){
    000070D0 50FD                   MOV.L       @(52,R15),R0
    000070D2 53FA                   MOV.L       @(40,R15),R3
    000070D4 4308                   SHLL2       R3
    000070D6 4300                   SHLL        R3
    000070D8 7060                   ADD         #96,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  353


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000070DA 003E                   MOV.L       @(R0,R3),R0
    000070DC 88FF                   CMP/EQ      #-1,R0
    000070DE 8B02                   BF          L4875
          EDIT.c  5192                iMapIndex=k;
    000070E0 52FA                   MOV.L       @(40,R15),R2
          EDIT.c  5193                break;
    000070E2 A007                   BRA         L4876
    000070E4 1F28                   MOV.L       R2,@(32,R15)
    000070E6              L4875:                            
    000070E6 51FA                   MOV.L       @(40,R15),R1
    000070E8 7101                   ADD         #1,R1
    000070EA 1F1A                   MOV.L       R1,@(40,R15)
    000070EC              L4873:                            
    000070EC 52FA                   MOV.L       @(40,R15),R2
    000070EE E314                   MOV         #20,R3
    000070F0 3233                   CMP/GE      R3,R2
    000070F2 8BED                   BF          L4874
    000070F4              L4876:                            
          EDIT.c  5194              }
          EDIT.c  5195            }
          EDIT.c  5196            if(iMapIndex==-1){
    000070F4 50F8                   MOV.L       @(32,R15),R0
    000070F6 88FF                   CMP/EQ      #-1,R0
    000070F8 8B0E                   BF          L4877
          EDIT.c  5197              PopupMessage(1,"Cannot bind more","characters.",NULL,NULL,NULL);
    000070FA E200                   MOV         #0,R2
    000070FC D604                   MOV.L       L5302+2,R6 ; L1538
    000070FE 6723                   MOV         R2,R7
    00007100 D504                   MOV.L       L5302+6,R5 ; L1537
    00007102 2F26                   MOV.L       R2,@-R15
    00007104 2F26                   MOV.L       R2,@-R15
          EDIT.c  5198              break;
    00007106              L5020:                            
    00007106 B99B                   BSR         _PopupMessage
    00007108 E401                   MOV         #1,R4
    0000710A A17F                   BRA         L4867
    0000710C 7F08                   ADD         #8,R15
    0000710E              L5302:                            
    0000710E 0000                   .DATA.W     0
    00007110 <00000000>             .DATA.L     L1538
    00007114 <00000000>             .DATA.L     L1537
    00007118              L4877:                            
          EDIT.c  5199            }  
          EDIT.c  5200    
          EDIT.c  5201            //Get binding key
          EDIT.c  5202            PopupMessage(0,"Press bind key or","[EXIT] to cancel.",NULL,NULL,NULL);
    00007118 D62F                   MOV.L       L5303+30,R6; L1540
    0000711A E300                   MOV         #0,R3
    0000711C D52F                   MOV.L       L5303+34,R5; L1539
    0000711E 6733                   MOV         R3,R7
    00007120 2F36                   MOV.L       R3,@-R15
    00007122 2F36                   MOV.L       R3,@-R15
    00007124 B98C                   BSR         _PopupMessage
    00007126 6433                   MOV         R3,R4
          EDIT.c  5203            iBindKey=KeyNormalCase(GetKeyb());
    00007128 D12D                   MOV.L       L5303+38,R1; _GetKeyb
    0000712A 410B                   JSR         @R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  354


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000712C 7F08                   ADD         #8,R15
    0000712E D32D                   MOV.L       L5303+42,R3; _KeyNormalCase
    00007130 430B                   JSR         @R3
    00007132 6403                   MOV         R0,R4
    00007134 1F07                   MOV.L       R0,@(28,R15)
          EDIT.c  5204            switch(iBindKey){
    00007136 9140                   MOV.W       L5303,R1   ; H'7532
    00007138 3010                   CMP/EQ      R1,R0
    0000713A 8B01                   BF          L5304
    0000713C A094                   BRA         L4878
    0000713E 0009                   NOP
    00007140              L5304:                            
    00007140 913C                   MOV.W       L5303+2,R1 ; H'754D
    00007142 3010                   CMP/EQ      R1,R0
    00007144 8B01                   BF          L5305
    00007146 A08F                   BRA         L4878
    00007148 0009                   NOP
    0000714A              L5305:                            
    0000714A 8800                   CMP/EQ      #0,R0
    0000714C 8928                   BT          L3017
    0000714E 9136                   MOV.W       L5303+4,R1 ; H'7539
    00007150 3010                   CMP/EQ      R1,R0
    00007152 8925                   BT          L3018
    00007154 9134                   MOV.W       L5303+6,R1 ; H'753A
    00007156 3010                   CMP/EQ      R1,R0
    00007158 8922                   BT          L3019
    0000715A 9132                   MOV.W       L5303+8,R1 ; H'753B
    0000715C 3010                   CMP/EQ      R1,R0
    0000715E 891F                   BT          L3020
    00007160 9130                   MOV.W       L5303+10,R1; H'753C
    00007162 3010                   CMP/EQ      R1,R0
    00007164 891C                   BT          L3021
    00007166 912E                   MOV.W       L5303+12,R1; H'753D
    00007168 3010                   CMP/EQ      R1,R0
    0000716A 8919                   BT          L3022
    0000716C 912C                   MOV.W       L5303+14,R1; H'753E
    0000716E 3010                   CMP/EQ      R1,R0
    00007170 8916                   BT          L3023
    00007172 912A                   MOV.W       L5303+16,R1; H'7536
    00007174 3010                   CMP/EQ      R1,R0
    00007176 8913                   BT          L3024
    00007178 9128                   MOV.W       L5303+18,R1; H'7537
    0000717A 3010                   CMP/EQ      R1,R0
    0000717C 8910                   BT          L3025
    0000717E 9126                   MOV.W       L5303+20,R1; H'7540
    00007180 3010                   CMP/EQ      R1,R0
    00007182 890D                   BT          L3026
    00007184 9124                   MOV.W       L5303+22,R1; H'754C
    00007186 3010                   CMP/EQ      R1,R0
    00007188 890A                   BT          L3027
    0000718A 9122                   MOV.W       L5303+24,R1; H'7533
    0000718C 3010                   CMP/EQ      R1,R0
    0000718E 8907                   BT          L3028
    00007190 9120                   MOV.W       L5303+26,R1; H'7555
    00007192 3010                   CMP/EQ      R1,R0
    00007194 8904                   BT          L3029
    00007196 911E                   MOV.W       L5303+28,R1; H'753F




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  355


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00007198 3010                   CMP/EQ      R1,R0
    0000719A 8901                   BT          L3030
    0000719C A008                   BRA         L3033
    0000719E 0009                   NOP
    000071A0              L3017:                           ; case label 
          EDIT.c  5205              
          EDIT.c  5206              //Exit key terminates binding
          EDIT.c  5207              case KEY_CTRL_EXIT:
          EDIT.c  5208              case KEY_CTRL_QUIT:
          EDIT.c  5209                break;
          EDIT.c  5210              
          EDIT.c  5211              //These keys are not allowed to be used
          EDIT.c  5212              case 0:
          EDIT.c  5213              case KEY_CTRL_F1:
    000071A0              L3018:                           ; case label 
          EDIT.c  5214              case KEY_CTRL_F2:
    000071A0              L3019:                           ; case label 
          EDIT.c  5215              case KEY_CTRL_F3:
    000071A0              L3020:                           ; case label 
          EDIT.c  5216              case KEY_CTRL_F4:
    000071A0              L3021:                           ; case label 
          EDIT.c  5217              case KEY_CTRL_F5:
    000071A0              L3022:                           ; case label 
          EDIT.c  5218              case KEY_CTRL_F6:
    000071A0              L3023:                           ; case label 
          EDIT.c  5219              case KEY_CTRL_SHIFT:
    000071A0              L3024:                           ; case label 
          EDIT.c  5220              case KEY_CTRL_ALPHA:
    000071A0              L3025:                           ; case label 
          EDIT.c  5221              case KEY_CTRL_VARS:
    000071A0              L3026:                           ; case label 
          EDIT.c  5222              case KEY_CTRL_PRGM:
    000071A0              L3027:                           ; case label 
          EDIT.c  5223              case KEY_CTRL_MENU:
    000071A0              L3028:                           ; case label 
          EDIT.c  5224              case KEY_CTRL_SETUP:
    000071A0              L3029:                           ; case label 
          EDIT.c  5225              case KEY_CTRL_AC:
    000071A0              L3030:                           ; case label 
          EDIT.c  5226                PopupMessage(1,"Cannot bind to","that key.",NULL,NULL,NULL);
    000071A0 D611                   MOV.L       L5303+46,R6; L1543
    000071A2 E200                   MOV         #0,R2
    000071A4 D511                   MOV.L       L5303+50,R5; L1542
    000071A6 6723                   MOV         R2,R7
    000071A8 2F26                   MOV.L       R2,@-R15
    000071AA 2F26                   MOV.L       R2,@-R15
          EDIT.c  5227                break;
    000071AC A059                   BRA         L5022
    000071AE 0009                   NOP
    000071B0              L3033:                           ; default label 
          EDIT.c  5228              
          EDIT.c  5229              //Make binding
          EDIT.c  5230              default:
          EDIT.c  5231                
          EDIT.c  5232                //Check if key has been used already           
          EDIT.c  5233                iFound=0;
    000071B0 E300                   MOV         #0,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  356


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  5234                for(k=0;k<MAXCHARMAP;k++){
    000071B2 6233                   MOV         R3,R2
    000071B4 1F36                   MOV.L       R3,@(24,R15)
    000071B6 A02C                   BRA         L4879
    000071B8 1F2A                   MOV.L       R2,@(40,R15)
    000071BA              L5303:                            
    000071BA 7532                   .DATA.W     H'7532
    000071BC 754D                   .DATA.W     H'754D
    000071BE 7539                   .DATA.W     H'7539
    000071C0 753A                   .DATA.W     H'753A
    000071C2 753B                   .DATA.W     H'753B
    000071C4 753C                   .DATA.W     H'753C
    000071C6 753D                   .DATA.W     H'753D
    000071C8 753E                   .DATA.W     H'753E
    000071CA 7536                   .DATA.W     H'7536
    000071CC 7537                   .DATA.W     H'7537
    000071CE 7540                   .DATA.W     H'7540
    000071D0 754C                   .DATA.W     H'754C
    000071D2 7533                   .DATA.W     H'7533
    000071D4 7555                   .DATA.W     H'7555
    000071D6 753F                   .DATA.W     H'753F
    000071D8 <00000000>             .DATA.L     L1540
    000071DC <00000000>             .DATA.L     L1539
    000071E0 <00000000>             .DATA.L     _GetKeyb
    000071E4 <00000000>             .DATA.L     _KeyNormalCase
    000071E8 <00000000>             .DATA.L     L1543
    000071EC <00000000>             .DATA.L     L1542
    000071F0              L4880:                            
          EDIT.c  5235                  if(sConfig->sCharMap[k].iKey==iBindKey){
    000071F0 51FD                   MOV.L       @(52,R15),R1
    000071F2 53FA                   MOV.L       @(40,R15),R3
    000071F4 4308                   SHLL2       R3
    000071F6 4300                   SHLL        R3
    000071F8 6213                   MOV         R1,R2
    000071FA 7260                   ADD         #96,R2
    000071FC 51F7                   MOV.L       @(28,R15),R1
    000071FE 332C                   ADD         R2,R3
    00007200 6032                   MOV.L       @R3,R0
    00007202 3010                   CMP/EQ      R1,R0
    00007204 8B02                   BF          L4881
          EDIT.c  5236                    iFound=1;
    00007206 E201                   MOV         #1,R2
          EDIT.c  5237                    break;
    00007208 A007                   BRA         L4882
    0000720A 1F26                   MOV.L       R2,@(24,R15)
    0000720C              L4881:                            
    0000720C 51FA                   MOV.L       @(40,R15),R1
    0000720E 7101                   ADD         #1,R1
    00007210 1F1A                   MOV.L       R1,@(40,R15)
    00007212              L4879:                            
    00007212 E314                   MOV         #20,R3
    00007214 52FA                   MOV.L       @(40,R15),R2
    00007216 3233                   CMP/GE      R3,R2
    00007218 8BEA                   BF          L4880
    0000721A              L4882:                            
          EDIT.c  5238                  }
          EDIT.c  5239                }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  357


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          EDIT.c  5240                if(iFound==1){
    0000721A 50F6                   MOV.L       @(24,R15),R0
    0000721C 8801                   CMP/EQ      #1,R0
    0000721E 8B07                   BF          L4883
          EDIT.c  5241                  PopupMessage(1,"This key is","already used for","another character",NULL,NULL);
    00007220 D783                   MOV.L       L5306+2,R7 ; L1549
    00007222 E200                   MOV         #0,R2
    00007224 D683                   MOV.L       L5306+6,R6 ; L1548
    00007226 2F26                   MOV.L       R2,@-R15
    00007228 2F26                   MOV.L       R2,@-R15
    0000722A D583                   MOV.L       L5306+10,R5; L1547
          EDIT.c  5242                  break;
    0000722C A019                   BRA         L5022
    0000722E 0009                   NOP
    00007230              L4883:                            
          EDIT.c  5243                }
          EDIT.c  5244                
          EDIT.c  5245                //Modify configuration
          EDIT.c  5246                sConfig->sCharMap[iMapIndex].cAscii=(char)iChr;
    00007230 53FD                   MOV.L       @(52,R15),R3
    00007232 52F8                   MOV.L       @(32,R15),R2
    00007234 84F7                   MOV.B       @(7,R15),R0
    00007236 4208                   SHLL2       R2
    00007238 4200                   SHLL        R2
    0000723A 7360                   ADD         #96,R3
    0000723C 323C                   ADD         R3,R2
    0000723E 8024                   MOV.B       R0,@(4,R2)
          EDIT.c  5247                sConfig->sCharMap[iMapIndex].iKey=iBindKey;
    00007240 53FD                   MOV.L       @(52,R15),R3
    00007242 52F8                   MOV.L       @(32,R15),R2
    00007244 51F7                   MOV.L       @(28,R15),R1
    00007246 4208                   SHLL2       R2
    00007248 4200                   SHLL        R2
    0000724A 7360                   ADD         #96,R3
    0000724C 323C                   ADD         R3,R2
    0000724E 2212                   MOV.L       R1,@R2
          EDIT.c  5248                ConfigExport(sConfig);
    00007250 D37A                   MOV.L       L5306+14,R3; _ConfigExport
    00007252 430B                   JSR         @R3
    00007254 54FD                   MOV.L       @(52,R15),R4
          EDIT.c  5249                
          EDIT.c  5250                //Message
          EDIT.c  5251                PopupMessage(1,"Character bind","completed.",NULL,NULL,NULL);
    00007256 E200                   MOV         #0,R2
    00007258 D679                   MOV.L       L5306+18,R6; L1551
    0000725A 6723                   MOV         R2,R7
    0000725C D579                   MOV.L       L5306+22,R5; L1550
    0000725E 2F26                   MOV.L       R2,@-R15
    00007260 2F26                   MOV.L       R2,@-R15
          EDIT.c  5252                break;
    00007262              L5022:                            
    00007262 B8ED                   BSR         _PopupMessage
    00007264 E401                   MOV         #1,R4
    00007266 7F08                   ADD         #8,R15
    00007268              L4878:                            
          EDIT.c  5253            }
          EDIT.c  5254            iRefresh=1;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  358


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00007268 E301                   MOV         #1,R3
          EDIT.c  5255            break;
    0000726A A0CF                   BRA         L4867
    0000726C 1F33                   MOV.L       R3,@(12,R15)
    0000726E              L3039:                           ; case label 
          EDIT.c  5256           
          EDIT.c  5257          //Unbind character
          EDIT.c  5258          case -NODECHARUBND:
          EDIT.c  5259            
          EDIT.c  5260            //Get character to unbind
          EDIT.c  5261            iChr=CHARACTER(iCx,iCy);
    0000726E E313                   MOV         #19,R3
    00007270 D275                   MOV.L       L5306+26,R2; __$iCy$1512
    00007272 6122                   MOV.L       @R2,R1
    00007274 D275                   MOV.L       L5306+30,R2; __$iCx$1511
    00007276 71FF                   ADD         #-1,R1
    00007278 6022                   MOV.L       @R2,R0
    0000727A 0137                   MUL.L       R3,R1
    0000727C 011A                   STS         MACL,R1
    0000727E 310C                   ADD         R0,R1
    00007280 7120                   ADD         #32,R1
          EDIT.c  5262            
          EDIT.c  5263            //Clear the char from the char map
          EDIT.c  5264            iFound=0;
    00007282 E300                   MOV         #0,R3
    00007284 1F11                   MOV.L       R1,@(4,R15)
    00007286 1F36                   MOV.L       R3,@(24,R15)
          EDIT.c  5265            for(k=0;k<MAXCHARMAP;k++){
    00007288 1F3A                   MOV.L       R3,@(40,R15)
    0000728A A020                   BRA         L4884
    0000728C 0009                   NOP
    0000728E              L4885:                            
          EDIT.c  5266              if(sConfig->sCharMap[k].cAscii==(char)iChr){
    0000728E 52FD                   MOV.L       @(52,R15),R2
    00007290 53FA                   MOV.L       @(40,R15),R3
    00007292 7260                   ADD         #96,R2
    00007294 4308                   SHLL2       R3
    00007296 4300                   SHLL        R3
    00007298 332C                   ADD         R2,R3
    0000729A 8434                   MOV.B       @(4,R3),R0
    0000729C 53F1                   MOV.L       @(4,R15),R3
    0000729E 633E                   EXTS.B      R3,R3
    000072A0 3030                   CMP/EQ      R3,R0
    000072A2 8B11                   BF          L4886
          EDIT.c  5267                iFound=1;
    000072A4 E201                   MOV         #1,R2
          EDIT.c  5268                sConfig->sCharMap[k].cAscii=0;
    000072A6 E000                   MOV         #0,R0
    000072A8 1F26                   MOV.L       R2,@(24,R15)
          EDIT.c  5269                sConfig->sCharMap[k].iKey=-1;
    000072AA E1FF                   MOV         #-1,R1
    000072AC 53FD                   MOV.L       @(52,R15),R3
    000072AE 52FA                   MOV.L       @(40,R15),R2
    000072B0 4208                   SHLL2       R2
    000072B2 4200                   SHLL        R2
    000072B4 7360                   ADD         #96,R3
    000072B6 323C                   ADD         R3,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  359


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000072B8 8024                   MOV.B       R0,@(4,R2)
    000072BA 53FD                   MOV.L       @(52,R15),R3
    000072BC 52FA                   MOV.L       @(40,R15),R2
    000072BE 7360                   ADD         #96,R3
    000072C0 4208                   SHLL2       R2
    000072C2 4200                   SHLL        R2
    000072C4 323C                   ADD         R3,R2
    000072C6 2212                   MOV.L       R1,@R2
    000072C8              L4886:                            
    000072C8 53FA                   MOV.L       @(40,R15),R3
    000072CA 7301                   ADD         #1,R3
    000072CC 1F3A                   MOV.L       R3,@(40,R15)
    000072CE              L4884:                            
    000072CE E214                   MOV         #20,R2
    000072D0 51FA                   MOV.L       @(40,R15),R1
    000072D2 3123                   CMP/GE      R2,R1
    000072D4 8BDB                   BF          L4885
          EDIT.c  5270              }
          EDIT.c  5271            }
          EDIT.c  5272            if(iFound==1){
    000072D6 50F6                   MOV.L       @(24,R15),R0
    000072D8 8801                   CMP/EQ      #1,R0
    000072DA 8B0E                   BF          L4887
          EDIT.c  5273              PopupMessage(1,"Character unbind","completed.",NULL,NULL,NULL);
    000072DC D658                   MOV.L       L5306+18,R6; L1551
    000072DE E200                   MOV         #0,R2
    000072E0 D55B                   MOV.L       L5306+34,R5; L1555
    000072E2 6723                   MOV         R2,R7
    000072E4 2F26                   MOV.L       R2,@-R15
    000072E6 2F26                   MOV.L       R2,@-R15
    000072E8 B8AA                   BSR         _PopupMessage
    000072EA E401                   MOV         #1,R4
          EDIT.c  5274              ConfigExport(sConfig);
    000072EC D353                   MOV.L       L5306+14,R3; _ConfigExport
    000072EE 7F08                   ADD         #8,R15
    000072F0 430B                   JSR         @R3
    000072F2 54FD                   MOV.L       @(52,R15),R4
          EDIT.c  5275              iRefresh=1;
    000072F4 E201                   MOV         #1,R2
    000072F6 A089                   BRA         L4867
    000072F8 1F23                   MOV.L       R2,@(12,R15)
    000072FA              L4887:                            
          EDIT.c  5276            }
          EDIT.c  5277            else{
          EDIT.c  5278              PopupMessage(1,"Character not","bound before.",NULL,NULL,NULL);
    000072FA E100                   MOV         #0,R1
    000072FC D655                   MOV.L       L5306+38,R6; L1558
    000072FE 6713                   MOV         R1,R7
    00007300 D555                   MOV.L       L5306+42,R5; L1557
    00007302 2F16                   MOV.L       R1,@-R15
    00007304 2F16                   MOV.L       R1,@-R15
    00007306 B89B                   BSR         _PopupMessage
    00007308 E401                   MOV         #1,R4
          EDIT.c  5279            }
          EDIT.c  5280            break;
    0000730A A07F                   BRA         L4867
    0000730C 7F08                   ADD         #8,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  360


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000730E              L3043:                           ; case label 
          EDIT.c  5281            
          EDIT.c  5282          //Exit
          EDIT.c  5283          case KEY_CTRL_EXIT:
          EDIT.c  5284            iChr=0;
    0000730E E300                   MOV         #0,R3
    00007310 1F31                   MOV.L       R3,@(4,R15)
          EDIT.c  5285            iExit=1;
    00007312 E201                   MOV         #1,R2
          EDIT.c  5286            break;
    00007314 A07A                   BRA         L4867
    00007316 1F29                   MOV.L       R2,@(36,R15)
    00007318              L3044:                           ; case label 
          EDIT.c  5287            
          EDIT.c  5288          //Enter
          EDIT.c  5289          case KEY_CTRL_EXE:
          EDIT.c  5290            iChr=CHARACTER(iCx,iCy);
    00007318 D34B                   MOV.L       L5306+26,R3; __$iCy$1512
    0000731A E213                   MOV         #19,R2
    0000731C 6132                   MOV.L       @R3,R1
    0000731E 71FF                   ADD         #-1,R1
    00007320 0127                   MUL.L       R2,R1
    00007322 011A                   STS         MACL,R1
    00007324 D349                   MOV.L       L5306+30,R3; __$iCx$1511
    00007326 6032                   MOV.L       @R3,R0
    00007328 310C                   ADD         R0,R1
    0000732A 7120                   ADD         #32,R1
    0000732C 1F11                   MOV.L       R1,@(4,R15)
          EDIT.c  5291            iExit=1;
    0000732E E301                   MOV         #1,R3
    00007330 1F39                   MOV.L       R3,@(36,R15)
          EDIT.c  5292            break;
    00007332 A06B                   BRA         L4867
    00007334 0009                   NOP
    00007336              L3045:                           ; case label 
          EDIT.c  5293            
          EDIT.c  5294          //Cursor x++
          EDIT.c  5295          case KEY_CTRL_RIGHT:
          EDIT.c  5296            iCx++;
          EDIT.c  5297            iChr=CHARACTER(iCx,iCy);
    00007336 E013                   MOV         #19,R0
    00007338 D244                   MOV.L       L5306+30,R2; __$iCx$1511
    0000733A 6122                   MOV.L       @R2,R1
    0000733C 7101                   ADD         #1,R1
    0000733E 2212                   MOV.L       R1,@R2
    00007340 D241                   MOV.L       L5306+26,R2; __$iCy$1512
    00007342 6322                   MOV.L       @R2,R3
    00007344 D241                   MOV.L       L5306+30,R2; __$iCx$1511
    00007346 73FF                   ADD         #-1,R3
    00007348 6122                   MOV.L       @R2,R1
          EDIT.c  5298            if(iChr>MAXCHAR || iCx>18) iCx--;
    0000734A E27E                   MOV         #126,R2
    0000734C 0307                   MUL.L       R0,R3
    0000734E 031A                   STS         MACL,R3
    00007350 331C                   ADD         R1,R3
    00007352 7320                   ADD         #32,R3
    00007354 1F31                   MOV.L       R3,@(4,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  361


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00007356 3327                   CMP/GT      R2,R3
    00007358 8902                   BT          L4890
    0000735A E212                   MOV         #18,R2
    0000735C 3127                   CMP/GT      R2,R1
    0000735E 8B55                   BF          L4867
    00007360              L4890:                            
    00007360 D33A                   MOV.L       L5306+30,R3; __$iCx$1511
    00007362 6132                   MOV.L       @R3,R1
    00007364 71FF                   ADD         #-1,R1
    00007366 2312                   MOV.L       R1,@R3
          EDIT.c  5299            break;
    00007368 A050                   BRA         L4867
    0000736A 0009                   NOP
    0000736C              L3046:                           ; case label 
          EDIT.c  5300              
          EDIT.c  5301          //Cursor x--
          EDIT.c  5302          case KEY_CTRL_LEFT:
          EDIT.c  5303            iCx--;
    0000736C D237                   MOV.L       L5306+30,R2; __$iCx$1511
          EDIT.c  5304            iChr=CHARACTER(iCx,iCy);
    0000736E E013                   MOV         #19,R0
    00007370 D135                   MOV.L       L5306+26,R1; __$iCy$1512
    00007372 6322                   MOV.L       @R2,R3
    00007374 73FF                   ADD         #-1,R3
    00007376 2232                   MOV.L       R3,@R2
    00007378 6212                   MOV.L       @R1,R2
    0000737A 72FF                   ADD         #-1,R2
    0000737C 0207                   MUL.L       R0,R2
    0000737E 021A                   STS         MACL,R2
    00007380 D132                   MOV.L       L5306+30,R1; __$iCx$1511
    00007382 6312                   MOV.L       @R1,R3
    00007384 323C                   ADD         R3,R2
    00007386 7220                   ADD         #32,R2
    00007388 1F21                   MOV.L       R2,@(4,R15)
          EDIT.c  5305            if(iChr<MINCHAR || iCx<0) iCx++;
    0000738A E120                   MOV         #32,R1
    0000738C 3213                   CMP/GE      R1,R2
    0000738E 8B01                   BF          L4892
    00007390 4311                   CMP/PZ      R3
    00007392 893B                   BT          L4867
    00007394              L4892:                            
    00007394 D32D                   MOV.L       L5306+30,R3; __$iCx$1511
    00007396 6232                   MOV.L       @R3,R2
    00007398 7201                   ADD         #1,R2
    0000739A 2322                   MOV.L       R2,@R3
          EDIT.c  5306            break;
    0000739C A036                   BRA         L4867
    0000739E 0009                   NOP
    000073A0              L3047:                           ; case label 
          EDIT.c  5307              
          EDIT.c  5308          //Cursor y++
          EDIT.c  5309          case KEY_CTRL_DOWN:
          EDIT.c  5310            iCy++;
    000073A0 D129                   MOV.L       L5306+26,R1; __$iCy$1512
          EDIT.c  5311            iChr=CHARACTER(iCx,iCy);
    000073A2 E213                   MOV         #19,R2
    000073A4 D029                   MOV.L       L5306+30,R0; __$iCx$1511




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  362


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000073A6 6312                   MOV.L       @R1,R3
    000073A8 7301                   ADD         #1,R3
    000073AA 2132                   MOV.L       R3,@R1
    000073AC 6102                   MOV.L       @R0,R1
    000073AE 73FF                   ADD         #-1,R3
    000073B0 0327                   MUL.L       R2,R3
          EDIT.c  5312            if(iChr>MAXCHAR || iCy>5) iCy--;
    000073B2 E27E                   MOV         #126,R2
    000073B4 031A                   STS         MACL,R3
    000073B6 331C                   ADD         R1,R3
    000073B8 7320                   ADD         #32,R3
    000073BA 6133                   MOV         R3,R1
    000073BC 1F31                   MOV.L       R3,@(4,R15)
    000073BE 3127                   CMP/GT      R2,R1
    000073C0 8904                   BT          L4894
    000073C2 E305                   MOV         #5,R3
    000073C4 D020                   MOV.L       L5306+26,R0; __$iCy$1512
    000073C6 6102                   MOV.L       @R0,R1
    000073C8 3137                   CMP/GT      R3,R1
    000073CA 8B1F                   BF          L4867
    000073CC              L4894:                            
    000073CC D21E                   MOV.L       L5306+26,R2; __$iCy$1512
    000073CE 6322                   MOV.L       @R2,R3
    000073D0 73FF                   ADD         #-1,R3
    000073D2 2232                   MOV.L       R3,@R2
          EDIT.c  5313            break;
    000073D4 A01A                   BRA         L4867
    000073D6 0009                   NOP
    000073D8              L3048:                           ; case label 
          EDIT.c  5314              
          EDIT.c  5315          //Cursor y--
          EDIT.c  5316          case KEY_CTRL_UP:    
          EDIT.c  5317            iCy--;
    000073D8 D11B                   MOV.L       L5306+26,R1; __$iCy$1512
          EDIT.c  5318            iChr=CHARACTER(iCx,iCy);
    000073DA E313                   MOV         #19,R3
    000073DC D01B                   MOV.L       L5306+30,R0; __$iCx$1511
    000073DE 6212                   MOV.L       @R1,R2
    000073E0 72FF                   ADD         #-1,R2
    000073E2 2122                   MOV.L       R2,@R1
    000073E4 6102                   MOV.L       @R0,R1
    000073E6 72FF                   ADD         #-1,R2
    000073E8 0237                   MUL.L       R3,R2
          EDIT.c  5319            if(iChr<MINCHAR || iCy<1) iCy++;
    000073EA E320                   MOV         #32,R3
    000073EC 021A                   STS         MACL,R2
    000073EE 321C                   ADD         R1,R2
    000073F0 7220                   ADD         #32,R2
    000073F2 6123                   MOV         R2,R1
    000073F4 1F21                   MOV.L       R2,@(4,R15)
    000073F6 3133                   CMP/GE      R3,R1
    000073F8 8B04                   BF          L4896
    000073FA E201                   MOV         #1,R2
    000073FC D012                   MOV.L       L5306+26,R0; __$iCy$1512
    000073FE 6102                   MOV.L       @R0,R1
    00007400 3123                   CMP/GE      R2,R1
    00007402 8903                   BT          L4867




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  363


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00007404              L4896:                            
    00007404 D310                   MOV.L       L5306+26,R3; __$iCy$1512
    00007406 6232                   MOV.L       @R3,R2
    00007408 7201                   ADD         #1,R2
    0000740A 2322                   MOV.L       R2,@R3
          EDIT.c  5320            break;
    0000740C              L4867:                            
          EDIT.c  5321        }
          EDIT.c  5322      
          EDIT.c  5323      }while(iExit==0);
    0000740C 51F9                   MOV.L       @(36,R15),R1
    0000740E 2118                   TST         R1,R1
    00007410 8B01                   BF          L5307
    00007412 AC85                   BRA         L4847
    00007414 0009                   NOP
    00007416              L5307:                            
          EDIT.c  5324    
          EDIT.c  5325      //Restore keyboard status
          EDIT.c  5326      KeyboardStatusHideRestore();
    00007416 D311                   MOV.L       L5306+46,R3; _KeyboardStatusHideRestore
    00007418 430B                   JSR         @R3
    0000741A 0009                   NOP
          EDIT.c  5327      MenuRestoreBar();
    0000741C D110                   MOV.L       L5306+50,R1; _MenuRestoreBar
    0000741E 410B                   JSR         @R1
    00007420 0009                   NOP
          EDIT.c  5328      
          EDIT.c  5329      //Return character
          EDIT.c  5330      return(iChr);
    00007422 50F1                   MOV.L       @(4,R15),R0
          EDIT.c  5331      
          EDIT.c  5332    }
    00007424 7F3C                   ADD         #60,R15
    00007426 4F16                   LDS.L       @R15+,MACL
    00007428 4F26                   LDS.L       @R15+,PR
    0000742A 000B                   RTS
    0000742C 0009                   NOP
    0000742E              L5306:                            
    0000742E 0000                   .DATA.W     0
    00007430 <00000000>             .DATA.L     L1549
    00007434 <00000000>             .DATA.L     L1548
    00007438 <00000000>             .DATA.L     L1547
    0000743C <00000000>             .DATA.L     _ConfigExport
    00007440 <00000000>             .DATA.L     L1551
    00007444 <00000000>             .DATA.L     L1550
    00007448 <00000000>             .DATA.L     __$iCy$1512
    0000744C <00000000>             .DATA.L     __$iCx$1511
    00007450 <00000000>             .DATA.L     L1555
    00007454 <00000000>             .DATA.L     L1558
    00007458 <00000000>             .DATA.L     L1557
    0000745C <00000000>             .DATA.L     _KeyboardStatusHideRestore
    00007460 <00000000>             .DATA.L     _MenuRestoreBar
          EDIT.c  5333    
          EDIT.c  5334    //Draw rectangle
          EDIT.c  5335    void Rectangle(int iX1,int iY1, int iX2, int iY2,int iColor)
    00007464              _Rectangle:                      ; function: Rectangle
                                                           ; frame size=24




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  364


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00007464 2FE6                   MOV.L       R14,@-R15
    00007466 6E63                   MOV         R6,R14
    00007468 2FD6                   MOV.L       R13,@-R15
    0000746A 2FC6                   MOV.L       R12,@-R15
    0000746C 2FB6                   MOV.L       R11,@-R15
    0000746E 6C43                   MOV         R4,R12
    00007470 2FA6                   MOV.L       R10,@-R15
    00007472 6B53                   MOV         R5,R11
    00007474 4F22                   STS.L       PR,@-R15
          EDIT.c  5336    {
          EDIT.c  5337      //Draw
          EDIT.c  5338      if(iColor==0){
    00007476 53F6                   MOV.L       @(24,R15),R3
    00007478 2338                   TST         R3,R3
    0000747A 8F17                   BF/S        L4898
    0000747C 6D73                   MOV         R7,R13
          EDIT.c  5339        Bdisp_ClearLineVRAM(iX1,iY1,iX1,iY2);
    0000747E 67D3                   MOV         R13,R7
    00007480 DA1A                   MOV.L       L5308+2,R10; _Bdisp_ClearLineVRAM
    00007482 66C3                   MOV         R12,R6
    00007484 65B3                   MOV         R11,R5
    00007486 4A0B                   JSR         @R10
    00007488 64C3                   MOV         R12,R4
          EDIT.c  5340        Bdisp_ClearLineVRAM(iX1,iY2,iX2,iY2);
    0000748A 67D3                   MOV         R13,R7
    0000748C 66E3                   MOV         R14,R6
    0000748E 65D3                   MOV         R13,R5
    00007490 4A0B                   JSR         @R10
    00007492 64C3                   MOV         R12,R4
          EDIT.c  5341        Bdisp_ClearLineVRAM(iX2,iY2,iX2,iY1);
    00007494 67B3                   MOV         R11,R7
    00007496 66E3                   MOV         R14,R6
    00007498 65D3                   MOV         R13,R5
    0000749A 4A0B                   JSR         @R10
    0000749C 64E3                   MOV         R14,R4
          EDIT.c  5342        Bdisp_ClearLineVRAM(iX2,iY1,iX1,iY1);
    0000749E 67B3                   MOV         R11,R7
    000074A0 66C3                   MOV         R12,R6
    000074A2 65B3                   MOV         R11,R5
    000074A4 4A0B                   JSR         @R10
    000074A6 64E3                   MOV         R14,R4
    000074A8 A018                   BRA         L4899
    000074AA 0009                   NOP
    000074AC              L4898:                            
          EDIT.c  5343      }                       
          EDIT.c  5344    
          EDIT.c  5345      //Clear
          EDIT.c  5346      else if(iColor==1){
    000074AC 50F6                   MOV.L       @(24,R15),R0
    000074AE 8801                   CMP/EQ      #1,R0
    000074B0 8B14                   BF          L4899
          EDIT.c  5347        Bdisp_DrawLineVRAM(iX1,iY1,iX1,iY2);
    000074B2 67D3                   MOV         R13,R7
    000074B4 DA0E                   MOV.L       L5308+6,R10; _Bdisp_DrawLineVRAM
    000074B6 66C3                   MOV         R12,R6
    000074B8 65B3                   MOV         R11,R5
    000074BA 4A0B                   JSR         @R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  365


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000074BC 64C3                   MOV         R12,R4
          EDIT.c  5348        Bdisp_DrawLineVRAM(iX1,iY2,iX2,iY2);
    000074BE 67D3                   MOV         R13,R7
    000074C0 66E3                   MOV         R14,R6
    000074C2 65D3                   MOV         R13,R5
    000074C4 4A0B                   JSR         @R10
    000074C6 64C3                   MOV         R12,R4
          EDIT.c  5349        Bdisp_DrawLineVRAM(iX2,iY2,iX2,iY1);
    000074C8 67B3                   MOV         R11,R7
    000074CA 66E3                   MOV         R14,R6
    000074CC 65D3                   MOV         R13,R5
    000074CE 4A0B                   JSR         @R10
    000074D0 64E3                   MOV         R14,R4
          EDIT.c  5350        Bdisp_DrawLineVRAM(iX2,iY1,iX1,iY1);
    000074D2 67B3                   MOV         R11,R7
    000074D4 66C3                   MOV         R12,R6
    000074D6 65B3                   MOV         R11,R5
    000074D8 4A0B                   JSR         @R10
    000074DA 64E3                   MOV         R14,R4
    000074DC              L4899:                            
          EDIT.c  5351      }                       
          EDIT.c  5352    
          EDIT.c  5353    }
    000074DC 4F26                   LDS.L       @R15+,PR
    000074DE 6AF6                   MOV.L       @R15+,R10
    000074E0 6BF6                   MOV.L       @R15+,R11
    000074E2 6CF6                   MOV.L       @R15+,R12
    000074E4 6DF6                   MOV.L       @R15+,R13
    000074E6 000B                   RTS
    000074E8 6EF6                   MOV.L       @R15+,R14
    000074EA              L5308:                            
    000074EA 0000                   .DATA.W     0
    000074EC <00000000>             .DATA.L     _Bdisp_ClearLineVRAM
    000074F0 <00000000>             .DATA.L     _Bdisp_DrawLineVRAM
          EDIT.c  5354    
          EDIT.c  5355    // ----------------------------------------------------------------
          EDIT.c  5356    // Standard part of code (inserted automatically by SDK)
          EDIT.c  5357    #pragma section _BR_Size
          EDIT.c  5358    unsigned long BR_Size;
          EDIT.c  5359    #pragma section
          EDIT.c  5360    #pragma section _TOP
          EDIT.c  5361    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
          EDIT.c  5362    {
          EDIT.c  5363        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L5309+2,R3 ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L5309:                            
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
          EDIT.c  5364    }
          EDIT.c  5365    #pragma section
C   00000000              L497:
    00000000 00                     .DATA.B     H'00
    00000001 0000000C01             .DATAB.B    12,0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  366


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             00           
    0000000D              L499:
    0000000D 00                     .DATA.B     H'00
    0000000E 0000000C01             .DATAB.B    12,0
             00           
    0000001A 00000002               .RES.W      1
    0000001C              L500:
    0000001C 00                     .DATA.B     H'00
    0000001D 00000001               .RES.B      1
    0000001E 00000002               .RES.W      1
    00000020              L503:
    00000020 4E6F742065             .SDATA      "Not enough memory"
             6E6F756768   
             206D656D6F   
             7279         
    00000031 00                     .DATA.B     H'00
    00000032 00000002               .RES.W      1
    00000034              L504:
    00000034 666F722074             .SDATA      "for text buffer."
             6578742062   
             7566666572   
             2E           
    00000044 00                     .DATA.B     H'00
    00000045 00000001               .RES.B      1
    00000046 00000002               .RES.W      1
    00000048              L505:
    00000048 4D696E696D             .SDATA      "Minimum size set."
             756D207369   
             7A65207365   
             742E         
    00000059 00                     .DATA.B     H'00
    0000005A 00000002               .RES.W      1
    0000005C              L506:
    0000005C 5265737461             .SDATA      "Restart program!"
             7274207072   
             6F6772616D   
             21           
    0000006C 00                     .DATA.B     H'00
    0000006D 00000001               .RES.B      1
    0000006E 00000002               .RES.W      1
    00000070              L509:
    00000070 666F722063             .SDATA      "for clip buffer."
             6C69702062   
             7566666572   
             2E           
    00000080 00                     .DATA.B     H'00
    00000081 00000001               .RES.B      1
    00000082 00000002               .RES.W      1
    00000084              L511:
    00000084 666F722066             .SDATA      "for file buffer."
             696C652062   
             7566666572   
             2E           
    00000094 00                     .DATA.B     H'00
    00000095 00000001               .RES.B      1
    00000096 00000002               .RES.W      1
    00000098              L513:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  367


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000098 666F722066             .SDATA      "for folder buffer"
             6F6C646572   
             2062756666   
             6572         
    000000A9 00                     .DATA.B     H'00
    000000AA              L557:
    000000AA 666C7330               .SDATA      "fls0"
    000000AE 00                     .DATA.B     H'00
    000000AF              L559:
    000000AF 00                     .DATA.B     H'00
    000000B0 0000000C01             .DATAB.B    12,0
             00           
    000000BC              L561:
    000000BC 00                     .DATA.B     H'00
    000000BD 0000000C01             .DATAB.B    12,0
             00           
    000000C9              L563:
    000000C9 00                     .DATA.B     H'00
    000000CA 0000000F01             .DATAB.B    15,0
             00           
    000000D9 00000001               .RES.B      1
    000000DA 00000002               .RES.W      1
    000000DC              L570:
    000000DC 46696C6520             .SDATA      "File open error!"
             6F70656E20   
             6572726F72   
             21           
    000000EC 00                     .DATA.B     H'00
    000000ED 00000001               .RES.B      1
    000000EE 00000002               .RES.W      1
    000000F0              L579:
    000000F0 4E6F742070             .SDATA      "Not pasted."
             6173746564   
             2E           
    000000FB 00                     .DATA.B     H'00
    000000FC              L580:
    000000FC 4275666665             .SDATA      "Buffer overflow!"
             72206F7665   
             72666C6F77   
             21           
    0000010C 00                     .DATA.B     H'00
    0000010D 00000001               .RES.B      1
    0000010E 00000002               .RES.W      1
    00000110              L581:
    00000110 436C697062             .SDATA      "Clipboard empty!"
             6F61726420   
             656D707479   
             21           
    00000120 00                     .DATA.B     H'00
    00000121 00000001               .RES.B      1
    00000122 00000002               .RES.W      1
    00000124              L592:
    00000124 53656C6563             .SDATA      "Selected text"
             7465642074   
             657874       
    00000131 00                     .DATA.B     H'00
    00000132 00000002               .RES.W      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  368


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000134              L593:
    00000134 6973206269             .SDATA      "is bigger than"
             6767657220   
             7468616E     
    00000142 00                     .DATA.B     H'00
    00000143 00000001               .RES.B      1
    00000144              L594:
    00000144 636C697020             .SDATA      "clip buffer!"
             6275666665   
             7221         
    00000150 00                     .DATA.B     H'00
    00000151 00000001               .RES.B      1
    00000152 00000002               .RES.W      1
    00000154              L595:
    00000154 4E6F207465             .SDATA      "No text selected!"
             7874207365   
             6C65637465   
             6421         
    00000165 00                     .DATA.B     H'00
    00000166 00000002               .RES.W      1
    00000168              L604:
    00000168 5365617263             .SDATA      "Searching..."
             68696E672E   
             2E2E         
    00000174 00                     .DATA.B     H'00
    00000175 00000001               .RES.B      1
    00000176 00000002               .RES.W      1
    00000178              L607:
    00000178 4E6F742066             .SDATA      "Not found!"
             6F756E6421   
    00000182 00                     .DATA.B     H'00
    00000183 00000001               .RES.B      1
    00000184              L611:
    00000184 46696C6520             .SDATA      "File exists."
             6578697374   
             732E         
    00000190 00                     .DATA.B     H'00
    00000191 00000001               .RES.B      1
    00000192 00000002               .RES.W      1
    00000194              L612:
    00000194 436F6E7469             .SDATA      "Continue?"
             6E75653F     
    0000019D 00                     .DATA.B     H'00
    0000019E 00000002               .RES.W      1
    000001A0              L615:
    000001A0 46696C6520             .SDATA      "File write error!"
             7772697465   
             206572726F   
             7221         
    000001B1 00                     .DATA.B     H'00
    000001B2 00000002               .RES.W      1
    000001B4              L616:
    000001B4 416C726561             .SDATA      "Already saved!"
             6479207361   
             76656421     
    000001C2 00                     .DATA.B     H'00
    000001C3 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  369


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001C4              L617:
    000001C4 42696E6172             .SDATA      "Binary files can"
             792066696C   
             6573206361   
             6E           
    000001D4 00                     .DATA.B     H'00
    000001D5 00000001               .RES.B      1
    000001D6 00000002               .RES.W      1
    000001D8              L618:
    000001D8 6E6F742062             .SDATA      "not be modified."
             65206D6F64   
             6966696564   
             2E           
    000001E8 00                     .DATA.B     H'00
    000001E9 00000001               .RES.B      1
    000001EA 00000002               .RES.W      1
    000001EC              L620:
    000001EC 6D61696E               .SDATA      "main"
    000001F0 00                     .DATA.B     H'00
    000001F1 00000001               .RES.B      1
    000001F2 00000002               .RES.W      1
    000001F4              L622:
    000001F4 4F76657277             .SDATA      "Overwrite?"
             726974653F   
    000001FE 00                     .DATA.B     H'00
    000001FF 00000001               .RES.B      1
    00000200              L626:
    00000200 5361766520             .SDATA      "Save file first!"
             66696C6520   
             6669727374   
             21           
    00000210 00                     .DATA.B     H'00
    00000211 00000001               .RES.B      1
    00000212 00000002               .RES.W      1
    00000214              L628:
    00000214 4375727265             .SDATA      "Current file will"
             6E74206669   
             6C65207769   
             6C6C         
    00000225 00                     .DATA.B     H'00
    00000226 00000002               .RES.W      1
    00000228              L629:
    00000228 6265206F70             .SDATA      "be opened next   "
             656E656420   
             6E65787420   
             2020         
    00000239 00                     .DATA.B     H'00
    0000023A 00000002               .RES.W      1
    0000023C              L630:
    0000023C 74696D6520             .SDATA      "time the editor  "
             7468652065   
             6469746F72   
             2020         
    0000024D 00                     .DATA.B     H'00
    0000024E 00000002               .RES.W      1
    00000250              L631:
    00000250 6973207374             .SDATA      "is started.      "




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  370


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6172746564   
             2E20202020   
             2020         
    00000261 00                     .DATA.B     H'00
    00000262 00000002               .RES.W      1
    00000264              L634:
    00000264 46696C6520             .SDATA      "File not saved."
             6E6F742073   
             617665642E   
    00000273 00                     .DATA.B     H'00
    00000274              L635:
    00000274 49676E6F72             .SDATA      "Ignore changes?"
             6520636861   
             6E6765733F   
    00000283 00                     .DATA.B     H'00
    00000284              L668:
    00000284 2020256320             .SDATA      "  %c "
    00000289 00                     .DATA.B     H'00
    0000028A 00000002               .RES.W      1
    0000028C              L670:
    0000028C 20202020               .SDATA      "    "
    00000290 00                     .DATA.B     H'00
    00000291 00000001               .RES.B      1
    00000292 00000002               .RES.W      1
    00000294              L680:
    00000294 2054657874             .SDATA      " Text editor for "
             2065646974   
             6F7220666F   
             7220         
    000002A5 00                     .DATA.B     H'00
    000002A6 00000002               .RES.W      1
    000002A8              L681:
    000002A8 2020636173             .SDATA      "  casio fx-9860G "
             696F206678   
             2D39383630   
             4720         
    000002B9 00                     .DATA.B     H'00
    000002BA 00000002               .RES.W      1
    000002BC              L682:
    000002BC 2020207365             .SDATA      "   series v1.6   "
             7269657320   
             76312E3620   
             2020         
    000002CD 00                     .DATA.B     H'00
    000002CE 00000002               .RES.W      1
    000002D0              L683:
    000002D0 446965676F             .SDATA      "Diego Marin, 2012"
             204D617269   
             6E2C203230   
             3132         
    000002E1 00                     .DATA.B     H'00
    000002E2 00000002               .RES.W      1
    000002E4              L684:
    000002E4 646D617269             .SDATA      "dmarin75@yahoo.es"
             6E37354079   
             61686F6F2E   
             6573         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  371


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002F5 00                     .DATA.B     H'00
    000002F6 00000002               .RES.W      1
    000002F8              L689:
    000002F8 5361766520             .SDATA      "Save file"
             66696C65     
    00000301 00                     .DATA.B     H'00
    00000302 00000002               .RES.W      1
    00000304              L690:
    00000304 6265666F72             .SDATA      "before leaving?"
             65206C6561   
             76696E673F   
    00000313 00                     .DATA.B     H'00
    00000314              L696:
    00000314 46696C6520             .SDATA      "File write error."
             7772697465   
             206572726F   
             722E         
    00000325 00                     .DATA.B     H'00
    00000326 00000002               .RES.W      1
    00000328              L697:
    00000328 5472792061             .SDATA      "Try again!"
             6761696E21   
    00000332 00                     .DATA.B     H'00
    00000333 00000001               .RES.B      1
    00000334              L804:
    00000334 20                     .SDATA      " "
    00000335 00                     .DATA.B     H'00
    00000336 00000002               .RES.W      1
    00000338              L810:
    00000338 2020202020             .SDATA      "                           "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00000353 00                     .DATA.B     H'00
    00000354              L811:
    00000354 20203A2020             .SDATA      "  :              "
             2020202020   
             2020202020   
             2020         
    00000365 00                     .DATA.B     H'00
    00000366 00000002               .RES.W      1
    00000368              L812:
    00000368 4D4D                   .SDATA      "MM"
    0000036A 00                     .DATA.B     H'00
    0000036B 00000001               .RES.B      1
    0000036C              L813:
    0000036C 666C7330               .SDATA      "fls0"
    00000370 00                     .DATA.B     H'00
    00000371 00000001               .RES.B      1
    00000372 00000002               .RES.W      1
    00000374              L814:
    00000374 534D                   .SDATA      "SM"
    00000376 00                     .DATA.B     H'00
    00000377 00000001               .RES.B      1
    00000378              L815:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  372


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000378 63726430               .SDATA      "crd0"
    0000037C 00                     .DATA.B     H'00
    0000037D 00000001               .RES.B      1
    0000037E 00000002               .RES.W      1
    00000380              L816:
    00000380 5344                   .SDATA      "SD"
    00000382 00                     .DATA.B     H'00
    00000383 00000001               .RES.B      1
    00000384              L818:
    00000384 54                     .SDATA      "T"
    00000385 00                     .DATA.B     H'00
    00000386 00000002               .RES.W      1
    00000388              L819:
    00000388 42                     .SDATA      "B"
    00000389 00                     .DATA.B     H'00
    0000038A 00000002               .RES.W      1
    0000038C              L821:
    0000038C 2D                     .SDATA      "-"
    0000038D 00                     .DATA.B     H'00
    0000038E 00000002               .RES.W      1
    00000390              L822:
    00000390 53                     .SDATA      "S"
    00000391 00                     .DATA.B     H'00
    00000392 00000002               .RES.W      1
    00000394              L830:
    00000394 5B20202020             .SDATA      "[        ]"
             202020205D   
    0000039E 00                     .DATA.B     H'00
    0000039F 00000001               .RES.B      1
    000003A0              L831:
    000003A0 25692F2569             .SDATA      "%i/%i"
    000003A5 00                     .DATA.B     H'00
    000003A6 00000002               .RES.W      1
    000003A8              L832:
    000003A8 2020202020             .SDATA      "          "
             2020202020   
    000003B2 00                     .DATA.B     H'00
    000003B3 00000001               .RES.B      1
    000003B4              L848:
    000003B4 454449542E             .SDATA      "EDIT.DIR"
             444952       
    000003BC 00                     .DATA.B     H'00
    000003BD 00000001               .RES.B      1
    000003BE 00000002               .RES.W      1
    000003C0              L851:
    000003C0 454449542E             .SDATA      "EDIT.CFG"
             434647       
    000003C8 00                     .DATA.B     H'00
    000003C9 00000001               .RES.B      1
    000003CA 00000002               .RES.W      1
    000003CC              L860:
    000003CC 454449542E             .SDATA      "EDIT.TMP"
             544D50       
    000003D4 00                     .DATA.B     H'00
    000003D5 00000001               .RES.B      1
    000003D6 00000002               .RES.W      1
    000003D8              L891:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  373


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003D8 5C5C25735C             .SDATA      "\\%s\%s"
             2573         
    000003DF 00                     .DATA.B     H'00
    000003E0              L892:
    000003E0 5C5C25735C             .SDATA      "\\%s\%s\%s"
             25735C2573   
    000003EA 00                     .DATA.B     H'00
    000003EB 00000001               .RES.B      1
    000003EC              L906:
    000003EC 2531692573             .SDATA      "%1i%s"
    000003F1 00                     .DATA.B     H'00
    000003F2 00000002               .RES.W      1
    000003F4              L928:
    000003F4 2A2E2A                 .SDATA      "*.*"
    000003F7 00                     .DATA.B     H'00
    000003F8              L939:
    000003F8 4541435457             .SDATA      "EACTWORK.tmp"
             4F524B2E74   
             6D70         
    00000404 00                     .DATA.B     H'00
    00000405 00000001               .RES.B      1
    00000406 00000002               .RES.W      1
    00000408              L987:
    00000408 4D61696E20             .SDATA      "Main Memory[%-8s]"
             4D656D6F72   
             795B252D38   
             735D         
    00000419 00                     .DATA.B     H'00
    0000041A 00000002               .RES.W      1
    0000041C              L989:
    0000041C 53746F7261             .SDATA      "Storage Mem[%-8s]"
             6765204D65   
             6D5B252D38   
             735D         
    0000042D 00                     .DATA.B     H'00
    0000042E 00000002               .RES.W      1
    00000430              L991:
    00000430 5344204361             .SDATA      "SD Card    [%-8s]"
             7264202020   
             205B252D38   
             735D         
    00000441 00                     .DATA.B     H'00
    00000442 00000002               .RES.W      1
    00000444              L993:
    00000444 2569204279             .SDATA      "%i Bytes Free"
             7465732046   
             726565       
    00000451 00                     .DATA.B     H'00
    00000452 00000002               .RES.W      1
    00000454              L996:
    00000454 2020202020             .SDATA      "                     "
             2020202020   
             2020202020   
             2020202020   
             20           
    00000469 00                     .DATA.B     H'00
    0000046A 00000002               .RES.W      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  374


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000046C              L998:
    0000046C 2020202020             .SDATA      "       No Data       "
             20204E6F20   
             4461746120   
             2020202020   
             20           
    00000481 00                     .DATA.B     H'00
    00000482 00000002               .RES.W      1
    00000484              L1015:
    00000484 46696C6520             .SDATA      "File rename error!"
             72656E616D   
             6520657272   
             6F7221       
    00000496 00                     .DATA.B     H'00
    00000497 00000001               .RES.B      1
    00000498              L1022:
    00000498 46696C6520             .SDATA      "File copy error!"
             636F707920   
             6572726F72   
             21           
    000004A8 00                     .DATA.B     H'00
    000004A9 00000001               .RES.B      1
    000004AA 00000002               .RES.W      1
    000004AC              L1024:
    000004AC 44656C6574             .SDATA      "Delete this file?"
             6520746869   
             732066696C   
             653F         
    000004BD 00                     .DATA.B     H'00
    000004BE 00000002               .RES.W      1
    000004C0              L1033:
    000004C0 46696C6520             .SDATA      "File move error!"
             6D6F766520   
             6572726F72   
             21           
    000004D0 00                     .DATA.B     H'00
    000004D1 00000001               .RES.B      1
    000004D2 00000002               .RES.W      1
    000004D4              L1035:
    000004D4 466F6C6465             .SDATA      "Folder exists!"
             7220657869   
             73747321     
    000004E2 00                     .DATA.B     H'00
    000004E3 00000001               .RES.B      1
    000004E4              L1038:
    000004E4 4572726F72             .SDATA      "Error while"
             207768696C   
             65           
    000004EF 00                     .DATA.B     H'00
    000004F0              L1039:
    000004F0 6372656174             .SDATA      "creating folder!"
             696E672066   
             6F6C646572   
             21           
    00000500 00                     .DATA.B     H'00
    00000501 00000001               .RES.B      1
    00000502 00000002               .RES.W      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  375


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000504              L1044:
    00000504 44656C6574             .SDATA      "Delete folder?"
             6520666F6C   
             6465723F     
    00000512 00                     .DATA.B     H'00
    00000513 00000001               .RES.B      1
    00000514              L1047:
    00000514 64656C6574             .SDATA      "deleting folder!"
             696E672066   
             6F6C646572   
             21           
    00000524 00                     .DATA.B     H'00
    00000525 00000001               .RES.B      1
    00000526 00000002               .RES.W      1
    00000528              L1075:
    00000528 5B25735D               .SDATA      "[%s]"
    0000052C 00                     .DATA.B     H'00
    0000052D 00000001               .RES.B      1
    0000052E 00000002               .RES.W      1
    00000530              L1076:
    00000530 20252D3132             .SDATA      " %-12s        "
             7320202020   
             20202020     
    0000053E 00                     .DATA.B     H'00
    0000053F 00000001               .RES.B      1
    00000540              L1077:
    00000540 20252D3132             .SDATA      " %-12s:%6i "
             733A253669   
             20           
    0000054B 00                     .DATA.B     H'00
    0000054C              L1078:
    0000054C E69200                 .DATA.B     H'E6,H'92,H'00
    0000054F 00000001               .RES.B      1
    00000550              L1079:
    00000550 E69300                 .DATA.B     H'E6,H'93,H'00
    00000553 00000001               .RES.B      1
    00000554              L1103:
    00000554 53656C6563             .SDATA      "Select folder:"
             7420666F6C   
             6465723A     
    00000562 00                     .DATA.B     H'00
    00000563 00000001               .RES.B      1
    00000564              L1106:
    00000564 4D4D5C                 .SDATA      "MM\"
    00000567 00                     .DATA.B     H'00
    00000568              L1108:
    00000568 534D5C                 .SDATA      "SM\"
    0000056B 00                     .DATA.B     H'00
    0000056C              L1110:
    0000056C 53445C                 .SDATA      "SD\"
    0000056F 00                     .DATA.B     H'00
    00000570              L1114:
    00000570 2020202020             .SDATA      "                 "
             2020202020   
             2020202020   
             2020         
    00000581 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  376


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000582 00000002               .RES.W      1
    00000584              L1136:
    00000584 2573                   .SDATA      "%s"
    00000586 00                     .DATA.B     H'00
    00000587 00000001               .RES.B      1
    00000588              L1137:
    00000588 202573                 .SDATA      " %s"
    0000058B 00                     .DATA.B     H'00
    0000058C              L1138:
    0000058C 252D397320             .SDATA      "%-9s        "
             2020202020   
             2020         
    00000598 00                     .DATA.B     H'00
    00000599              L1151:
    00000599 00                     .DATA.B     H'00
    0000059A 0000000401             .DATAB.B    4,0
             00           
    0000059E              L1153:
    0000059E 00                     .DATA.B     H'00
    0000059F 0000000C01             .DATAB.B    12,0
             00           
    000005AB              L1155:
    000005AB 00                     .DATA.B     H'00
    000005AC 0000000C01             .DATAB.B    12,0
             00           
    000005B8              L1227:
    000005B8 5472792053             .SDATA      "Try SDC   :"
             4443202020   
             3A           
    000005C3 00                     .DATA.B     H'00
    000005C4              L1228:
    000005C4 5965732020             .SDATA      "Yes       "
             2020202020   
    000005CE 00                     .DATA.B     H'00
    000005CF 00000001               .RES.B      1
    000005D0              L1229:
    000005D0 4E6F202020             .SDATA      "No        "
             2020202020   
    000005DA 00                     .DATA.B     H'00
    000005DB 00000001               .RES.B      1
    000005DC              L1230:
    000005DC 537973742E             .SDATA      "Syst.files:"
             66696C6573   
             3A           
    000005E7 00                     .DATA.B     H'00
    000005E8              L1231:
    000005E8 4869646465             .SDATA      "Hidden    "
             6E20202020   
    000005F2 00                     .DATA.B     H'00
    000005F3 00000001               .RES.B      1
    000005F4              L1232:
    000005F4 446973706C             .SDATA      "Displayed "
             6179656420   
    000005FE 00                     .DATA.B     H'00
    000005FF 00000001               .RES.B      1
    00000600              L1233:
    00000600 4E6577206C             .SDATA      "New line  :"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  377


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             696E652020   
             3A           
    0000060B 00                     .DATA.B     H'00
    0000060C              L1235:
    0000060C 43522B4C46             .SDATA      "CR+LF(Win)"
             2857696E29   
    00000616 00                     .DATA.B     H'00
    00000617 00000001               .RES.B      1
    00000618              L1236:
    00000618 4C4628556E             .SDATA      "LF(Unix)  "
             6978292020   
    00000622 00                     .DATA.B     H'00
    00000623 00000001               .RES.B      1
    00000624              L1237:
    00000624 576F726420             .SDATA      "Word Wrap :"
             5772617020   
             3A           
    0000062F 00                     .DATA.B     H'00
    00000630              L1239:
    00000630 4F6E202020             .SDATA      "On        "
             2020202020   
    0000063A 00                     .DATA.B     H'00
    0000063B 00000001               .RES.B      1
    0000063C              L1240:
    0000063C 4F66662020             .SDATA      "Off       "
             2020202020   
    00000646 00                     .DATA.B     H'00
    00000647 00000001               .RES.B      1
    00000648              L1241:
    00000648 4279746573             .SDATA      "Bytes free:"
             2066726565   
             3A           
    00000653 00                     .DATA.B     H'00
    00000654              L1243:
    00000654 4E6F742064             .SDATA      "Not disp. "
             6973702E20   
    0000065E 00                     .DATA.B     H'00
    0000065F 00000001               .RES.B      1
    00000660              L1244:
    00000660 4465662E20             .SDATA      "Def. root :"
             726F6F7420   
             3A           
    0000066B 00                     .DATA.B     H'00
    0000066C              L1245:
    0000066C 4D61696E20             .SDATA      "Main Mem. "
             4D656D2E20   
    00000676 00                     .DATA.B     H'00
    00000677 00000001               .RES.B      1
    00000678              L1246:
    00000678 53746F2E4D             .SDATA      "Sto.Memory"
             656D6F7279   
    00000682 00                     .DATA.B     H'00
    00000683 00000001               .RES.B      1
    00000684              L1247:
    00000684 5344204361             .SDATA      "SD Card   "
             7264202020   
    0000068E 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  378


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000068F 00000001               .RES.B      1
    00000690              L1248:
    00000690 496E666F20             .SDATA      "Info bar  :"
             6261722020   
             3A           
    0000069B 00                     .DATA.B     H'00
    0000069C              L1250:
    0000069C 466F6C6465             .SDATA      "Folder    "
             7220202020   
    000006A6 00                     .DATA.B     H'00
    000006A7 00000001               .RES.B      1
    000006A8              L1251:
    000006A8 437572736F             .SDATA      "Cursor    "
             7220202020   
    000006B2 00                     .DATA.B     H'00
    000006B3 00000001               .RES.B      1
    000006B4              L1252:
    000006B4 466F6E7420             .SDATA      "Font size :"
             73697A6520   
             3A           
    000006BF 00                     .DATA.B     H'00
    000006C0              L1254:
    000006C0 3332636F6C             .SDATA      "32col,8lin"
             2C386C696E   
    000006CA 00                     .DATA.B     H'00
    000006CB 00000001               .RES.B      1
    000006CC              L1255:
    000006CC 3332636F6C             .SDATA      "32col,7lin"
             2C376C696E   
    000006D6 00                     .DATA.B     H'00
    000006D7 00000001               .RES.B      1
    000006D8              L1256:
    000006D8 3235636F6C             .SDATA      "25col,7lin"
             2C376C696E   
    000006E2 00                     .DATA.B     H'00
    000006E3 00000001               .RES.B      1
    000006E4              L1257:
    000006E4 3231636F6C             .SDATA      "21col,6lin"
             2C366C696E   
    000006EE 00                     .DATA.B     H'00
    000006EF 00000001               .RES.B      1
    000006F0              L1258:
    000006F0 4175746F20             .SDATA      "Auto Open :"
             4F70656E20   
             3A           
    000006FB 00                     .DATA.B     H'00
    000006FC              L1260:
    000006FC 456E61626C             .SDATA      "Enabled   "
             6564202020   
    00000706 00                     .DATA.B     H'00
    00000707 00000001               .RES.B      1
    00000708              L1261:
    00000708 4469736162             .SDATA      "Disabled  "
             6C65642020   
    00000712 00                     .DATA.B     H'00
    00000713 00000001               .RES.B      1
    00000714              L1262:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  379


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000714 4175746F20             .SDATA      "Auto Root :"
             526F6F7420   
             3A           
    0000071F 00                     .DATA.B     H'00
    00000720              L1263:
    00000720 4175746F20             .SDATA      "Auto Name :"
             4E616D6520   
             3A           
    0000072B 00                     .DATA.B     H'00
    0000072C              L1264:
    0000072C 286E6F7420             .SDATA      "(not set)"
             73657429     
    00000735 00                     .DATA.B     H'00
    00000736 00000002               .RES.W      1
    00000738              L1265:
    00000738 4175746F20             .SDATA      "Auto Foldr:"
             466F6C6472   
             3A           
    00000743 00                     .DATA.B     H'00
    00000744              L1266:
    00000744 5465787420             .SDATA      "Text buff.:"
             627566662E   
             3A           
    0000074F 00                     .DATA.B     H'00
    00000750              L1267:
    00000750 2569                   .SDATA      "%i"
    00000752 00                     .DATA.B     H'00
    00000753 00000001               .RES.B      1
    00000754              L1268:
    00000754 436C697020             .SDATA      "Clip buff.:"
             627566662E   
             3A           
    0000075F 00                     .DATA.B     H'00
    00000760              L1269:
    00000760 46696C6573             .SDATA      "Files/Dir.:"
             2F4469722E   
             3A           
    0000076B 00                     .DATA.B     H'00
    0000076C              L1270:
    0000076C 466F6C6472             .SDATA      "Foldr.Max.:"
             2E4D61782E   
             3A           
    00000777 00                     .DATA.B     H'00
    00000778              L1276:
    00000778 4544495431             .SDATA      "EDIT16"
             36           
    0000077E 00                     .DATA.B     H'00
    0000077F 00000001               .RES.B      1
    00000780              L1317:
    00000780 5265616469             .SDATA      "Reading file..."
             6E67206669   
             6C652E2E2E   
    0000078F 00                     .DATA.B     H'00
    00000790              L1321:
    00000790 46696C6520             .SDATA      "File too big."
             746F6F2062   
             69672E       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  380


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000079D 00                     .DATA.B     H'00
    0000079E 00000002               .RES.W      1
    000007A0              L1322:
    000007A0 4E6F74206C             .SDATA      "Not loaded"
             6F61646564   
    000007AA 00                     .DATA.B     H'00
    000007AB 00000001               .RES.B      1
    000007AC              L1323:
    000007AC 636F6D706C             .SDATA      "completely!"
             6574656C79   
             21           
    000007B7 00                     .DATA.B     H'00
    000007B8              L1341:
    000007B8 5772697469             .SDATA      "Writing file..."
             6E67206669   
             6C652E2E2E   
    000007C7 00                     .DATA.B     H'00
    000007C8              L1369:
    000007C8 436F707969             .SDATA      "Copying file..."
             6E67206669   
             6C652E2E2E   
    000007D7 00                     .DATA.B     H'00
    000007D8              L1373:
    000007D8 43616E6E6F             .SDATA      "Cannot open"
             74206F7065   
             6E           
    000007E3 00                     .DATA.B     H'00
    000007E4              L1374:
    000007E4 736F757263             .SDATA      "source file!"
             652066696C   
             6521         
    000007F0 00                     .DATA.B     H'00
    000007F1 00000001               .RES.B      1
    000007F2 00000002               .RES.W      1
    000007F4              L1377:
    000007F4 43616E6E6F             .SDATA      "Cannot create"
             7420637265   
             617465       
    00000801 00                     .DATA.B     H'00
    00000802 00000002               .RES.W      1
    00000804              L1378:
    00000804 6465737469             .SDATA      "destination file!"
             6E6174696F   
             6E2066696C   
             6521         
    00000815 00                     .DATA.B     H'00
    00000816 00000002               .RES.W      1
    00000818              L1388:
    00000818 436F707969             .SDATA      "Copying file!"
             6E67206669   
             6C6521       
    00000825 00                     .DATA.B     H'00
    00000826 00000002               .RES.W      1
    00000828              L1399:
    00000828 64656C6574             .SDATA      "deleting file!"
             696E672066   
             696C6521     




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  381


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000836 00                     .DATA.B     H'00
    00000837 00000001               .RES.B      1
    00000838              L1443:
    00000838 2020204672             .SDATA      "   Free memory   "
             6565206D65   
             6D6F727920   
             2020         
    00000849 00                     .DATA.B     H'00
    0000084A 00000002               .RES.W      1
    0000084C              L1444:
    0000084C 4D61696E20             .SDATA      "Main   :%i"
             20203A2569   
    00000856 00                     .DATA.B     H'00
    00000857 00000001               .RES.B      1
    00000858              L1445:
    00000858 53746F7261             .SDATA      "Storage:%i"
             67653A2569   
    00000862 00                     .DATA.B     H'00
    00000863 00000001               .RES.B      1
    00000864              L1446:
    00000864 5344204361             .SDATA      "SD Card:%i"
             72643A2569   
    0000086E 00                     .DATA.B     H'00
    0000086F 00000001               .RES.B      1
    00000870              L1453:
    00000870 456E746572             .SDATA      "Enter file name:"
             2066696C65   
             206E616D65   
             3A           
    00000880 00                     .DATA.B     H'00
    00000881 00000001               .RES.B      1
    00000882 00000002               .RES.W      1
    00000884              L1454:
    00000884 5B20202020             .SDATA      "[            ]"
             2020202020   
             2020205D     
    00000892 00                     .DATA.B     H'00
    00000893 00000001               .RES.B      1
    00000894              L1456:
    00000894 496E76616C             .SDATA      "Invalid filename!"
             6964206669   
             6C656E616D   
             6521         
    000008A5 00                     .DATA.B     H'00
    000008A6 00000002               .RES.W      1
    000008A8              L1461:
    000008A8 466F6C6465             .SDATA      "Folder name:  "
             72206E616D   
             653A2020     
    000008B6 00                     .DATA.B     H'00
    000008B7 00000001               .RES.B      1
    000008B8              L1463:
    000008B8 496E76616C             .SDATA      "Invalid folder!"
             696420666F   
             6C64657221   
    000008C7 00                     .DATA.B     H'00
    000008C8              L1468:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  382


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008C8 5365617263             .SDATA      "Search string:   "
             6820737472   
             696E673A20   
             2020         
    000008D9 00                     .DATA.B     H'00
    000008DA 00000002               .RES.W      1
    000008DC              L1469:
    000008DC 5B20202020             .SDATA      "[               ]"
             2020202020   
             2020202020   
             205D         
    000008ED 00                     .DATA.B     H'00
    000008EE 00000002               .RES.W      1
    000008F0              L1471:
    000008F0 456D707479             .SDATA      "Empty string!"
             2073747269   
             6E6721       
    000008FD 00                     .DATA.B     H'00
    000008FE              L1474:
    000008FE 5465787420             .SDATA      "Text editor for fx-9860G series "
             656469746F   
             7220666F72   
             2066782D39   
             3836304720   
             7365726965   
             7320         
    0000091E 00                     .DATA.B     H'00
    0000091F 2D2D2D2D2D             .SDATA      "---------FILE EXPLORER----------"
             2D2D2D2D46   
             494C452045   
             58504C4F52   
             45522D2D2D   
             2D2D2D2D2D   
             2D2D         
    0000093F 00                     .DATA.B     H'00
    00000940 4D61696E20             .SDATA      "Main menu commands:             "
             6D656E7520   
             636F6D6D61   
             6E64733A20   
             2020202020   
             2020202020   
             2020         
    00000960 00                     .DATA.B     H'00
    00000961 2D4F50454E             .SDATA      "-OPEN: Open selected file/folder"
             3A204F7065   
             6E2073656C   
             6563746564   
             2066696C65   
             2F666F6C64   
             6572         
    00000981 00                     .DATA.B     H'00
    00000982 2D4E45573A             .SDATA      "-NEW:  Create new file.         "
             2020437265   
             617465206E   
             6577206669   
             6C652E2020   
             2020202020   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  383


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2020         
    000009A2 00                     .DATA.B     H'00
    000009A3 2D46494C45             .SDATA      "-FILE: Go to File menu.         "
             3A20476F20   
             746F204669   
             6C65206D65   
             6E752E2020   
             2020202020   
             2020         
    000009C3 00                     .DATA.B     H'00
    000009C4 2D4F50544E             .SDATA      "-OPTN: Go to options menu.      "
             3A20476F20   
             746F206F70   
             74696F6E73   
             206D656E75   
             2E20202020   
             2020         
    000009E4 00                     .DATA.B     H'00
    000009E5 2D524F4F54             .SDATA      "-ROOT: Changes root directory.  "
             3A20436861   
             6E67657320   
             726F6F7420   
             6469726563   
             746F72792E   
             2020         
    00000A05 00                     .DATA.B     H'00
    00000A06 2D44454C3A             .SDATA      "-DEL:  Delete selected file.    "
             202044656C   
             6574652073   
             656C656374   
             6564206669   
             6C652E2020   
             2020         
    00000A26 00                     .DATA.B     H'00
    00000A27 46696C6520             .SDATA      "File menu commands:             "
             6D656E7520   
             636F6D6D61   
             6E64733A20   
             2020202020   
             2020202020   
             2020         
    00000A47 00                     .DATA.B     H'00
    00000A48 2D52454E3A             .SDATA      "-REN:  Rename file.             "
             202052656E   
             616D652066   
             696C652E20   
             2020202020   
             2020202020   
             2020         
    00000A68 00                     .DATA.B     H'00
    00000A69 2D434F5059             .SDATA      "-COPY: Copy file.               "
             3A20436F70   
             792066696C   
             652E202020   
             2020202020   
             2020202020   
             2020         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  384


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A89 00                     .DATA.B     H'00
    00000A8A 2D4D4F5645             .SDATA      "-MOVE: Move file.               "
             3A204D6F76   
             652066696C   
             652E202020   
             2020202020   
             2020202020   
             2020         
    00000AAA 00                     .DATA.B     H'00
    00000AAB 2D4E455746             .SDATA      "-NEWF: Create new folder.       "
             3A20437265   
             617465206E   
             657720666F   
             6C6465722E   
             2020202020   
             2020         
    00000ACB 00                     .DATA.B     H'00
    00000ACC 2D44454C46             .SDATA      "-DELF: Delete selected folder.  "
             3A2044656C   
             6574652073   
             656C656374   
             656420666F   
             6C6465722E   
             2020         
    00000AEC 00                     .DATA.B     H'00
    00000AED 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00000B0D 00                     .DATA.B     H'00
    00000B0E 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00000B2E 00                     .DATA.B     H'00
    00000B2F 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00000B4F 00                     .DATA.B     H'00
    00000B50 4F7074696F             .SDATA      "Options menu commands:          "
             6E73206D65   
             6E7520636F   
             6D6D616E64   
             733A202020   
             2020202020   
             2020         
    00000B70 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  385


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B71 2D4F50544E             .SDATA      "-OPTN: Enter set up screen. Set "
             3A20456E74   
             6572207365   
             7420757020   
             7363726565   
             6E2E205365   
             7420         
    00000B91 00                     .DATA.B     H'00
    00000B92 2020202020             .SDATA      "       up screen is also called "
             2020757020   
             7363726565   
             6E20697320   
             616C736F20   
             63616C6C65   
             6420         
    00000BB2 00                     .DATA.B     H'00
    00000BB3 2020202020             .SDATA      "       with Shift+SETUP.        "
             2020776974   
             6820536869   
             66742B5345   
             5455502E20   
             2020202020   
             2020         
    00000BD3 00                     .DATA.B     H'00
    00000BD4 2D4D454D20             .SDATA      "-MEM : Display memory status.   "
             3A20446973   
             706C617920   
             6D656D6F72   
             7920737461   
             7475732E20   
             2020         
    00000BF4 00                     .DATA.B     H'00
    00000BF5 2D48454C50             .SDATA      "-HELP: This help screen.        "
             3A20546869   
             732068656C   
             7020736372   
             65656E2E20   
             2020202020   
             2020         
    00000C15 00                     .DATA.B     H'00
    00000C16 2D41424F55             .SDATA      "-ABOU: Information about program"
             3A20496E66   
             6F726D6174   
             696F6E2061   
             626F757420   
             70726F6772   
             616D         
    00000C36 00                     .DATA.B     H'00
    00000C37 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00000C57 00                     .DATA.B     H'00
    00000C58 2020202020             .SDATA      "                                "




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  386


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00000C78 00                     .DATA.B     H'00
    00000C79 526F6F7420             .SDATA      "Root menu commands:             "
             6D656E7520   
             636F6D6D61   
             6E64733A20   
             2020202020   
             2020202020   
             2020         
    00000C99 00                     .DATA.B     H'00
    00000C9A 2D4D41494E             .SDATA      "-MAIN: Change to main memory as "
             3A20436861   
             6E67652074   
             6F206D6169   
             6E206D656D   
             6F72792061   
             7320         
    00000CBA 00                     .DATA.B     H'00
    00000CBB 2020202020             .SDATA      "       root directory.          "
             2020726F6F   
             7420646972   
             6563746F72   
             792E202020   
             2020202020   
             2020         
    00000CDB 00                     .DATA.B     H'00
    00000CDC 2D534D454D             .SDATA      "-SMEM: Change to storage memory "
             3A20436861   
             6E67652074   
             6F2073746F   
             7261676520   
             6D656D6F72   
             7920         
    00000CFC 00                     .DATA.B     H'00
    00000CFD 2020202020             .SDATA      "       as root directory.       "
             2020617320   
             726F6F7420   
             6469726563   
             746F72792E   
             2020202020   
             2020         
    00000D1D 00                     .DATA.B     H'00
    00000D1E 2D5344433A             .SDATA      "-SDC:  Change to SD Card as root"
             2020436861   
             6E67652074   
             6F20534420   
             4361726420   
             617320726F   
             6F74         
    00000D3E 00                     .DATA.B     H'00
    00000D3F 2020202020             .SDATA      "       directory.               "
             2020646972   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  387


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6563746F72   
             792E202020   
             2020202020   
             2020202020   
             2020         
    00000D5F 00                     .DATA.B     H'00
    00000D60 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00000D80 00                     .DATA.B     H'00
    00000D81 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00000DA1 00                     .DATA.B     H'00
    00000DA2 2D2D2D2D2D             .SDATA      "----------TEXT EDITOR-----------"
             2D2D2D2D2D   
             5445585420   
             454449544F   
             522D2D2D2D   
             2D2D2D2D2D   
             2D2D         
    00000DC2 00                     .DATA.B     H'00
    00000DC3 4D61696E20             .SDATA      "Main menu commands:             "
             6D656E7520   
             636F6D6D61   
             6E64733A20   
             2020202020   
             2020202020   
             2020         
    00000DE3 00                     .DATA.B     H'00
    00000DE4 2D46494C45             .SDATA      "-FILE: Go to file menu.         "
             3A20476F20   
             746F206669   
             6C65206D65   
             6E752E2020   
             2020202020   
             2020         
    00000E04 00                     .DATA.B     H'00
    00000E05 2D45444954             .SDATA      "-EDIT: Go to edit menu.         "
             3A20476F20   
             746F206564   
             6974206D65   
             6E752E2020   
             2020202020   
             2020         
    00000E25 00                     .DATA.B     H'00
    00000E26 2D474F544F             .SDATA      "-GOTO: Go to goto menu.         "
             3A20476F20   
             746F20676F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  388


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             746F206D65   
             6E752E2020   
             2020202020   
             2020         
    00000E46 00                     .DATA.B     H'00
    00000E47 2D4F50544E             .SDATA      "-OPTN: Go to options menu.      "
             3A20476F20   
             746F206F70   
             74696F6E73   
             206D656E75   
             2E20202020   
             2020         
    00000E67 00                     .DATA.B     H'00
    00000E68 2D43484152             .SDATA      "-CHAR: ASCII character set.     "
             3A20415343   
             4949206368   
             6172616374   
             6572207365   
             742E202020   
             2020         
    00000E88 00                     .DATA.B     H'00
    00000E89 2D413C3E61             .SDATA      "-A<>a: Change upper/lower case. "
             3A20436861   
             6E67652075   
             707065722F   
             6C6F776572   
             2063617365   
             2E20         
    00000EA9 00                     .DATA.B     H'00
    00000EAA 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00000ECA 00                     .DATA.B     H'00
    00000ECB 46696C6520             .SDATA      "File menu commands:             "
             6D656E7520   
             636F6D6D61   
             6E64733A20   
             2020202020   
             2020202020   
             2020         
    00000EEB 00                     .DATA.B     H'00
    00000EEC 2D53415645             .SDATA      "-SAVE :Save file to current     "
             203A536176   
             652066696C   
             6520746F20   
             6375727265   
             6E74202020   
             2020         
    00000F0C 00                     .DATA.B     H'00
    00000F0D 2020202020             .SDATA      "       location memory.         "
             20206C6F63   
             6174696F6E   
             206D656D6F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  389


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             72792E2020   
             2020202020   
             2020         
    00000F2D 00                     .DATA.B     H'00
    00000F2E 2D532E4153             .SDATA      "-S.AS: Save file with different "
             3A20536176   
             652066696C   
             6520776974   
             6820646966   
             666572656E   
             7420         
    00000F4E 00                     .DATA.B     H'00
    00000F4F 2020202020             .SDATA      "       file/folder names.       "
             202066696C   
             652F666F6C   
             646572206E   
             616D65732E   
             2020202020   
             2020         
    00000F6F 00                     .DATA.B     H'00
    00000F70 2D4155544F             .SDATA      "-AUTO: Set current file to be   "
             3A20536574   
             2063757272   
             656E742066   
             696C652074   
             6F20626520   
             2020         
    00000F90 00                     .DATA.B     H'00
    00000F91 2020202020             .SDATA      "       opened automatically when"
             20206F7065   
             6E65642061   
             75746F6D61   
             746963616C   
             6C79207768   
             656E         
    00000FB1 00                     .DATA.B     H'00
    00000FB2 2020202020             .SDATA      "       program starts           "
             202070726F   
             6772616D20   
             7374617274   
             7320202020   
             2020202020   
             2020         
    00000FD2 00                     .DATA.B     H'00
    00000FD3 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00000FF3 00                     .DATA.B     H'00
    00000FF4 4564697420             .SDATA      "Edit menu commands:             "
             6D656E7520   
             636F6D6D61   
             6E64733A20   
             2020202020   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  390


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2020202020   
             2020         
    00001014 00                     .DATA.B     H'00
    00001015 2D434C4950             .SDATA      "-CLIP: Text selection on / off. "
             3A20546578   
             742073656C   
             656374696F   
             6E206F6E20   
             2F206F6666   
             2E20         
    00001035 00                     .DATA.B     H'00
    00001036 2020202020             .SDATA      "       Same as SHIFT+CLIP.      "
             202053616D   
             6520617320   
             5348494654   
             2B434C4950   
             2E20202020   
             2020         
    00001056 00                     .DATA.B     H'00
    00001057 2D434F5059             .SDATA      "-COPY: Copy text to clipboard.  "
             3A20436F70   
             7920746578   
             7420746F20   
             636C697062   
             6F6172642E   
             2020         
    00001077 00                     .DATA.B     H'00
    00001078 2D4355543A             .SDATA      "-CUT:  Copy text to clipboard   "
             2020436F70   
             7920746578   
             7420746F20   
             636C697062   
             6F61726420   
             2020         
    00001098 00                     .DATA.B     H'00
    00001099 2020202020             .SDATA      "       and delete.              "
             2020616E64   
             2064656C65   
             74652E2020   
             2020202020   
             2020202020   
             2020         
    000010B9 00                     .DATA.B     H'00
    000010BA 2D50415354             .SDATA      "-PAST: Paste text from clipboard"
             3A20506173   
             7465207465   
             7874206672   
             6F6D20636C   
             6970626F61   
             7264         
    000010DA 00                     .DATA.B     H'00
    000010DB 2020202020             .SDATA      "       Same as SHIFT+PASTE.     "
             202053616D   
             6520617320   
             5348494654   
             2B50415354   
             452E202020   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  391


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2020         
    000010FB 00                     .DATA.B     H'00
    000010FC 2D44454C3A             .SDATA      "-DEL:  Delete selected text.    "
             202044656C   
             6574652073   
             656C656374   
             6564207465   
             78742E2020   
             2020         
    0000111C 00                     .DATA.B     H'00
    0000111D 2D5352433A             .SDATA      "-SRC:  Search string within text"
             2020536561   
             7263682073   
             7472696E67   
             2077697468   
             696E207465   
             7874         
    0000113D 00                     .DATA.B     H'00
    0000113E 2D5352432B             .SDATA      "-SRC+: Search again.            "
             3A20536561   
             7263682061   
             6761696E2E   
             2020202020   
             2020202020   
             2020         
    0000115E 00                     .DATA.B     H'00
    0000115F 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    0000117F 00                     .DATA.B     H'00
    00001180 476F746F20             .SDATA      "Goto menu commands:             "
             6D656E7520   
             636F6D6D61   
             6E64733A20   
             2020202020   
             2020202020   
             2020         
    000011A0 00                     .DATA.B     H'00
    000011A1 2D544F503A             .SDATA      "-TOP:  Move cursor to beginning."
             20204D6F76   
             6520637572   
             736F722074   
             6F20626567   
             696E6E696E   
             672E         
    000011C1 00                     .DATA.B     H'00
    000011C2 2D424F544D             .SDATA      "-BOTM: Move cursor to ending.   "
             3A204D6F76   
             6520637572   
             736F722074   
             6F20656E64   
             696E672E20   
             2020         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  392


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011E2 00                     .DATA.B     H'00
    000011E3 2D484F4D45             .SDATA      "-HOME: Go to begining of line.  "
             3A20476F20   
             746F206265   
             67696E696E   
             67206F6620   
             6C696E652E   
             2020         
    00001203 00                     .DATA.B     H'00
    00001204 2D454E443A             .SDATA      "-END:  Go to ending of line.    "
             2020476F20   
             746F20656E   
             64696E6720   
             6F66206C69   
             6E652E2020   
             2020         
    00001224 00                     .DATA.B     H'00
    00001225 2D5041472D             .SDATA      "-PAG-: Page up.                 "
             3A20506167   
             652075702E   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001245 00                     .DATA.B     H'00
    00001246 2D5041472B             .SDATA      "-PAG+: Page down.               "
             3A20506167   
             6520646F77   
             6E2E202020   
             2020202020   
             2020202020   
             2020         
    00001266 00                     .DATA.B     H'00
    00001267 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001287 00                     .DATA.B     H'00
    00001288 4F7074696F             .SDATA      "Options menu commands:          "
             6E73206D65   
             6E7520636F   
             6D6D616E64   
             733A202020   
             2020202020   
             2020         
    000012A8 00                     .DATA.B     H'00
    000012A9 2D4F50544E             .SDATA      "-OPTN: Enter set up screen.     "
             3A20456E74   
             6572207365   
             7420757020   
             7363726565   
             6E2E202020   
             2020         
    000012C9 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  393


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012CA 2020202020             .SDATA      "       Same as SHIFT+SETUP.     "
             202053616D   
             6520617320   
             5348494654   
             2B53455455   
             502E202020   
             2020         
    000012EA 00                     .DATA.B     H'00
    000012EB 2D4D454D3A             .SDATA      "-MEM:  Display memory status.   "
             2020446973   
             706C617920   
             6D656D6F72   
             7920737461   
             7475732E20   
             2020         
    0000130B 00                     .DATA.B     H'00
    0000130C 2D48454C50             .SDATA      "-HELP: This help screen.        "
             3A20546869   
             732068656C   
             7020736372   
             65656E2E20   
             2020202020   
             2020         
    0000132C 00                     .DATA.B     H'00
    0000132D 2D41424F55             .SDATA      "-ABOU: Information about program"
             3A20496E66   
             6F726D6174   
             696F6E2061   
             626F757420   
             70726F6772   
             616D         
    0000134D 00                     .DATA.B     H'00
    0000134E 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    0000136E 00                     .DATA.B     H'00
    0000136F 4153434949             .SDATA      "ASCII character set commands:   "
             2063686172   
             6163746572   
             2073657420   
             636F6D6D61   
             6E64733A20   
             2020         
    0000138F 00                     .DATA.B     H'00
    00001390 2D494E5352             .SDATA      "-INSR: Inserts char. into text. "
             3A20496E73   
             6572747320   
             636861722E   
             20696E746F   
             2074657874   
             2E20         
    000013B0 00                     .DATA.B     H'00
    000013B1 2D42494E44             .SDATA      "-BIND: Binds character to key.  "




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  394


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             3A2042696E   
             6473206368   
             6172616374   
             657220746F   
             206B65792E   
             2020         
    000013D1 00                     .DATA.B     H'00
    000013D2 2D55424E44             .SDATA      "-UBND: Unbinds character.       "
             3A20556E62   
             696E647320   
             6368617261   
             637465722E   
             2020202020   
             2020         
    000013F2 00                     .DATA.B     H'00
    000013F3 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001413 00                     .DATA.B     H'00
    00001414 426F756E64             .SDATA      "Bound characters are used in the"
             2063686172   
             6163746572   
             7320617265   
             2075736564   
             20696E2074   
             6865         
    00001434 00                     .DATA.B     H'00
    00001435 656469746F             .SDATA      "editor window by pressing VARS  "
             722077696E   
             646F772062   
             7920707265   
             7373696E67   
             2056415253   
             2020         
    00001455 00                     .DATA.B     H'00
    00001456 6B65792061             .SDATA      "key and then the key defined for"
             6E64207468   
             656E207468   
             65206B6579   
             2064656669   
             6E65642066   
             6F72         
    00001476 00                     .DATA.B     H'00
    00001477 7468652062             .SDATA      "the bound character.            "
             6F756E6420   
             6368617261   
             637465722E   
             2020202020   
             2020202020   
             2020         
    00001497 00                     .DATA.B     H'00
    00001498 496E666F72             .SDATA      "Information in the top bar:     "
             6D6174696F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  395


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6E20696E20   
             7468652074   
             6F70206261   
             723A202020   
             2020         
    000014B8 00                     .DATA.B     H'00
    000014B9 2D4D4D2F53             .SDATA      "-MM/SM/SD: Root directory.      "
             4D2F53443A   
             20526F6F74   
             2064697265   
             63746F7279   
             2E20202020   
             2020         
    000014D9 00                     .DATA.B     H'00
    000014DA 2D46696C65             .SDATA      "-File name + [Folder] or Cursor."
             206E616D65   
             202B205B46   
             6F6C646572   
             5D206F7220   
             437572736F   
             722E         
    000014FA 00                     .DATA.B     H'00
    000014FB 2D532F2D3A             .SDATA      "-S/-: File saved flag           "
             2046696C65   
             2073617665   
             6420666C61   
             6720202020   
             2020202020   
             2020         
    0000151B 00                     .DATA.B     H'00
    0000151C 2D542F423A             .SDATA      "-T/B: Text file / Binary file   "
             2054657874   
             2066696C65   
             202F204269   
             6E61727920   
             66696C6520   
             2020         
    0000153C 00                     .DATA.B     H'00
    0000153D 2D312F532F             .SDATA      "-1/S/a/A/b/B:Keyboard mode->    "
             612F412F62   
             2F423A4B65   
             79626F6172   
             64206D6F64   
             652D3E2020   
             2020         
    0000155D 00                     .DATA.B     H'00
    0000155E 204E756D65             .SDATA      " Numeric,Shift,Alpha lower,     "
             7269632C53   
             686966742C   
             416C706861   
             206C6F7765   
             722C202020   
             2020         
    0000157E 00                     .DATA.B     H'00
    0000157F 20416C7068             .SDATA      " Alpha upper,Alpha locked lower,"
             6120757070   
             65722C416C   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  396


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             706861206C   
             6F636B6564   
             206C6F7765   
             722C         
    0000159F 00                     .DATA.B     H'00
    000015A0 20416C7068             .SDATA      " Alpha locked upper.            "
             61206C6F63   
             6B65642075   
             707065722E   
             2020202020   
             2020202020   
             2020         
    000015C0 00                     .DATA.B     H'00
    000015C1 2D2D2D2D2D             .SDATA      "-------------SET UP-------------"
             2D2D2D2D2D   
             2D2D2D5345   
             542055502D   
             2D2D2D2D2D   
             2D2D2D2D2D   
             2D2D         
    000015E1 00                     .DATA.B     H'00
    000015E2 3C54727920             .SDATA      "<Try SDC>                       "
             5344433E20   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001602 00                     .DATA.B     H'00
    00001603 2D5945533A             .SDATA      "-YES: card is checked everytime "
             2063617264   
             2069732063   
             6865636B65   
             6420657665   
             727974696D   
             6520         
    00001623 00                     .DATA.B     H'00
    00001624 2074686520             .SDATA      " the file explorer is called.   "
             66696C6520   
             6578706C6F   
             7265722069   
             732063616C   
             6C65642E20   
             2020         
    00001644 00                     .DATA.B     H'00
    00001645 2D4E4F3A20             .SDATA      "-NO: card is not tried never.   "
             6361726420   
             6973206E6F   
             7420747269   
             6564206E65   
             7665722E20   
             2020         
    00001665 00                     .DATA.B     H'00
    00001666 2055736520             .SDATA      " Use this option if your calc   "
             7468697320   
             6F7074696F   
             6E20696620   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  397


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             796F757220   
             63616C6320   
             2020         
    00001686 00                     .DATA.B     H'00
    00001687 20646F6573             .SDATA      " does not have SD card because  "
             206E6F7420   
             6861766520   
             5344206361   
             7264206265   
             6361757365   
             2020         
    000016A7 00                     .DATA.B     H'00
    000016A8 2066696C65             .SDATA      " file explorer opens faster.    "
             206578706C   
             6F72657220   
             6F70656E73   
             2066617374   
             65722E2020   
             2020         
    000016C8 00                     .DATA.B     H'00
    000016C9 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    000016E9 00                     .DATA.B     H'00
    000016EA 3C53797374             .SDATA      "<System Files>:                 "
             656D204669   
             6C65733E3A   
             2020202020   
             2020202020   
             2020202020   
             2020         
    0000170A 00                     .DATA.B     H'00
    0000170B 2D4849444E             .SDATA      "-HIDN: System files are hidden  "
             3A20537973   
             74656D2066   
             696C657320   
             6172652068   
             696464656E   
             2020         
    0000172B 00                     .DATA.B     H'00
    0000172C 20696E2074             .SDATA      " in the file explorer. System   "
             6865206669   
             6C65206578   
             706C6F7265   
             722E205379   
             7374656D20   
             2020         
    0000174C 00                     .DATA.B     H'00
    0000174D 2066696C65             .SDATA      " files are *.g1? and those in   "
             7320617265   
             202A2E6731   
             3F20616E64   
             2074686F73   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  398


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6520696E20   
             2020         
    0000176D 00                     .DATA.B     H'00
    0000176E 2077686963             .SDATA      " which attribute is not DT_FILE "
             6820617474   
             7269627574   
             6520697320   
             6E6F742044   
             545F46494C   
             4520         
    0000178E 00                     .DATA.B     H'00
    0000178F 206F722044             .SDATA      " or DT_DIRECTORY. Files EDIT.CFG"
             545F444952   
             4543544F52   
             592E204669   
             6C65732045   
             4449542E43   
             4647         
    000017AF 00                     .DATA.B     H'00
    000017B0 20616E6420             .SDATA      " and EDIT.DIR are system files. "
             454449542E   
             4449522061   
             7265207379   
             7374656D20   
             66696C6573   
             2E20         
    000017D0 00                     .DATA.B     H'00
    000017D1 2D44495350             .SDATA      "-DISP: System files are         "
             3A20537973   
             74656D2066   
             696C657320   
             6172652020   
             2020202020   
             2020         
    000017F1 00                     .DATA.B     H'00
    000017F2 2064697370             .SDATA      " displayed in the file explorer."
             6C61796564   
             20696E2074   
             6865206669   
             6C65206578   
             706C6F7265   
             722E         
    00001812 00                     .DATA.B     H'00
    00001813 3C4E657720             .SDATA      "<New Line>                      "
             4C696E653E   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001833 00                     .DATA.B     H'00
    00001834 2D57494E3A             .SDATA      "-WIN: Files are stored using    "
             2046696C65   
             7320617265   
             2073746F72   
             6564207573   
             696E672020   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  399


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2020         
    00001854 00                     .DATA.B     H'00
    00001855 2043522B4C             .SDATA      " CR+LF as line terminator as in "
             4620617320   
             6C696E6520   
             7465726D69   
             6E61746F72   
             2061732069   
             6E20         
    00001875 00                     .DATA.B     H'00
    00001876 2077696E64             .SDATA      " windows systems.               "
             6F77732073   
             797374656D   
             732E202020   
             2020202020   
             2020202020   
             2020         
    00001896 00                     .DATA.B     H'00
    00001897 2D554E4958             .SDATA      "-UNIX: Files are stored using LF"
             3A2046696C   
             6573206172   
             652073746F   
             7265642075   
             73696E6720   
             4C46         
    000018B7 00                     .DATA.B     H'00
    000018B8 206173206C             .SDATA      " as line terminator as in unix  "
             696E652074   
             65726D696E   
             61746F7220   
             617320696E   
             20756E6978   
             2020         
    000018D8 00                     .DATA.B     H'00
    000018D9 2073797374             .SDATA      " systems.                       "
             656D732E20   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    000018F9 00                     .DATA.B     H'00
    000018FA 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    0000191A 00                     .DATA.B     H'00
    0000191B 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  400


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000193B 00                     .DATA.B     H'00
    0000193C 3C576F7264             .SDATA      "<Word Wrap>                     "
             2057726170   
             3E20202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    0000195C 00                     .DATA.B     H'00
    0000195D 2D4F4E3A20             .SDATA      "-ON: Line breaks happen in      "
             4C696E6520   
             627265616B   
             7320686170   
             70656E2069   
             6E20202020   
             2020         
    0000197D 00                     .DATA.B     H'00
    0000197E 2062657477             .SDATA      " between of words, no cuts in   "
             65656E206F   
             6620776F72   
             64732C206E   
             6F20637574   
             7320696E20   
             2020         
    0000199E 00                     .DATA.B     H'00
    0000199F 20696E2074             .SDATA      " in the middle of words.        "
             6865206D69   
             64646C6520   
             6F6620776F   
             7264732E20   
             2020202020   
             2020         
    000019BF 00                     .DATA.B     H'00
    000019C0 2D4F46463A             .SDATA      "-OFF: Line breaks happen        "
             204C696E65   
             2062726561   
             6B73206861   
             7070656E20   
             2020202020   
             2020         
    000019E0 00                     .DATA.B     H'00
    000019E1 20616E7977             .SDATA      " anywhere, words are cut in     "
             686572652C   
             20776F7264   
             7320617265   
             2063757420   
             696E202020   
             2020         
    00001A01 00                     .DATA.B     H'00
    00001A02 2062657477             .SDATA      " between.                       "
             65656E2E20   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001A22 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  401


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A23 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001A43 00                     .DATA.B     H'00
    00001A44 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001A64 00                     .DATA.B     H'00
    00001A65 3C42797465             .SDATA      "<Bytes free>                    "
             7320667265   
             653E202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001A85 00                     .DATA.B     H'00
    00001A86 2D5945533A             .SDATA      "-YES: Remaining memory is       "
             2052656D61   
             696E696E67   
             206D656D6F   
             7279206973   
             2020202020   
             2020         
    00001AA6 00                     .DATA.B     H'00
    00001AA7 2064697370             .SDATA      " displayed in last row of file  "
             6C61796564   
             20696E206C   
             6173742072   
             6F77206F66   
             2066696C65   
             2020         
    00001AC7 00                     .DATA.B     H'00
    00001AC8 206578706C             .SDATA      " explorer.                      "
             6F7265722E   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001AE8 00                     .DATA.B     H'00
    00001AE9 2D4E4F3A20             .SDATA      "-NO: Remaining memory is not    "
             52656D6169   
             6E696E6720   
             6D656D6F72   
             7920697320   
             6E6F742020   
             2020         
    00001B09 00                     .DATA.B     H'00
    00001B0A 2064697370             .SDATA      " displayed.                     "




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  402


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6C61796564   
             2E20202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001B2A 00                     .DATA.B     H'00
    00001B2B 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001B4B 00                     .DATA.B     H'00
    00001B4C 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001B6C 00                     .DATA.B     H'00
    00001B6D 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001B8D 00                     .DATA.B     H'00
    00001B8E 3C44656661             .SDATA      "<Default root directory>        "
             756C742072   
             6F6F742064   
             6972656374   
             6F72793E20   
             2020202020   
             2020         
    00001BAE 00                     .DATA.B     H'00
    00001BAF 2D4D41494E             .SDATA      "-MAIN: Set main memory as root  "
             3A20536574   
             206D61696E   
             206D656D6F   
             7279206173   
             20726F6F74   
             2020         
    00001BCF 00                     .DATA.B     H'00
    00001BD0 207768656E             .SDATA      " when file explorer opens.      "
             2066696C65   
             206578706C   
             6F72657220   
             6F70656E73   
             2E20202020   
             2020         
    00001BF0 00                     .DATA.B     H'00
    00001BF1 2D534D454D             .SDATA      "-SMEM: Set storage memory as    "
             3A20536574   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  403


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2073746F72   
             616765206D   
             656D6F7279   
             2061732020   
             2020         
    00001C11 00                     .DATA.B     H'00
    00001C12 20726F6F74             .SDATA      " root when file explorer opens. "
             207768656E   
             2066696C65   
             206578706C   
             6F72657220   
             6F70656E73   
             2E20         
    00001C32 00                     .DATA.B     H'00
    00001C33 2D5344433A             .SDATA      "-SDC: Set SD Card as root when  "
             2053657420   
             5344204361   
             7264206173   
             20726F6F74   
             207768656E   
             2020         
    00001C53 00                     .DATA.B     H'00
    00001C54 2066696C65             .SDATA      " file explorer opens.            "
             206578706C   
             6F72657220   
             6F70656E73   
             2E20202020   
             2020202020   
             202020       
    00001C75 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001C95 00                     .DATA.B     H'00
    00001C96 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001CB6 00                     .DATA.B     H'00
    00001CB7 3C466F6E74             .SDATA      "<Font size>                     "
             2073697A65   
             3E20202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001CD7 00                     .DATA.B     H'00
    00001CD8 2D54494E59             .SDATA      "-TINY: Set font size to 3x5     "
             3A20536574   
             20666F6E74   
             2073697A65   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  404


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             20746F2033   
             7835202020   
             2020         
    00001CF8 00                     .DATA.B     H'00
    00001CF9 2033322063             .SDATA      " 32 columns x 8 rows            "
             6F6C756D6E   
             7320782038   
             20726F7773   
             2020202020   
             2020202020   
             2020         
    00001D19 00                     .DATA.B     H'00
    00001D1A 2D534D414C             .SDATA      "-SMAL: Set font size to 3x6     "
             3A20536574   
             20666F6E74   
             2073697A65   
             20746F2033   
             7836202020   
             2020         
    00001D3A 00                     .DATA.B     H'00
    00001D3B 2033322063             .SDATA      " 32 columns x 7 rows            "
             6F6C756D6E   
             7320782037   
             20726F7773   
             2020202020   
             2020202020   
             2020         
    00001D5B 00                     .DATA.B     H'00
    00001D5C 2D4D45444D             .SDATA      "-MEDM: Set font size to 3x6     "
             3A20536574   
             20666F6E74   
             2073697A65   
             20746F2033   
             7836202020   
             2020         
    00001D7C 00                     .DATA.B     H'00
    00001D7D 2032352063             .SDATA      " 25 columns x 7 rows            "
             6F6C756D6E   
             7320782037   
             20726F7773   
             2020202020   
             2020202020   
             2020         
    00001D9D 00                     .DATA.B     H'00
    00001D9E 2D4C415247             .SDATA      "-LARG: Set font size to 5x7     "
             3A20536574   
             20666F6E74   
             2073697A65   
             20746F2035   
             7837202020   
             2020         
    00001DBE 00                     .DATA.B     H'00
    00001DBF 2032312063             .SDATA      " 21 columns x 6 rows            "
             6F6C756D6E   
             7320782036   
             20726F7773   
             2020202020   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  405


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2020202020   
             2020         
    00001DDF 00                     .DATA.B     H'00
    00001DE0 3C496E666F             .SDATA      "<Info Bar>                      "
             204261723E   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001E00 00                     .DATA.B     H'00
    00001E01 2D464F4C44             .SDATA      "-FOLD: Folder name is displayed "
             3A20466F6C   
             646572206E   
             616D652069   
             7320646973   
             706C617965   
             6420         
    00001E21 00                     .DATA.B     H'00
    00001E22 20696E2074             .SDATA      " in the top bar.                "
             686520746F   
             7020626172   
             2E20202020   
             2020202020   
             2020202020   
             2020         
    00001E42 00                     .DATA.B     H'00
    00001E43 2D43555253             .SDATA      "-CURS: Current line and total   "
             3A20437572   
             72656E7420   
             6C696E6520   
             616E642074   
             6F74616C20   
             2020         
    00001E63 00                     .DATA.B     H'00
    00001E64 206C696E65             .SDATA      " lines are displayed in the top "
             7320617265   
             2064697370   
             6C61796564   
             20696E2074   
             686520746F   
             7020         
    00001E84 00                     .DATA.B     H'00
    00001E85 206261722E             .SDATA      " bar.                           "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001EA5 00                     .DATA.B     H'00
    00001EA6 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  406


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2020         
    00001EC6 00                     .DATA.B     H'00
    00001EC7 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001EE7 00                     .DATA.B     H'00
    00001EE8 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00001F08 00                     .DATA.B     H'00
    00001F09 3C54657874             .SDATA      "<Text buffer size>              "
             2062756666   
             6572207369   
             7A653E2020   
             2020202020   
             2020202020   
             2020         
    00001F29 00                     .DATA.B     H'00
    00001F2A 5468697320             .SDATA      "This option sets the size of the"
             6F7074696F   
             6E20736574   
             7320746865   
             2073697A65   
             206F662074   
             6865         
    00001F4A 00                     .DATA.B     H'00
    00001F4B 6275666665             .SDATA      "buffer used to load the files.  "
             7220757365   
             6420746F20   
             6C6F616420   
             7468652066   
             696C65732E   
             2020         
    00001F6B 00                     .DATA.B     H'00
    00001F6C 4974206973             .SDATA      "It is maximun file size that can"
             206D617869   
             6D756E2066   
             696C652073   
             697A652074   
             6861742063   
             616E         
    00001F8C 00                     .DATA.B     H'00
    00001F8D 6265206C6F             .SDATA      "be loaded in the text editor.   "
             6164656420   
             696E207468   
             6520746578   
             7420656469   
             746F722E20   
             2020         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  407


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001FAD 00                     .DATA.B     H'00
    00001FAE 3C436C6970             .SDATA      "<Clipboard buffer size>         "
             626F617264   
             2062756666   
             6572207369   
             7A653E2020   
             2020202020   
             2020         
    00001FCE 00                     .DATA.B     H'00
    00001FCF 53697A6520             .SDATA      "Size of the clipboard buffer. It"
             6F66207468   
             6520636C69   
             70626F6172   
             6420627566   
             6665722E20   
             4974         
    00001FEF 00                     .DATA.B     H'00
    00001FF0 6973207468             .SDATA      "is the maximun data that you can"
             65206D6178   
             696D756E20   
             6461746120   
             7468617420   
             796F752063   
             616E         
    00002010 00                     .DATA.B     H'00
    00002011 616E642063             .SDATA      "and copy and paste.             "
             6F70792061   
             6E64207061   
             7374652E20   
             2020202020   
             2020202020   
             2020         
    00002031 00                     .DATA.B     H'00
    00002032 3C46696C65             .SDATA      "<Files/Dir.>                    "
             732F446972   
             2E3E202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00002052 00                     .DATA.B     H'00
    00002053 5468697320             .SDATA      "This is the maximun number of   "
             6973207468   
             65206D6178   
             696D756E20   
             6E756D6265   
             72206F6620   
             2020         
    00002073 00                     .DATA.B     H'00
    00002074 66696C6573             .SDATA      "files per folder that can be    "
             2070657220   
             666F6C6465   
             7220746861   
             742063616E   
             2062652020   
             2020         
    00002094 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  408


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002095 646973706C             .SDATA      "displayed in the file explorer  "
             6179656420   
             696E207468   
             652066696C   
             6520657870   
             6C6F726572   
             2020         
    000020B5 00                     .DATA.B     H'00
    000020B6 3C466F6C64             .SDATA      "<Foldr.Max.>                    "
             722E4D6178   
             2E3E202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    000020D6 00                     .DATA.B     H'00
    000020D7 5468697320             .SDATA      "This is the maximun number of   "
             6973207468   
             65206D6178   
             696D756E20   
             6E756D6265   
             72206F6620   
             2020         
    000020F7 00                     .DATA.B     H'00
    000020F8 666F6C6465             .SDATA      "folders that can be displayed in"
             7273207468   
             6174206361   
             6E20626520   
             646973706C   
             6179656420   
             696E         
    00002118 00                     .DATA.B     H'00
    00002119 7468652066             .SDATA      "the folder selection window.    "
             6F6C646572   
             2073656C65   
             6374696F6E   
             2077696E64   
             6F772E2020   
             2020         
    00002139 00                     .DATA.B     H'00
    0000213A 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    0000215A 00                     .DATA.B     H'00
    0000215B 3C4175746F             .SDATA      "<Auto open>                     "
             206F70656E   
             3E20202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    0000217B 00                     .DATA.B     H'00
    0000217C 2D5945533A             .SDATA      "-YES: Enable automatic file open"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  409


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             20456E6162   
             6C65206175   
             746F6D6174   
             6963206669   
             6C65206F70   
             656E         
    0000219C 00                     .DATA.B     H'00
    0000219D 207768656E             .SDATA      " when application starts.       "
             206170706C   
             6963617469   
             6F6E207374   
             617274732E   
             2020202020   
             2020         
    000021BD 00                     .DATA.B     H'00
    000021BE 2D4E4F3A20             .SDATA      "-NO: Disable automatic file open"
             4469736162   
             6C65206175   
             746F6D6174   
             6963206669   
             6C65206F70   
             656E         
    000021DE 00                     .DATA.B     H'00
    000021DF 3C4175746F             .SDATA      "<Auto root/Auto name/Auto foldr>"
             20726F6F74   
             2F4175746F   
             206E616D65   
             2F4175746F   
             20666F6C64   
             723E         
    000021FF 00                     .DATA.B     H'00
    00002200 2D5345543A             .SDATA      "-SET: Set path for file to be   "
             2053657420   
             7061746820   
             666F722066   
             696C652074   
             6F20626520   
             2020         
    00002220 00                     .DATA.B     H'00
    00002221 206F70656E             .SDATA      " opened automatically.          "
             6564206175   
             746F6D6174   
             6963616C6C   
             792E202020   
             2020202020   
             2020         
    00002241 00                     .DATA.B     H'00
    00002242 2D434C523A             .SDATA      "-CLR: Clear file path.          "
             20436C6561   
             722066696C   
             6520706174   
             682E202020   
             2020202020   
             2020         
    00002262 00                     .DATA.B     H'00
    00002263 2020202020             .SDATA      "                                "
             2020202020   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  410


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00002283 00                     .DATA.B     H'00
    00002284 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    000022A4 00                     .DATA.B     H'00
    000022A5 2020546869             .SDATA      "  This program was developed    "
             732070726F   
             6772616D20   
             7761732064   
             6576656C6F   
             7065642020   
             2020         
    000022C5 00                     .DATA.B     H'00
    000022C6 202066726F             .SDATA      "  from August 2008 to April     "
             6D20417567   
             7573742032   
             3030382074   
             6F20417072   
             696C202020   
             2020         
    000022E6 00                     .DATA.B     H'00
    000022E7 2020323030             .SDATA      "  2009 by Diego Marin. Report   "
             3920627920   
             446965676F   
             204D617269   
             6E2E205265   
             706F727420   
             2020         
    00002307 00                     .DATA.B     H'00
    00002308 2020616E79             .SDATA      "  any bugs or comments to:      "
             2062756773   
             206F722063   
             6F6D6D656E   
             747320746F   
             3A20202020   
             2020         
    00002328 00                     .DATA.B     H'00
    00002329 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    00002349 00                     .DATA.B     H'00
    0000234A 2020202020             .SDATA      "       dmarin75@yahoo.es        "
             2020646D61   
             72696E3735   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  411


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             407961686F   
             6F2E657320   
             2020202020   
             2020         
    0000236A 00                     .DATA.B     H'00
    0000236B 2548454C50             .SDATA      "%HELPEND%"
             454E4425     
    00002374 00                     .DATA.B     H'00
    00002375 0000001701             .DATAB.B    23,0
             00           
    0000238C              L1484:
    0000238C 2548454C50             .SDATA      "%HELPEND%"
             454E4425     
    00002395 00                     .DATA.B     H'00
    00002396 00000002               .RES.W      1
    00002398              L1488:
    00002398 2020202020             .SDATA      "                                "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020         
    000023B8 00                     .DATA.B     H'00
    000023B9 00000001               .RES.B      1
    000023BA 00000002               .RES.W      1
    000023BC              L1520:
    000023BC 2041534349             .SDATA      " ASCII Character set "
             4920436861   
             7261637465   
             7220736574   
             20           
    000023D1 00                     .DATA.B     H'00
    000023D2 00000002               .RES.W      1
    000023D4              L1532:
    000023D4 4368617261             .SDATA      "Character is"
             6374657220   
             6973         
    000023E0 00                     .DATA.B     H'00
    000023E1 00000001               .RES.B      1
    000023E2 00000002               .RES.W      1
    000023E4              L1533:
    000023E4 616C726561             .SDATA      "already bound."
             647920626F   
             756E642E     
    000023F2 00                     .DATA.B     H'00
    000023F3 00000001               .RES.B      1
    000023F4              L1537:
    000023F4 43616E6E6F             .SDATA      "Cannot bind more"
             742062696E   
             64206D6F72   
             65           
    00002404 00                     .DATA.B     H'00
    00002405 00000001               .RES.B      1
    00002406 00000002               .RES.W      1
    00002408              L1538:
    00002408 6368617261             .SDATA      "characters."




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  412


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6374657273   
             2E           
    00002413 00                     .DATA.B     H'00
    00002414              L1539:
    00002414 5072657373             .SDATA      "Press bind key or"
             2062696E64   
             206B657920   
             6F72         
    00002425 00                     .DATA.B     H'00
    00002426 00000002               .RES.W      1
    00002428              L1540:
    00002428 5B45584954             .SDATA      "[EXIT] to cancel."
             5D20746F20   
             63616E6365   
             6C2E         
    00002439 00                     .DATA.B     H'00
    0000243A 00000002               .RES.W      1
    0000243C              L1542:
    0000243C 43616E6E6F             .SDATA      "Cannot bind to"
             742062696E   
             6420746F     
    0000244A 00                     .DATA.B     H'00
    0000244B 00000001               .RES.B      1
    0000244C              L1543:
    0000244C 7468617420             .SDATA      "that key."
             6B65792E     
    00002455 00                     .DATA.B     H'00
    00002456 00000002               .RES.W      1
    00002458              L1547:
    00002458 5468697320             .SDATA      "This key is"
             6B65792069   
             73           
    00002463 00                     .DATA.B     H'00
    00002464              L1548:
    00002464 616C726561             .SDATA      "already used for"
             6479207573   
             656420666F   
             72           
    00002474 00                     .DATA.B     H'00
    00002475 00000001               .RES.B      1
    00002476 00000002               .RES.W      1
    00002478              L1549:
    00002478 616E6F7468             .SDATA      "another character"
             6572206368   
             6172616374   
             6572         
    00002489 00                     .DATA.B     H'00
    0000248A 00000002               .RES.W      1
    0000248C              L1550:
    0000248C 4368617261             .SDATA      "Character bind"
             6374657220   
             62696E64     
    0000249A 00                     .DATA.B     H'00
    0000249B 00000001               .RES.B      1
    0000249C              L1551:
    0000249C 636F6D706C             .SDATA      "completed."
             657465642E   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  413


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000024A6 00                     .DATA.B     H'00
    000024A7 00000001               .RES.B      1
    000024A8              L1555:
    000024A8 4368617261             .SDATA      "Character unbind"
             6374657220   
             756E62696E   
             64           
    000024B8 00                     .DATA.B     H'00
    000024B9 00000001               .RES.B      1
    000024BA 00000002               .RES.W      1
    000024BC              L1557:
    000024BC 4368617261             .SDATA      "Character not"
             6374657220   
             6E6F74       
    000024C9 00                     .DATA.B     H'00
    000024CA 00000002               .RES.W      1
    000024CC              L1558:
    000024CC 626F756E64             .SDATA      "bound before."
             206265666F   
             72652E       
    000024D9 00                     .DATA.B     H'00
D   00000000              __$iStart$1144:                  ; static: iStart
    00000000 00000000               .DATA.L     H'00000000
    00000004              __$iRow$1145:                    ; static: iRow
    00000004 00000000               .DATA.L     H'00000000
    00000008              __$iARow$1146:                   ; static: iARow
    00000008 00000000               .DATA.L     H'00000000
    0000000C              __$iCx$1511:                     ; static: iCx
    0000000C 00000000               .DATA.L     H'00000000
    00000010              __$iCy$1512:                     ; static: iCy
    00000010 00000001               .DATA.L     H'00000001
    00000014              __$iACx$1513:                    ; static: iACx
    00000014 00000000               .DATA.L     H'00000000
    00000018              __$iACy$1514:                    ; static: iACy
    00000018 00000001               .DATA.L     H'00000001
B   00000000              __sRoot:                         ; static: _sRoot
    00000000 00000005               .RES.B      5
    00000005              __sFolder:                       ; static: _sFolder
    00000005 0000000D               .RES.B      13
    00000012              __sFile:                         ; static: _sFile
    00000012 0000000D               .RES.B      13
    0000001F 00000001               .RES.B      1
    00000020              __sText:                         ; static: _sText
    00000020 00000004               .RES.L      1
    00000024              __sClip:                         ; static: _sClip
    00000024 00000004               .RES.L      1
    00000028              __iBinary:                       ; static: _iBinary
    00000028 00000004               .RES.L      1
    0000002C              __iSaved:                        ; static: _iSaved
    0000002C 00000004               .RES.L      1
    00000030              __iNewFile:                      ; static: _iNewFile
    00000030 00000004               .RES.L      1
    00000034              __sConfig:                       ; static: _sConfig
    00000034 00000100               .RES.L      64
    00000134              __iTextSize:                     ; static: _iTextSize
    00000134 00000004               .RES.L      1
    00000138              __iClipSize:                     ; static: _iClipSize




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE  414


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000138 00000004               .RES.L      1
    0000013C              __iAppMode:                      ; static: _iAppMode
    0000013C 00000004               .RES.L      1
    00000140              __sFiles:                        ; static: _sFiles
    00000140 00000004               .RES.L      1
    00000144              __sFolders:                      ; static: _sFolders
    00000144 00000004               .RES.L      1
    00000148              __$iMark$717:                    ; static: iMark
    00000148 00000004               .RES.L      1
    0000014C              __$iHandle$844:                  ; static: iHandle
    0000014C 00000004               .RES.L      1
    00000150              __$iSeek$845:                    ; static: iSeek
    00000150 00000004               .RES.L      1
    00000154              __$sFolder0$846:                 ; static: sFolder0
    00000154 00000024               .RES.L      9
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1












































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 02-Nov-2019 20:43:47  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        79




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:     5365



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000074F4 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               000024DA Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               0000001C Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000178 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00009B72 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           75
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          60
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:          1495






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk1EA5.tmp 

